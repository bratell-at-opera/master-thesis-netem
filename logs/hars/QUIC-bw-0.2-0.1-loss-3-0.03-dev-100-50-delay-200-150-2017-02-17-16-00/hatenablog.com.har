{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "WebInspector",
      "version": "537.36"
    },
    "pages": [
      {
        "startedDateTime": "2017-02-17T18:59:38.834Z",
        "id": "page_14",
        "title": "https://web.hfelo.se/hatenablog.com",
        "pageTimings": {
          "onContentLoad": null,
          "onLoad": null
        }
      }
    ],
    "entries": [
      {
        "startedDateTime": "2017-02-17T18:59:38.834Z",
        "time": 959.2130000237375,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/hatenablog.com",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Upgrade-Insecure-Requests",
              "value": "1"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 301,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "status",
              "value": "301"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "location",
              "value": "/hatenablog.com/"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "x-unknown"
          },
          "redirectURL": "/hatenablog.com/",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 145
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0.329999951645732,
          "send": 0.162999844178557,
          "wait": 958.0190000124277,
          "receive": 0.7010002154855783,
          "ssl": 958.107999991626
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:39.794Z",
        "time": 1369.567000074312,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/hatenablog.com/",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Tue, 31 Jan 2017 00:24:52 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588fd954-d16b\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 53611,
            "mimeType": "text/html",
            "text": "<!DOCTYPE html>\n<html data-device=\"pc\" data-admin-domain=\"http://blog.hatena.ne.jp\">\n  <head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb#\">\n\n    <meta charset=\"utf-8\"/>\n\n\n  <meta name=\"viewport\" content=\"width=device-width\">\n\n\n\n\n\n\n\n\n\n\n\n<title>Hatena Blog</title>\n\n\n<script type=\"text/javascript\">\n// <!--\n\nif (~navigator.userAgent.indexOf('Mac OS X')) {\n  document.write('<style type=\"text/css\">html, body { font-family: \\x27Helvetica\\x27, \\x27Arial\\x27, \\x27ヒラギノ角ゴ Pro W3\\x27, \\x27Hiragino Kaku Gothic Pro\\x27, sans-serif; } </style>');\n} else {\n  document.write('<style type=\"text/css\">html, body { font-family: \\x27Helvetica\\x27, \\x27Arial\\x27, \\x27メイリオ\\x27, \\x27Meiryo\\x27, \\x27MS PGothic\\x27, sans-serif; } </style>');\n}\n\n// -->\n</script>\n\n\n\n\n<link rel=\"shortcut icon\" href=\"../cdn.blog.st-hatena.com/images/favicon.ico%3Fversion=3fb866e995c13b5fc24055535557cd7c5c1f78a3&amp;env=production\" />\n\n<link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"https://cdn.blog.st-hatena.com/images/touch-icon-ipad.png?version=9e2f9bd92780bffd5b217a64249bf49d35982c4b&amp;env=production\">\n<link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"https://cdn.blog.st-hatena.com/images/touch-icon-iphone-retina.png?version=d21dcb32057654ef922f6132b2bc09228975d401&amp;env=production\">\n<link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"https://cdn.blog.st-hatena.com/images/touch-icon-ipad-retina.png?version=3a65594036f7199cde7fc99eb86f965d42c0bc47&amp;env=production\">\n<link rel=\"icon\" sizes=\"192x192\" href=\"https://cdn.blog.st-hatena.com/images/common/meta-icon-global.png?version=695328b41f3c476d641267d307b5e6c7e5d31b8f&amp;env=production\">\n\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../cdn.blog.st-hatena.com/css/service.css%3Fversion=82d341e0c0d884831642dfe4e418cbe57cdd8b8a&amp;env=production.css\"/>\n\n\n\n<link rel=\"canonical\" href=\"index.html\">\n\n  <meta property=\"og:image\" content=\"https://cdn.blog.st-hatena.com/images/theme/og-image-1500.png\"/>\n  <meta name=\"twitter:image\" content=\"https://cdn.blog.st-hatena.com/images/theme/og-image-1500.png\"/>\n\n  <meta name=\"description\" content=\"Hatena Blog is an easy to use blog service that anyone can use for free. Write about your daily life and thoughts so you will never forget them.\">\n  <meta property=\"og:description\" content=\"Hatena Blog is an easy to use blog service that anyone can use for free. Write about your daily life and thoughts so you will never forget them.\" />\n  <meta name=\"twitter:description\" content=\"Hatena Blog is an easy to use blog service that anyone can use for free. Write about your daily life and thoughts so you will never forget them.\" />\n  <meta property=\"og:url\" content=\"http://hatenablog.com/\" />\n  <meta property=\"og:title\" content=\"Hatena Blog\" />\n  <meta name=\"twitter:title\" content=\"Hatena Blog\" />\n\n  <meta property=\"og:type\" content=\"website\" />\n  <meta property=\"og:site_name\" content=\"Hatena Blog\" /><meta name=\"twitter:card\" content=\"summary\" />\n<meta name=\"twitter:site\" content=\"@hatenablog\" />\n\n\n\n\n\n\n\n    <script async='async' src='https://www.googletagservices.com/tag/js/gpt.js'></script>\n    <script>\n      var googletag = googletag || {};\n      googletag.cmd = googletag.cmd || [];\n    </script>\n\n    \n    \n    \n    <script>\n      googletag.cmd.push(function() {\n        googletag.defineSlot(\"/4374287/blo_pc_o_5_nat_0_no\", ['fluid'], \"dfc-add-in-recommended-entries\").addService(googletag.pubads());\n        googletag.pubads().enableSingleRequest();\n        googletag.enableServices();\n      });\n    </script>\n\n  </head>\n\n  <body class=\"page-global-top serviceTop\"><!-- Google Universal Analytics -->\n<script id=\"google-analytics-script\">\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-29716941-6', 'auto', {'name': 'HatenaBlogTracker', 'sampleRate': 1});\n  ga('HatenaBlogTracker.require', 'displayfeatures');\n  ga('HatenaBlogTracker.send', 'pageview');\n  ga('create', 'UA-29716941-26', 'auto', {'name': 'HatenaBlogSeparatedTracker', 'sampleRate': 10});\n  ga('HatenaBlogSeparatedTracker.require', 'displayfeatures');\n  ga('HatenaBlogSeparatedTracker.send', 'pageview');\n\n  \n\n  \n  ga('create', 'UA-7855606-1', 'auto', {'name': 'HatenaGlobalTracker', 'sampleRate': 1});\n  ga('HatenaGlobalTracker.require', 'displayfeatures');\n  ga('HatenaGlobalTracker.send', 'pageview');\n</script>\n<!-- End Google Universal Analytics -->\n\n\n\n    <div id=\"globalheader-container\"  data-brand=\"hatenablog\">\n  <iframe id=\"globalheader\" height=\"37\" frameborder=\"0\" allowTransparency=\"true\"></iframe>\n</div>\n\n\n    <div class=\"serviceTop-container\">\n      <header class=\"serviceTop-header\">\n        <div class=\"serviceTop-header-box-logo\">\n          <h1>\n            <a href=\"index.html\">\n              <img src=\"../cdn.blog.st-hatena.com/images/common/logo-icon.svg%3Fversion=c570949326e4e1ec6f258179bb9985ce829d4d0c&amp;env=production\" alt=\"はてなブログ\" class=\"serviceTop-header-box-logo-img\" width=\"50\" height=\"50\">\n            </a>\n          </h1>\n          <span class=\"serviceTop-header-box-logo-dash\"></span>\n          <p>思いは言葉に。</p>\n        </div>\n      </header>\n\n      <section class=\"serviceTop-recommend\">\n        <header class=\"serviceTop-container-header\">\n          <h2>おすすめ記事</h2>\n        </header>\n\n        \n\n        <div class=\"serviceTop-recommend-primary\">\n          \n          \n          <div class=\"serviceTop-entry\n          \">\n            \n\n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://www.ippaikaasan.com/entry/2017/01/30/231259\">２人目を産んだ私から、１人目を育てている私へ</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://www.ippaikaasan.com/entry/2017/01/30/231259\">いっぱいかあさん</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T14:12:59Z\" data-relative data-epoch=\"1485785579000\">2017-01-30 23:12:59</time>\n            </span>\n            \n              <p class=\"serviceTop-entry-content\">\n                <a href=\"http://www.ippaikaasan.com/entry/2017/01/30/231259\">同じ親から生まれたのに、１人目（キュー）と２人目（ナッちゃん）は全然違いました。</a>\n              </p>\n            \n          </div>\n        \n          <div class=\"serviceTop-recommend-primary-img\">\n            <a href=\"http://www.ippaikaasan.com/entry/2017/01/30/231259\" class=\"serviceTop-entry-img-a\">\n              <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/82c3ff925fecb84c7bc7324a4dcebfdfa130801a/backend=imagemagick%3Bheight=340%3Bversion=1%3Bwidth=600/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fk%252Fkanemotonomukuu%252F20170129%252F20170129212644.jpg');\"></div>\n            </a>\n          </div>\n        </div>\n\n        <div class=\"serviceTop-recommend-grid-wrapper\">\n          <div class=\"serviceTop-recommend-grid  recommend-grid-line1 grid-has-ad\">\n\n            \n          \n          <div class=\"serviceTop-entry has-thumb\n          \">\n            \n              \n                <a href=\"http://first1178.hatenablog.com/entry/2017/01/29/171515\" class=\"serviceTop-entry-img-a\">\n                  <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/c0dedcf96d827b78874bdcd84fd2d738abaf2aaa/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Ff%252Ffirst1178%252F20170129%252F20170129165500.jpg');\"></div>\n                </a>\n              \n            \n\n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://first1178.hatenablog.com/entry/2017/01/29/171515\">「なぞのばしょ」で10年越しに出会ったアルセウスがもたらしたもの～バグとクリエイ…</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://first1178.hatenablog.com/entry/2017/01/29/171515\">オーズに憧れてアニメ脚本家になるまで。</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-29T08:15:15Z\" data-relative data-epoch=\"1485677715000\">2017-01-29 17:15:15</time>\n            </span>\n            \n          </div>\n        \n            \n          \n          <div class=\"serviceTop-entry has-thumb\n          \">\n            \n              \n                <a href=\"http://blog.xin9le.net/entry/2017/01/30/232224\" class=\"serviceTop-entry-img-a\">\n                  <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/6186b71748327c268b58b32133915351669be533/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fx%252Fxin9le%252F20170130%252F20170130232536.png');\"></div>\n                </a>\n              \n            \n\n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://blog.xin9le.net/entry/2017/01/30/232224\">BuriKaigi 2017 in Toyama でライブコーディングしてきた</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://blog.xin9le.net/entry/2017/01/30/232224\">xin9le.net</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T14:26:37Z\" data-relative data-epoch=\"1485786397000\">2017-01-30 23:26:37</time>\n            </span>\n            \n          </div>\n        \n\n            \n            <div class=\"serviceTop-entry serviceTop-recommend-ad\n            \n              is-pc\n            \n            \">\n              <div id=\"dfc-add-in-recommended-entries\">\n                <script>\n                  googletag.cmd.push(function() { googletag.display('dfc-add-in-recommended-entries'); });\n                </script>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"serviceTop-recommend-grid recommend-grid-line2\">\n            \n          \n          <div class=\"serviceTop-entry has-thumb\n          \">\n            \n              \n                <a href=\"http://rootport.hateblo.jp/entry/2017/01/28/233000\" class=\"serviceTop-entry-img-a\">\n                  <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/21ebb879c64973d6ef8804a7ad06f91584fc607f/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252FR%252FRootport%252F20170128%252F20170128085740.jpg');\"></div>\n                </a>\n              \n            \n\n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://rootport.hateblo.jp/entry/2017/01/28/233000\">廃課金ソシャゲはもういやだ／2017年スマホゲーム業界の課題</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://rootport.hateblo.jp/entry/2017/01/28/233000\">デマこい！</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-28T14:30:08Z\" data-relative data-epoch=\"1485613808000\">2017-01-28 23:30:08</time>\n            </span>\n            \n          </div>\n        \n            \n          \n          <div class=\"serviceTop-entry has-thumb\n          \">\n            \n              \n                <a href=\"http://ookichi.hatenablog.com/entry/2017/01/31/000000\" class=\"serviceTop-entry-img-a\">\n                  <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/0bf5e317bc334f0e5ee7f659ed40d15e1ac78ca4/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fo%252Fookichi%252F20170130%252F20170130222626.png');\"></div>\n                </a>\n              \n            \n\n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://ookichi.hatenablog.com/entry/2017/01/31/000000\">知らぬ間に友人にトラウマを植え付けていた話</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://ookichi.hatenablog.com/entry/2017/01/31/000000\">おおきちナイトニッポン</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T15:00:38Z\" data-relative data-epoch=\"1485788438000\">2017-01-31 00:00:38</time>\n            </span>\n            \n          </div>\n        \n            \n          \n          <div class=\"serviceTop-entry has-thumb\n          \">\n            \n              \n                <a href=\"http://oppai-survivor.hatenablog.com/entry/2017/01/30/163000\" class=\"serviceTop-entry-img-a\">\n                  <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/e42c07ceb58306ef0f1d89b654bd1e42f4776038/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/https:%252F%252Fwww.instagram.com%252Fp%252FBO12KMtluRi%252Fmedia%252F');\"></div>\n                </a>\n              \n            \n\n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://oppai-survivor.hatenablog.com/entry/2017/01/30/163000\">乳がんになって、抗がん剤治療をしたけれど、ふつうに働いています</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://oppai-survivor.hatenablog.com/entry/2017/01/30/163000\">おっぱいサバイバー</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T07:30:00Z\" data-relative data-epoch=\"1485761400000\">2017-01-30 16:30:00</time>\n            </span>\n            \n          </div>\n        \n          </div>\n          <div class=\"serviceTop-recommend-grid recommend-grid-line3\">\n            \n          \n          <div class=\"serviceTop-entry\n          \">\n            \n\n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://www.okimhome.com/entry/2017/01/31/022511\">光世界</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://www.okimhome.com/entry/2017/01/31/022511\">筋トレをしろ。うつが治るから。</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T17:25:11Z\" data-relative data-epoch=\"1485797111000\">2017-01-31 02:25:11</time>\n            </span>\n            \n              <p class=\"serviceTop-entry-content\">\n                <a href=\"http://www.okimhome.com/entry/2017/01/31/022511\">今一緒にお仕事させていただいている方に教えていただいて、この曲を聞きました。 プリミ恥部さんの「光世界」 歌詞にすごく感動したので一緒に歌いました。 光…</a>\n              </p>\n            \n          </div>\n        \n            \n          \n          <div class=\"serviceTop-entry\n          \">\n            \n\n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://utap.hateblo.jp/entry/2017/01/28/120021\">インフルエンザの友人がイベントに参加すると言って聞かない。止める手立ては？</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://utap.hateblo.jp/entry/2017/01/28/120021\">ウタチャンホムペ</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-28T03:00:21Z\" data-relative data-epoch=\"1485572421000\">2017-01-28 12:00:21</time>\n            </span>\n            \n              <p class=\"serviceTop-entry-content\">\n                <a href=\"http://utap.hateblo.jp/entry/2017/01/28/120021\">うた子さんこんばんわ。もやもやすることがあったので送らせていただきました。 友人とイベントにサークル参加するのですが、友人がイベントの３日前に熱を出し…</a>\n              </p>\n            \n          </div>\n        \n            \n          \n          <div class=\"serviceTop-entry\n          \">\n            \n\n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://murabito1104.hatenablog.jp/entry/2017/01/31/003931\">ストライク・ザ・ブラッド16　陽炎の聖騎士</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://murabito1104.hatenablog.jp/entry/2017/01/31/003931\">働きたくない村人のラノベ日記</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T15:39:31Z\" data-relative data-epoch=\"1485790771000\">2017-01-31 00:39:31</time>\n            </span>\n            \n              <p class=\"serviceTop-entry-content\">\n                <a href=\"http://murabito1104.hatenablog.jp/entry/2017/01/31/003931\">(電撃文庫)&quot; title=&quot;ストライク・ザ・ブラッド16 陽炎の聖騎士 (電撃文庫)&quot; class=&quot;asin&quot;&gt; 《あらすじ》 瀕死の姿で、極東の“魔族特区”恩莱島の浜辺に流れ着い…</a>\n              </p>\n            \n          </div>\n        \n          </div>\n        </div>\n      </section>\n\n      \n        <section class=\"serviceTop-promotion\">\n          <ul class=\"serviceTop-promotion-list\">\n            \n              <li>\n                <span class=\"serviceTop-promotion-list-symbol\">▸ </span><a href=\"http://blog.hatena.ne.jp/-/topic/PTA%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\">【トピック】「PTA」は必要か</a>\n              </li>\n            \n              <li>\n                <span class=\"serviceTop-promotion-list-symbol\">▸ </span><a href=\"http://blog.hatena.ne.jp/-/odai/10328749687206436241\">【マイお題】今日の自分に言いたいこと、ある？</a>\n              </li>\n            \n              <li>\n                <span class=\"serviceTop-promotion-list-symbol\">▸ </span><a href=\"http://blog.hatena.ne.jp/-/odai/10328749687206174096\">【マイお題】コスメポーチ、何入れてる？</a>\n              </li>\n            \n          </ul>\n        </section>\n      \n\n      <section class=\"serviceTop-category\">\n        \n        \n\n        <header class=\"serviceTop-container-header\">\n          <h2>カテゴリー</h2>\n        </header>\n        <div class=\"serviceTop-category-row\">\n          \n            \n          <div class=\"serviceTop-category-column\">\n            <h3><span class=\"serviceTop-container-heading-label\">技術</span></h3>\n            <div class=\"serviceTop-category-entry-outer\">\n              \n                \n          \n          <div class=\"serviceTop-entry\">\n            \n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://heimusu.hatenablog.com/entry/2017/01/30/220000\">AnsibleとPackerを使ってAWS上にWordPressを展開するDocker Imageを作成する</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://heimusu.hatenablog.com/\">積極的後進</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T13:00:20Z\" data-relative data-epoch=\"1485781220000\">2017-01-30 22:00:20</time>\n            </span>\n          </div>\n        \n              \n                \n          \n          <div class=\"serviceTop-entry has-thumb\">\n            \n              <a href=\"http://paiza.hatenablog.com/entry/2017/01/30/%E3%80%902017%E5%B9%B4%E7%89%88%E3%80%91%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E4%B8%8A%E3%81%A7%E4%BD%BF%E3%81%88%E3%82%8BJavaScript%E9%96%8B%E7%99%BA%EF%BC%86%E5%AE%9F%E8%A1%8C%E7%92%B0%E5%A2%83Web\" class=\"serviceTop-entry-img-a\">\n                <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/a85cf4a611c7ed9cb2f4f68222cb17ae2a9e9c70/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fp%252Fpaiza%252F20170130%252F20170130135254.jpg');\"></div>\n              </a>\n            \n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://paiza.hatenablog.com/entry/2017/01/30/%E3%80%902017%E5%B9%B4%E7%89%88%E3%80%91%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E4%B8%8A%E3%81%A7%E4%BD%BF%E3%81%88%E3%82%8BJavaScript%E9%96%8B%E7%99%BA%EF%BC%86%E5%AE%9F%E8%A1%8C%E7%92%B0%E5%A2%83Web\">【2017年版】ブラウザ上で使えるJavaScript開発＆実行環境Webサービスの厳選まとめ</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://paiza.hatenablog.com/\">paiza開発日誌</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T09:56:27Z\" data-relative data-epoch=\"1485770187000\">2017-01-30 18:56:27</time>\n            </span>\n          </div>\n        \n              \n                \n          \n          <div class=\"serviceTop-entry has-thumb\">\n            \n              <a href=\"http://naruto-io.hatenablog.com/entry/2017/01/22/214441\" class=\"serviceTop-entry-img-a\">\n                <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/28260650b3e2e4a54ae6a7397531a6b342de1b43/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fimages-fe.ssl-images-amazon.com%252Fimages%252FI%252F51lqgv%252BWyxL._SL160_.jpg');\"></div>\n              </a>\n            \n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://naruto-io.hatenablog.com/entry/2017/01/22/214441\">みんGO を読んでec2インスンスリストをタグ検索するコマンドラインツールを作ってみた</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://naruto-io.hatenablog.com/\">平日インプット週末アウトプットぶろぐ</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-22T12:44:41Z\" data-relative data-epoch=\"1485089081000\">2017-01-22 21:44:41</time>\n            </span>\n          </div>\n        \n              \n                \n          \n          <div class=\"serviceTop-entry has-thumb\">\n            \n              <a href=\"http://izumin.hateblo.jp/entry/2017/01/29/204449\" class=\"serviceTop-entry-img-a\">\n                <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/f76edc61996caa63d3cb95890873ba9ebb895cec/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fimages-fe.ssl-images-amazon.com%252Fimages%252FI%252F51UuacnMrjL._SL160_.jpg');\"></div>\n              </a>\n            \n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://izumin.hateblo.jp/entry/2017/01/29/204449\">Sinatraの実装を読む</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://izumin.hateblo.jp/\">Augmented Usamimi</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-29T11:44:49Z\" data-relative data-epoch=\"1485690289000\">2017-01-29 20:44:49</time>\n            </span>\n          </div>\n        \n              \n            </div>\n          </div>\n        \n          \n            \n          <div class=\"serviceTop-category-column\">\n            <h3><span class=\"serviceTop-container-heading-label\">料理</span></h3>\n            <div class=\"serviceTop-category-entry-outer\">\n              \n                \n          \n          <div class=\"serviceTop-entry has-thumb\">\n            \n              <a href=\"http://nekofuwa.hatenablog.com/entry/2017/01/30/225431\" class=\"serviceTop-entry-img-a\">\n                <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/9862b729e672030862d2591152a23211eaab09ab/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fh%252Fhozumi3081%252F20170130%252F20170130011755.jpg');\"></div>\n              </a>\n            \n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://nekofuwa.hatenablog.com/entry/2017/01/30/225431\">鶏天の野菜たっぷり甘酢あんかけ</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://nekofuwa.hatenablog.com/\">ハナゴト</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T13:54:31Z\" data-relative data-epoch=\"1485784471000\">2017-01-30 22:54:31</time>\n            </span>\n          </div>\n        \n              \n                \n          \n          <div class=\"serviceTop-entry has-thumb\">\n            \n              <a href=\"http://www.xn--o9jla6312an8fjrhjpar20fp65f.club/entry/sugoi-nabe\" class=\"serviceTop-entry-img-a\">\n                <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/b5662a96c87398a9b4f276f62089e14f888655a9/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fimages-fe.ssl-images-amazon.com%252Fimages%252FI%252F514uJA4ls-L._SL160_.jpg');\"></div>\n              </a>\n            \n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://www.xn--o9jla6312an8fjrhjpar20fp65f.club/entry/sugoi-nabe\">この鍋がすごい！おしゃれで画期的な最新「鍋」５選</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://www.xn--o9jla6312an8fjrhjpar20fp65f.club/\">大人の女の旅と趣味</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T12:49:01Z\" data-relative data-epoch=\"1485780541000\">2017-01-30 21:49:01</time>\n            </span>\n          </div>\n        \n              \n                \n          \n          <div class=\"serviceTop-entry has-thumb\">\n            \n              <a href=\"http://kenmoja.hatenablog.com/entry/yakiringo\" class=\"serviceTop-entry-img-a\">\n                <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/fab927269322762dfd5091a1250b92df02e62108/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fk%252Fkenmoja%252F20170130%252F20170130195649.jpg');\"></div>\n              </a>\n            \n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://kenmoja.hatenablog.com/entry/yakiringo\">レンジで簡単！焼きリンゴのアイス添え【手作りスイーツ】</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://kenmoja.hatenablog.com/\">のんびり息子と天パパパ</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T11:47:00Z\" data-relative data-epoch=\"1485776820000\">2017-01-30 20:47:00</time>\n            </span>\n          </div>\n        \n              \n                \n          \n          <div class=\"serviceTop-entry has-thumb\">\n            \n              <a href=\"http://mkonohazuku.hatenablog.com/entry/2017/01/30/160000\" class=\"serviceTop-entry-img-a\">\n                <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/a148894bc77042a7c4ebbfe986e98162707863a2/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fm%252Fmkonohazuku%252F20170127%252F20170127174950.jpg');\"></div>\n              </a>\n            \n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://mkonohazuku.hatenablog.com/entry/2017/01/30/160000\">ポテトとベーコンのミニピザ</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://mkonohazuku.hatenablog.com/\">パンとフクロウ</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T07:00:02Z\" data-relative data-epoch=\"1485759602000\">2017-01-30 16:00:02</time>\n            </span>\n          </div>\n        \n              \n            </div>\n          </div>\n        \n          \n            \n          <div class=\"serviceTop-category-column\">\n            <h3><span class=\"serviceTop-container-heading-label\">写真・カメラ</span></h3>\n            <div class=\"serviceTop-category-entry-outer\">\n              \n                \n          \n          <div class=\"serviceTop-entry has-thumb\">\n            \n              <a href=\"http://madhatter87.hatenablog.com/entry/2017/01/30/212739\" class=\"serviceTop-entry-img-a\">\n                <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/65ba4b252f66b33b87811881ace53241a33e4047/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Ffarm1.staticflickr.com%252F488%252F32209484840_8c7dfcbb41_b.jpg');\"></div>\n              </a>\n            \n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://madhatter87.hatenablog.com/entry/2017/01/30/212739\">OM-D E-M1 MarkⅡを購入！冬の茨戸川緑地に動植物撮影に行ってきた</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://madhatter87.hatenablog.com/\">コリラックマに恋する男子の写真練習帖</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T12:27:39Z\" data-relative data-epoch=\"1485779259000\">2017-01-30 21:27:39</time>\n            </span>\n          </div>\n        \n              \n                \n          \n          <div class=\"serviceTop-entry has-thumb\">\n            \n              <a href=\"http://juangotoh.hatenablog.com/entry/2017/01/30/211317\" class=\"serviceTop-entry-img-a\">\n                <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/5cfebb299d35d1446d28a945a137711791deaa34/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Flh3.googleusercontent.com%252F-StaunoNz2yI%252FWI8r_Vdo1ZI%252FAAAAAAAAMZc%252FwTVikyFtZMAKaYBkvTHIAZJxEGqxpQHrQCE0%252Fs1024%252FIMG_1280.JPG');\"></div>\n              </a>\n            \n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://juangotoh.hatenablog.com/entry/2017/01/30/211317\">MFなオールドレンズはAFモードで使う</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://juangotoh.hatenablog.com/\">仮想と現実</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T12:13:17Z\" data-relative data-epoch=\"1485778397000\">2017-01-30 21:13:17</time>\n            </span>\n          </div>\n        \n              \n                \n          \n          <div class=\"serviceTop-entry has-thumb\">\n            \n              <a href=\"http://www.kyu7.com/entry/syashinsatuei\" class=\"serviceTop-entry-img-a\">\n                <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/18630b25ba5b9143ab1b14b64e7612c12446077e/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fk%252Fkyu_com%252F20170130%252F20170130180840.jpg');\"></div>\n              </a>\n            \n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://www.kyu7.com/entry/syashinsatuei\">青空の下で写真を撮ってきました！</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://www.kyu7.com/\">趣味全開で淡々と</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T12:00:40Z\" data-relative data-epoch=\"1485777640000\">2017-01-30 21:00:40</time>\n            </span>\n          </div>\n        \n              \n                \n          \n          <div class=\"serviceTop-entry has-thumb\">\n            \n              <a href=\"http://one00one.hateblo.jp/entry/2017/01/30/131617\" class=\"serviceTop-entry-img-a\">\n                <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/dca8308ff52d5f0889b7d343ec82a860c518200b/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fo%252Fone00one%252F20170130%252F20170130122302.jpg');\"></div>\n              </a>\n            \n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://one00one.hateblo.jp/entry/2017/01/30/131617\">「雪見だいふく 黄金のみたらし 厚もち仕立て」をものすごく上手に紹介しようと努力した結果・・・</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://one00one.hateblo.jp/\">続々・弁２食</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2017-01-30T04:16:17Z\" data-relative data-epoch=\"1485749777000\">2017-01-30 13:16:17</time>\n            </span>\n          </div>\n        \n              \n            </div>\n          </div>\n        \n          \n        </div>\n\n      </section>\n\n      <section class=\"serviceTop-backIn\">\n        <header class=\"serviceTop-container-header\">\n          \n          <h2>ブログタイムマシーン（2015年）</h2>\n          <p>過去の記事からおすすめを紹介します。</p>\n        </header>\n        <div class=\"serviceTop-backIn-grid\">\n          \n            \n          \n          <div class=\"serviceTop-entry has-thumb\n          \">\n            \n              \n                <a href=\"http://www.goodbyebluethursday.com/entry/2016/01/24/180332\" class=\"serviceTop-entry-img-a\">\n                  <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/b6d39ae672721d7f6607e2f7cf5cac622cdf0d37/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/http:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fg%252Fgoodbyebluemonday23%252F20160124%252F20160124083835.png');\"></div>\n                </a>\n              \n            \n\n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://www.goodbyebluethursday.com/entry/2016/01/24/180332\">「仕事の遅い人」が読むだけで絶対に仕事が早くなる方法</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://www.goodbyebluethursday.com/entry/2016/01/24/180332\">さようなら、憂鬱な木曜日</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2016-01-24T09:03:32Z\" data-relative data-epoch=\"1453626212000\">2016-01-24 18:03:32</time>\n            </span>\n            \n          </div>\n        \n          \n            \n          \n          <div class=\"serviceTop-entry has-thumb\n          \">\n            \n              \n                <a href=\"http://yaritakunai.hatenablog.com/entry/2016/01/28/215000\" class=\"serviceTop-entry-img-a\">\n                  <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/e52bc2ca1910d8e421dd3c9ef67a3ec018f54e08/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/http:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fc%252Fcruller%252F20160128%252F20160128214330.jpg');\"></div>\n                </a>\n              \n            \n\n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://yaritakunai.hatenablog.com/entry/2016/01/28/215000\">時間泥棒!?　Wikipediaの面白い記事50選+3</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://yaritakunai.hatenablog.com/entry/2016/01/28/215000\">cBlog</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2016-01-28T12:50:00Z\" data-relative data-epoch=\"1453985400000\">2016-01-28 21:50:00</time>\n            </span>\n            \n          </div>\n        \n          \n            \n          \n          <div class=\"serviceTop-entry has-thumb\n          \">\n            \n              \n                <a href=\"http://blog.mokosoft.com/entry/2016/01/29/123132\" class=\"serviceTop-entry-img-a\">\n                  <div class=\"serviceTop-entry-img\" style=\"background-image:url('../cdn.image.st-hatena.com/image/square/e20e2a91df334fc97cb1d01bd0d3593354f07e11/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/http:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fm%252Fmad_ochi%252F20160129%252F20160129111154.png');\"></div>\n                </a>\n              \n            \n\n            <div class=\"serviceTop-entry-title\">\n              <a href=\"http://blog.mokosoft.com/entry/2016/01/29/123132\">ゲスな卒論アプリが登場！一体どこが作ってるのか調べてみた。なかなかなことになっ…</a>\n            </div>\n            <div class=\"serviceTop-blog-title\">\n              <a href=\"http://blog.mokosoft.com/entry/2016/01/29/123132\">Mokosoft開発者ブログ</a>\n            </div>\n            <span class=\"serviceTop-entry-date\">\n              <time datetime=\"2016-01-29T03:31:32Z\" data-relative data-epoch=\"1454038292000\">2016-01-29 12:31:32</time>\n            </span>\n            \n          </div>\n        \n          \n        </div>\n      </section>\n\n    </div>\n\n    <section class=\"serviceTop-startHatenablog\" style=\"background-image:url('../cdn.blog.st-hatena.com/images/top/serviceTop-startHatenablog-bg.jpg%3Fversion=118735b6fce0aad6c0702a2ac0534ba4ad4ecb95&amp%3Benv=production');\">\n      <div class=\"serviceTop-startHatenablog-mask\"></div>\n      <div class=\"serviceTop-container\">\n        <h3>はてなブログをはじめよう</h3>\n        <p class=\"serviceTop-startHatenablog-p1\">はてなブログは、無料でしっかり書けるブログサービスです。</p>\n        <p class=\"serviceTop-startHatenablog-p2\">はてなブログの良いところは、なにより文章が書きやすいこと。さらに、楽しいイラストや美しい写真を載せたり、ツイートや動画を貼り付けるのも簡単です。気になったニュースをカード形式で紹介したり、プログラムを見やすくハイライトしたり、どんな記事でもしっかり書くことができます。ちょっとした日常の記録にも、誰かに伝えたい想いを綴るにも、人生の物語を書き残すにも、どうぞご利用ください。</p>\n        <a href=\"http://hatenablog.com/guide?via=200222\" class=\"serviceTop-startHatenablog-registerBtn\">はてなブログとは</a>\n      </div>\n    </section>\n\n    <section class=\"serviceTop-socialAccount-primary\">\n      <div class=\"serviceTop-container\">\n        <div class=\"serviceTop-socialAccount-primary-wrapper\">\n          <h4>はてなブログ公式アカウントで、おすすめ情報をチェックしよう</h4>\n          <p>はてなブログでは、TwitterとFacebookで、おすすめ記事や最新情報をお届けしています。今すぐフォローしよう！</p>\n          <a href=\"https://twitter.com/hatenablog\" class=\"twitter-follow-button\" data-show-count=\"false\" data-size=\"small\">Follow @hatenablog</a>\n\n          <div class=\"fb-like\" data-href=\"https://www.facebook.com/hatenablog\" data-layout=\"button_count\" data-action=\"like\" data-show-faces=\"false\" data-share=\"false\" data-ga-event-position=\"フッターバナー\"></div>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"serviceTop-information\">\n      <div class=\"serviceTop-container\">\n        <div class=\"serviceTop-information-staffblog\">\n          <header class=\"serviceTop-container-header\">\n            <h2><a href=\"http://blog.hatenablog.com\">週刊はてなブログ</a> <i class=\"blogicon-chevron-right\"></i></h2>\n            <p>はてなブログ編集部が気になるブログをご紹介！</p>\n          </header>\n          <ul class=\"serviceTop-information-list\">\n            \n            <li data-track-name=\"global-sidebar-weekly-hatena-blog-entry-click\" data-track-once class=\"serviceTop-information-list-content\n            has-thumb\">\n              <a href=\"http://blog.hatenablog.com/entry/2017/01/30/124500\">\n                <div class=\"serviceTop-information-list-title\">\n                  今週のはてなブログランキング〔2017年1月第4週〕\n                </div>\n                \n                  <div style=\"background-image: url('../cdn.image.st-hatena.com/image/square/f8fb5b450467203d2c2007d70ebbb4c5c4a07c6a/backend=imagemagick%3Bheight=120%3Bversion=1%3Bwidth=120/http:%252F%252Fcdn.mogile.archive.st-hatena.com%252Fv1%252Fimage%252Fhatenablog%252F297787643751636513.gif')\" class=\"serviceTop-information-list-thumb\"></div>\n                \n              </a>\n            </li>\n            \n            <li data-track-name=\"global-sidebar-weekly-hatena-blog-entry-click\" data-track-once class=\"serviceTop-information-list-content\n            has-thumb\">\n              <a href=\"http://blog.hatenablog.com/entry/2017/01/26/182000\">\n                <div class=\"serviceTop-information-list-title\">\n                  初デートの思い出に国際恋愛、俳優への恋や転校生に抱いた淡い気持ち。ブロガーの「恋バナ」を集めました\n                </div>\n                \n                  <div style=\"background-image: url('../cdn.image.st-hatena.com/image/square/f1b1451ce360691afd61378a1a3a2e2633ce0131/backend=imagemagick%3Bheight=120%3Bversion=1%3Bwidth=120/https:%252F%252Fimages-fe.ssl-images-amazon.com%252Fimages%252FI%252F51sNsTOPv8L._SL160_.jpg')\" class=\"serviceTop-information-list-thumb\"></div>\n                \n              </a>\n            </li>\n            \n            <li class=\"serviceTop-information-more\">\n              <a href=\"http://blog.hatenablog.com\" class=\"serviceTop-information-more-btn\" data-track-name=\"global-sidebar-weekly-hatena-blog-more-click\" data-track-once>Read more <i class=\"blogicon-chevron-right\"></i></a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"serviceTop-information-weeklyHatenablog\">\n          <header class=\"serviceTop-container-header\">\n            <h2><a href=\"http://staff.hatenablog.com\">新機能・お知らせ</a> <i class=\"blogicon-chevron-right\"></i></h2>\n            <p>はてなブログの最新の情報をお届けします。</p>\n          </header>\n          <ul class=\"serviceTop-information-list\">\n            \n            <li data-track-name=\"global-sidebar-notice-entry-click\" data-track-once class=\"serviceTop-information-list-content\n            has-thumb\">\n              <a href=\"http://staff.hatenablog.com/entry/2017/01/30/190010\">\n                <div class=\"serviceTop-information-list-title\">\n                  サイドバーの「最近のコメント」モジュールで投稿日時が誤って表示される不具合がありました（修正済み）\n                </div>\n                \n                  <div style=\"background-image: url('../cdn.image.st-hatena.com/image/square/88938f48ad84745514056a09b53a25aa196df03a/backend=imagemagick%3Bheight=120%3Bversion=1%3Bwidth=120/http:%252F%252Fcdn.mogile.archive.st-hatena.com%252Fv1%252Fimage%252Fhatenablog%252F297787643747682600.gif')\" class=\"serviceTop-information-list-thumb\"></div>\n                \n              </a>\n            </li>\n            \n            <li data-track-name=\"global-sidebar-notice-entry-click\" data-track-once class=\"serviceTop-information-list-content\n            has-thumb\">\n              <a href=\"http://staff.hatenablog.com/entry/2017/01/30/144500\">\n                <div class=\"serviceTop-information-list-title\">\n                  サイドバーの記事一覧モジュールで、記事タイトルの表示文字数を指定できるようにしました（ほか1件）\n                </div>\n                \n                  <div style=\"background-image: url('../cdn.image.st-hatena.com/image/square/77ef5ac7a43c930519e362720fa43897713c87b9/backend=imagemagick%3Bheight=120%3Bversion=1%3Bwidth=120/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fh%252Fhatenablog%252F20170125%252F20170125180221.png')\" class=\"serviceTop-information-list-thumb\"></div>\n                \n              </a>\n            </li>\n            \n            <li class=\"serviceTop-information-more\">\n            <a href=\"http://staff.hatenablog.com\" class=\"serviceTop-information-more-btn\" data-track-name=\"global-sidebar-notice-blog-more-click\" data-track-once>Read more <i class=\"blogicon-chevron-right\"></i></a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"serviceTop-AppSuggest\">\n      <div class=\"serviceTop-container\">\n        <h3>アプリでいつでも、はてなブログ</h3>\n        <p>iPhoneやAndroidから、いつでもブログを更新。編集補助機能で書きやすく、写真もスマホから簡単に追加できます</p>\n        <div class=\"serviceTop-AppSuggest-download\">\n          <a href=\"https://itunes.apple.com/jp/app/hatenablog/id583299321\" target=\"_blank\" data-track-name=\"touch-appguide-download-ios\" data-track-once=\"\"><img src=\"images/touch/guide-app/apple-badge@2x.png\" alt=\"はてなブログ 公式iOSアプリケーション\" height=\"46\"></a>\n          <a href=\"https://play.google.com/store/apps/details?id=jp.ne.hatena.blog\" target=\"_blank\" data-track-name=\"touch-appguide-download-android\" data-track-once=\"\"><img src=\"images/touch/guide-app/google-badge@2x.png\" alt=\"はてなブログ 公式Androidアプリケーション\" height=\"46\"></a>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"serviceTop-socialAccount-secondary\">\n      <div class=\"serviceTop-container\">\n        <p class=\"serviceTop-socialAccount-p\">人気のブログやおすすめブログがわかる！<br>\n        はてなブログ公式アカウントをチェック！</p>\n        <a href=\"https://twitter.com/hatenablog\" target=\"_blank\" class=\"btn btn-tw serviceTop-socialBtn\" data-track-name=\"index-global-touch-footer-social-twitter\" data-track-once><i class=\"blogicon-twitter\"></i></a>\n        <a href=\"https://www.facebook.com/hatenablog/\" target=\"_blank\" class=\"btn btn-fb serviceTop-socialBtn\" data-track-name=\"index-global-touch-footer-social-facebook\" data-track-once><i class=\"blogicon-facebook\"></i></a>\n      </div>\n    </section>\n\n    <div class=\"serviceTop-footer\">\n      <div class=\"footer\">\n  <div class=\"footer-inner\">\n    <div class=\"box-wrapper\">\n        <div class=\"footer-box\">\n          <h4>Hatena Blog</h4>\n          <ul>\n            <li><a href=\"http://hatenablog.com/guide?via=200146\" data-inherit-via>What is Hatena Blog?</a></li>\n            <li><a href=\"http://hatenablog.com/guide/pro?plus_via=blogs_service_footer\">Hatena Blog Pro</a></li>\n            <li><a href=\"http://hatenablog.com/guide/app\">App</a></li>\n            <li><a href=\"http://blog.hatena.ne.jp/-/store/theme/\">Theme store</a></li>\n            <li><a href=\"http://blog.hatena.ne.jp/-/topic/\">Seasonal Topic</a></li>\n            <li><a href=\"http://hatenablog.com/g/\">Group</a></li>\n            <li><a href=\"http://hatenablog.com/-/famous\">Celebrity Blogs</a></li>\n            <li><a href=\"http://hatenablog.com/guide/policy\">はてなブログの目指す場所</a></li>\n            <li><a href=\"http://blog.hatena.ne.jp/-/campaign/odai\">今週のお題</a></li>\n          </ul>\n        </div>\n        <div class=\"footer-box\">\n          <h4>Updates/Notices/Help</h4>\n          <ul>\n            <li><a href=\"http://staff.hatenablog.com\">Developer’s Blog</a></li>\n            <li><a href=\"http://blog.hatenablog.com/\">Weekly Hatena Blog</a></li>\n            <li><a href=\"http://help.hatenablog.com/\">Help</a></li>\n            <li><a href=\"http://www.hatena.ne.jp/maintenance\">Maintenance Information</a></li>\n            <li><a href=\"http://www.hatena.ne.jp/faq/q/blog\">Support Center</a></li>\n          </ul>\n        </div>\n        <div class=\"footer-box\">\n          <h4>はてなブログの活用事例</h4>\n          <ul>\n            <li><a href=\"http://hatenablog.com/guide/media\">はてなブログMedia（企業向けプラン）</a></li>\n            <li><a href=\"http://hatenablog.com/guide/creator\">クリエイターのためのはてなブログ</a></li>\n            <li><a href=\"http://hatenablog.com/guide/npo\">NPO Support Program</a></li>\n            <li><a href=\"http://hatenablog.com/guide/library\">Library Support Program</a></li>\n            <li><a href=\"http://hatenasales.g.hatena.ne.jp/\">Advertising</a></li>\n          </ul>\n        </div>\n        <div class=\"footer-box\">\n          <h4>Other Services</h4>\n          <ul>\n            <li><a href=\"http://b.hatena.ne.jp/\">Hatena Bookmark</a></li>\n            <li><a href=\"http://f.hatena.ne.jp/\">Hatena Fotolife</a></li>\n            <li><a href=\"http://k.hatena.ne.jp/\">Hatena Keyword</a></li>\n            <li><a href=\"https://www.hatena.ne.jp/shop/star\">Color stars</a></li>\n            <li><a href=\"http://d.hatena.ne.jp/\">Hatena Diary</a></li>\n          </ul>\n        </div>\n\n    </div>\n    <div style=\"display: none\">\n      \n      <a href=\"http://hatenablog.com/?locale.lang=ja\" data-lang=\"ja\" >日本語</a>\n      \n      <a href=\"http://hatenablog.com/?locale.lang=en\" data-lang=\"en\" class=\"selected\">English</a>\n      \n    </div>\n    <address class=\"footer-address\">\n      <a href=\"https://itunes.apple.com/jp/app/hatenablog/id583299321\" target=\"_blank\"><img src=\"images/banner/Download_on_the_App_Store_Badge_US-UK_135x40.png\" alt=\"Download on the App Store\" class=\"left\"></a>\n      <a href=\"http://play.google.com/store/apps/details?id=jp.ne.hatena.blog\" target=\"_blank\"><img src=\"images/banner/google-play-banner-45-en.png\" alt=\"Get it on Google Play\" class=\"left\"></a>\n\n        Copyright (C) 2001-2017 Hatena. All Rights Reserved.\n        <i>Blog your own life story.</i>\n    </address>\n  </div>\n</div>\n\n<script src=\"../s.hatena.ne.jp/js/HatenaStar.js\"></script>\n\n\n  <script type=\"text/javascript\" src=\"https://platform.twitter.com/widgets.js\"></script>\n\n<script src=\"../apis.google.com/js/platform.js\" async defer>\n  { lang: 'ja', \"parsetags\": \"explicit\" }\n</script>\n<script type=\"text/javascript\" src=\"../b.st-hatena.com/js/bookmark_button.js\" charset=\"utf-8\" async=\"async\"></script>\n\n\n\n  <script type=\"text/javascript\" src=\"../cdn.blog.st-hatena.com/js/external/react-with-addons.min.js%3Fversion=15.4.1\"></script>\n  <script type=\"text/javascript\" src=\"../cdn.blog.st-hatena.com/js/external/react-dom.min.js%3Fversion=15.4.1\"></script>\n\n\n<script type=\"text/javascript\" src=\"../cdn.blog.st-hatena.com/js/external/jquery.min.js%3Fversion=1.12.3\"></script>\n<script type=\"text/javascript\" src=\"../cdn7.www.st-hatena.com/js/jquery/jquery-ui.1.10.0.custom.min.js\"></script>\n<script type=\"text/javascript\" src=\"../cdn.blog.st-hatena.com/js/external/jquery.flot.js%3Fversion=0.8.3\"></script>\n<script type=\"text/javascript\" src=\"../cdn.blog.st-hatena.com/js/external/jquery.flot.time.js%3Fversion=0.8.3\"></script>\n\n\n\n\n<script id=\"hatenablog-js\" data-env=\"production\"\n  type=\"text/javascript\" src=\"../cdn.blog.st-hatena.com/js/hatenablog.js%3Fversion=4f91cbe0683b4f2ad58bffe74efec197f1c2838e&amp;env=production\" crossorigin=\"anonymous\"></script>\n<script type=\"text/javascript\" src=\"../cdn.blog.st-hatena.com/js/texts-en.js%3Fversion=fa02f876e1143d1a11be707cd2bf96c0baa4df31&amp;env=production\"></script>\n\n\n  <script type=\"text/javascript\">Hatena.Diary.GlobalHeader.init()</script>\n\n\n<script src=\"../www.google.com/recaptcha/api.js\" async defer></script>\n\n\n\n\n\n\n\n\n\n    </div>\n\n    \n    <footer class=\"serviceTop-touchFooter\">\n      <ul class=\"serviceTop-touchFooter-nav\">\n        <li>\n          <a href=\"http://staff.hatenablog.com/\">お知らせ</a>\n        </li>\n        <li>\n          <a href=\"http://help.hatenablog.com/\">使い方・ヘルプ</a>\n        </li>\n        <li>\n          <a href=\"http://hatenablog.com/guide/pro\" data-track-name=\"index-global-touch-footer-pro\" data-track-once>はてなブログPro</a>\n        </li>\n      </ul>\n      <ul class=\"serviceTop-touchFooter-nav\">\n        <li>\n          <a class=\"serviceTop-touchFooter-logout\" href=\"http://www.hatena.ne.jp/logout?backurl=http://blog.hatena.ne.jp/touch\">Logout</a>\n        </li>\n      </ul>\n      <div class=\"serviceTop-touchFooter-bottom\">\n        <small class=\"serviceTop-touchFooter-copyright\">Copyright (C) 2001-2017 Hatena. All Rights Reserved.</small>\n      </div>\n    </footer>\n\n    <div id=\"fb-root\"></div>\n    <script>(function(d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) return;\n      js = d.createElement(s); js.id = id;\n      js.src = \"//connect.facebook.net/ja_JP/sdk.js#xfbml=1&version=v2.0\";\n      fjs.parentNode.insertBefore(js, fjs);\n    }(document, 'script', 'facebook-jssdk'));</script>\n    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>\n  </body>\n</html>\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 12278
        },
        "cache": {},
        "timings": {
          "blocked": 0.259000109508634,
          "dns": -1,
          "connect": -1,
          "send": 0.066000036895275,
          "wait": 556.8339999299501,
          "receive": 812.4079999979581,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:40.534Z",
        "time": 2116.3520000409335,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.blog.st-hatena.com/css/service.css%3Fversion=82d341e0c0d884831642dfe4e418cbe57cdd8b8a&env=production.css",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Tue, 31 Jan 2017 00:24:54 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588fd956-29e07\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "text/css; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 171527,
            "mimeType": "text/css",
            "text": "@import '../../fonts.googleapis.com/css%3Ffamily=Open+Sans:300,400italic,400,600.css';abbr,address,article,aside,audio,b,blockquote,body,canvas,caption,cite,code,dd,del,details,dfn,div,dl,dt,em,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,p,pre,q,samp,section,small,span,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,ul,var,video{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}nav ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}a{margin:0;padding:0;font-size:100%;vertical-align:baseline;background:transparent}ins{text-decoration:none}ins,mark{background-color:#ff9;color:#000}mark{font-style:italic;font-weight:700}del{text-decoration:line-through}abbr[title],dfn[title]{border-bottom:1px dotted;cursor:help}hr{display:block;height:1px;border:0;border-top:1px solid #ccc;margin:1em 0;padding:0}input,select{vertical-align:middle}address{font-style:normal}\n/*! normalize.css v2.0.1 | MIT License | git.io/normalize */\n/* ==========================================================================\n   HTML5 display definitions\n   ========================================================================== */\n/*\n * Corrects `block` display not defined in IE 8/9.\n */article,aside,details,figcaption,figure,footer,header,hgroup,nav,section,summary{display:block}\n/*\n * Corrects `inline-block` display not defined in IE 8/9.\n */audio,canvas,video{display:inline-block}\n/*\n * Prevents modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */audio:not([controls]){display:none;height:0}\n/*\n * Addresses styling for `hidden` attribute not present in IE 8/9.\n */[hidden]{display:none}\n/* ==========================================================================\n   Base\n   ========================================================================== */\n/*\n * 1. Sets default font family to sans-serif.\n * 2. Prevents iOS text size adjust after orientation change, without disabling\n *    user zoom.\n */html{font-family:sans-serif;\n  /* 1 */-webkit-text-size-adjust:100%;\n  /* 2 */-ms-text-size-adjust:100%\n  /* 2 */}\n/*\n * Removes default margin.\n */body{margin:0}\n/* ==========================================================================\n   Links\n   ========================================================================== */\n/*\n * Addresses `outline` inconsistency between Chrome and other browsers.\n */a:focus{outline:thin dotted}\n/*\n * Improves readability when focused and also mouse hovered in all browsers.\n */a:active,a:hover{outline:0}\n/* ==========================================================================\n   Typography\n   ========================================================================== */\n/*\n * Addresses `h1` font sizes within `section` and `article` in Firefox 4+,\n * Safari 5, and Chrome.\n */h1{font-size:2em}\n/*\n * Addresses styling not present in IE 8/9, Safari 5, and Chrome.\n */abbr[title]{border-bottom:1px dotted}\n/*\n * Addresses style set to `bolder` in Firefox 4+, Safari 5, and Chrome.\n */b,strong{font-weight:700}\n/*\n * Addresses styling not present in Safari 5 and Chrome.\n */dfn{font-style:italic}\n/*\n * Addresses styling not present in IE 8/9.\n */mark{background:#ff0;color:#000}\n/*\n * Corrects font family set oddly in Safari 5 and Chrome.\n */code,kbd,pre,samp{font-family:monospace,serif;font-size:1em}\n/*\n * Improves readability of pre-formatted text in all browsers.\n */pre{white-space:pre;white-space:pre-wrap;word-wrap:break-word}\n/*\n * Sets consistent quote types.\n */q{quotes:\"\\201C\" \"\\201D\" \"\\2018\" \"\\2019\"}\n/*\n * Addresses inconsistent and variable font size in all browsers.\n */small{font-size:80%}\n/*\n * Prevents `sub` and `sup` affecting `line-height` in all browsers.\n */sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}\n/* ==========================================================================\n   Embedded content\n   ========================================================================== */\n/*\n * Removes border when inside `a` element in IE 8/9.\n */img{border:0}\n/*\n * Corrects overflow displayed oddly in IE 9.\n */svg:not(:root){overflow:hidden}\n/* ==========================================================================\n   Figures\n   ========================================================================== */\n/*\n * Addresses margin not present in IE 8/9 and Safari 5.\n */figure{margin:0}\n/* ==========================================================================\n   Forms\n   ========================================================================== */\n/*\n * Define consistent border, margin, and padding.\n */fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}\n/*\n * 1. Corrects color not being inherited in IE 8/9.\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n */legend{border:0;\n  /* 1 */padding:0\n  /* 2 */}\n/*\n * 1. Corrects font family not being inherited in all browsers.\n * 2. Corrects font size not being inherited in all browsers.\n * 3. Addresses margins set differently in Firefox 4+, Safari 5, and Chrome\n */button,input,select,textarea{font-family:inherit;\n  /* 1 */font-size:100%;\n  /* 2 */margin:0\n  /* 3 */}\n/*\n * Addresses Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */button,input{line-height:normal}\n/*\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *    and `video` controls.\n * 2. Corrects inability to style clickable `input` types in iOS.\n * 3. Improves usability and consistency of cursor style between image-type\n *    `input` and others.\n */button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;\n  /* 2 */cursor:pointer\n  /* 3 */}\n/*\n * Re-set default cursor for disabled elements.\n */button[disabled],input[disabled]{cursor:default}\n/*\n * 1. Addresses box sizing set to `content-box` in IE 8/9.\n * 2. Removes excess padding in IE 8/9.\n */input[type=checkbox],input[type=radio]{box-sizing:border-box;\n  /* 1 */padding:0\n  /* 2 */}\n/*\n * 1. Addresses `appearance` set to `searchfield` in Safari 5 and Chrome.\n * 2. Addresses `box-sizing` set to `border-box` in Safari 5 and Chrome\n *    (include `-moz` to future-proof).\n */input[type=search]{-webkit-appearance:textfield;\n  /* 1 */\n  /* 2 */box-sizing:content-box}\n/*\n * Removes inner padding and search cancel button in Safari 5 and Chrome\n * on OS X.\n */input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}\n/*\n * Removes inner padding and border in Firefox 4+.\n */button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}\n/*\n * 1. Removes default vertical scrollbar in IE 8/9.\n * 2. Improves readability and alignment in all browsers.\n */textarea{overflow:auto;\n  /* 1 */vertical-align:top\n  /* 2 */}\n/* ==========================================================================\n   Tables\n   ========================================================================== */\n/*\n * Remove most spacing between table cells.\n */table{border-collapse:collapse;border-spacing:0}.clearfix{display:block;*zoom:1}.clearfix:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.inline-block{display:inline-block;*display:inline;*zoom:1}.ellipsis{white-space:nowrap;-webkit-text-overflow:ellipsis;text-overflow:ellipsis;overflow:hidden}.font-default{font-family:Helvetica Neue,Helvetica,Arial,ヒラギノ角ゴ Pro W3,Hiragino Kaku Gothic Pro,メイリオ,Meiryo,ＭＳ\\ Ｐゴシック,MS PGothic,sans-serif}.border-box{-ms-box-sizing:border-box;box-sizing:border-box}.center{text-align:center;margin-left:auto;margin-right:auto}.left{float:left}.right{float:right}.nofloat{float:none}.clear{clear:both}.block{display:block}.inline{display:inline}.nodisplay{display:none}.relative{position:relative}.absolute{position:absolute}.static{position:static}.fixed{position:fixed}.margin0{margin:0!important}.padding0{padding:0!important}.bold{font-weight:700}.normal{font-weight:400;font-style:normal}.thin{font-weight:300}.italic{font-style:italic}.nodeco{text-decoration:none}.underline{text-decoration:underline}.nolist{list-style-type:none}.disc{list-style-type:disc}.circle{list-style-type:circle}.textleft{text-align:left}.textright{text-align:right}.hide{display:none}a:link,a:visited{color:#4eacd1;text-decoration:none}a:link:hover,a:visited:hover{text-decoration:underline}p{margin:0;padding:0;line-height:1.7}span.small,span.smaller{font-size:70%}.nav-tabs,.ui-tabs-nav{margin-bottom:30px;height:35px;display:block;*zoom:1;border-bottom:1px solid #c2cdd1}.nav-tabs:after,.ui-tabs-nav:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.nav-tabs>li,.ui-tabs-nav>li{list-style:none;float:left}.nav-tabs>li a,.ui-tabs-nav>li a{display:inline-block;padding:0 1em;line-height:35px;color:#9aa5ab;font-weight:700}.nav-tabs>li a:hover,.ui-tabs-nav>li a:hover{color:#4eacd1;text-decoration:none}.nav-tabs>li a:focus,.ui-tabs-nav>li a:focus{outline:none}.nav-tabs>li.current-tab>a,.nav-tabs>li.ui-tabs-active>a,.ui-tabs-nav>li.current-tab>a,.ui-tabs-nav>li.ui-tabs-active>a{font-weight:700;color:#4eacd1;box-shadow:inset 0 -3px 0 0 #4eacd1}.navbar{margin-bottom:30px;height:35px;display:block;*zoom:1;border-bottom:1px solid #dfe5e7}.navbar:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.navbar li{list-style:none;float:left;font-size:14px}.navbar li.active a,.navbar li.ui-tabs-active a{box-shadow:inset 0 -3px 0 -1px #4eacd1}.navbar a{display:inline-block;padding:0 15px;line-height:35px;color:#3d3f44}.navbar a:hover{color:#4eacd1;text-decoration:none}.navbar a.none{pointer-events:none}.navbar li.navbar-right{float:right}.navbar .navbtn-register a{background:#5aba90}.navbar .navbtn-register a:hover{background:#45a67c}.breadcrumb{padding:8px 15px;margin:0 0 20px;list-style:none;-webkit-border-top-right-radius:4px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:4px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:4px;background-clip:padding-box;font-size:13px;color:#9aa5ab;border:1px solid #dfe5e7}.breadcrumb>li{display:inline-block;*display:inline;*zoom:1;text-shadow:0 1px 0 #fff}.breadcrumb>li>.divider{padding:0 5px;color:#ccc}.table,form table{width:100%;color:#3d3f44;line-height:1.5;margin-bottom:10px;border-collapse:collapse}.table td,.table th,form table td,form table th{padding:10px;border-style:solid;border-color:#dfe5e7;border-width:1px 0}.table th,form table th{text-align:left;vertical-align:middle}.table td.submit,form table td.submit{border-color:transparent!important;padding:8px 0!important}.table td p,.table th p,form table td p,form table th p{font-size:12px;color:#9aa5ab;line-height:18px;margin:5px 0}.table .admin-table-p,form table .admin-table-p{margin:5px 0}.table td.bold,form table td.bold{width:20%}.table td.border-top-none,.table th.border-top-none,.table tr.border-top-none,form table td.border-top-none,form table th.border-top-none,form table tr.border-top-none{border-top:none!important}.table h3,form table h3{font-weight:700;font-size:110%;margin-bottom:1em;line-height:1.3}.table img,form table img{vertical-align:middle}.table ul,form table ul{margin:0;padding-left:0}.table ul ul,form table ul ul{margin:0}.table td.profile-image img,form table td.profile-image img{vertical-align:baseline}.table ul.radioform li,form table ul.radioform li{margin:10px 0}.table ul.radioform li:first-child,form table ul.radioform li:first-child{margin-top:0}.table ul.radioform li:last-child,form table ul.radioform li:last-child{margin-bottom:0}.table label.radio,.table span.radio,form table label.radio,form table span.radio{font-weight:700;font-size:14px;margin-right:10px;margin-left:2px}.table .draft,form table .draft{font-size:80%;font-style:italic;color:#ff7e45}.table.middle td,.table.middle th,form table.middle td,form table.middle th{vertical-align:middle}.table tr.disabled td,.table tr.disabled th,form table tr.disabled td,form table tr.disabled th{-moz-opacity:.5;opacity:.5;-khtml-opacity:.5;-webkit-opacity:.5;filter:alpha(opacity=50)}.table .td-admin-button,form table .td-admin-button{padding:8px}.table .td-admin-button a.btn,form table .td-admin-button a.btn{padding:2px 10px!important;font-size:11px!important}.table .td-admin-button i,form table .td-admin-button i{padding:1px 8px;cursor:pointer}.table .td-admin-button.is_public,form table .td-admin-button.is_public{width:50px}.table .td-admin-button.is_public i,form table .td-admin-button.is_public i{display:none}.table .td-admin-button.is_draft,form table .td-admin-button.is_draft{width:80px}.table .td-admin-button.is_draft i,form table .td-admin-button.is_draft i{display:inline-block}.table tr:nth-child(even) td,.table tr:nth-child(even) th{background-color:#f7f8f9}.table.nozebra tr:nth-child(even) td,.table.nozebra tr:nth-child(even) th{background-color:transparent}table.table-2column{width:49%}table.table-2column th{width:150px}ol.list,ul.list{color:#3d3f44;margin-bottom:10px}ol.list li,ul.list li{padding:8px 0;border-bottom:1px solid #dfe5e7;list-style:none}ol.list li:first-child,ul.list li:first-child{padding-top:0}ol.list li:last-child,ul.list li:last-child{border-bottom:0;padding-bottom:0}ol.list .time,ul.list .time{font-size:11px;color:#9aa5ab}ol.list.striped li,ul.list.striped li{padding-top:8px;padding-bottom:8px}ol.list.striped li:nth-child(even),ul.list.striped li:nth-child(even){background-color:#f7f8f9}ol.list.striped li:first-child,ul.list.striped li:first-child{padding-top:8px}.entry-list>li,ol.list.striped li:last-child,ul.list.striped li:last-child{border-bottom:1px solid #dfe5e7}.entry-list>li{list-style:none;padding:8px 0 8px 24px;font-size:12px;font-weight:400;line-height:16px;line-height:1.6;position:relative}.entry-list>li:first-child{padding-top:0}.entry-list>li:first-child .blog-icon{top:0}.entry-list>li .blog-icon{position:absolute;top:8px;left:0}.entry-list>li .blog-icon img{vertical-align:middle;margin-right:5px}.entry-list>li .meta{display:block;color:#9aa5ab;font-size:11px}.entry-list>li .meta a{color:#9aa5ab}.entry-list>li .username:hover{text-decoration:underline}.entry-list>li a{color:#4eacd1;text-decoration:none}input[disabled]+label,label.disabled{color:#9aa5ab}input[type=date],input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],textarea{-ms-box-sizing:border-box;box-sizing:border-box;border:1px solid #c2cdd1;margin:0;padding:8px;font-size:120%;-webkit-border-top-right-radius:2px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:2px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:2px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:2px;background-clip:padding-box}input[type=date].disabled:hover,input[type=email].disabled:hover,input[type=number].disabled:hover,input[type=password].disabled:hover,input[type=search].disabled:hover,input[type=tel].disabled:hover,input[type=text].disabled:hover,input[type=url].disabled:hover,textarea.disabled:hover{cursor:default}input[type=date]:focus,input[type=email]:focus,input[type=number]:focus,input[type=password]:focus,input[type=search]:focus,input[type=tel]:focus,input[type=text]:focus,input[type=url]:focus,textarea:focus{outline:none;border-color:#4eacd1}input[type=date].full-width,input[type=email].full-width,input[type=number].full-width,input[type=password].full-width,input[type=search].full-width,input[type=tel].full-width,input[type=text].full-width,input[type=url].full-width,textarea.full-width{width:100%}@media (max-width:1024px){input[type=date],input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],textarea{width:100%}input[type=date].width-inherit,input[type=email].width-inherit,input[type=number].width-inherit,input[type=password].width-inherit,input[type=search].width-inherit,input[type=tel].width-inherit,input[type=text].width-inherit,input[type=url].width-inherit,textarea.width-inherit{width:inherit}}@media (max-width:1024px){input[type=date]{width:auto}}input.small-text{width:5em;font-size:100%;padding:1px 6px}input[type=number][disabled]{background:#f7f8f9;cursor:not-allowed}select{border:1px solid #dfe5e7;background:#fff;border-radius:5px}hr{border-color:#dfe5e7}hr.soften{height:1px;margin:70px 0;background-image:-webkit-linear-gradient(left,transparent,rgba(0,0,0,.1),transparent);background-image:-o-linear-gradient(left,transparent,rgba(0,0,0,.1),transparent);border:0}.badge{display:inline-block;padding:2px 4px;font-size:11px;font-weight:400;line-height:1.4em;color:#fff;background:#9aa5ab;white-space:nowrap;vertical-align:baseline;-webkit-border-top-right-radius:3px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:3px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:3px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:3px;background-clip:padding-box}.badge a{color:inherit!important}.badge-info,.badge-official{background-color:#4eacd1}.badge-important,.label-important{background-color:#b94a48}.badge-important[href],.label-important[href]{background-color:#953b39}.badge-warning,.label-warning{background-color:#f89406}.badge-warning[href],.label-warning[href]{background-color:#c67605}.badge-success,.label-success{background-color:#468847}.badge-success[href],.label-success[href]{background-color:#356635}.badge-inverse,.label-inverse{background-color:#333}.badge-inverse[href],.label-inverse[href]{background-color:#1a1a1a}.register-btn-iframe{text-align:right}.message-box{font-size:12px;line-height:1.5;color:#3d3f44;padding:1em;margin:1em 0;background-color:#f5fdfd;border-left:5px solid #4eacd1}.message-box a{font-weight:400}.message-box h3{font-size:14px;font-weight:700;margin-bottom:.5em}.error-box{font-size:12px;line-height:1.5;color:#3d3f44;padding:1em;margin:1em 0;background-color:#fdf5f5;border-left:5px solid #e0716d}.error-box a{font-weight:400}.alert-box{font-size:12px;line-height:1.5;color:#3d3f44;padding:1em;margin:1em 0;background-color:#faf8d4;border-left:5px solid #f7e042}.alert-box a{font-weight:400}.admin-message{margin:10px 10px 20px;padding:15px;background:#f6f6f6;background:-webkit-gradient(linear,left top,left bottom,from(#fff),to(#eee));background:-moz-linear-gradient(top,#fff 0,#eee 100%);-webkit-border-top-right-radius:3px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:3px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:3px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:3px;background-clip:padding-box;border:1px solid #dfe5e7;font-size:12px;line-height:1.5;color:#454545}.admin-message a{font-weight:400}.admin-message p{margin:10px 0 15px;color:#454545}.admin-message .last-p{margin-bottom:0}.admin-message h1{font-size:18px;border-bottom:1px solid #dfe5e7;margin-bottom:5px;padding-bottom:5px}.admin-message h2{font-size:18px;font-weight:400}.admin-message img.screenshot{float:right;border:1px solid #dfe5e7;box-shadow:0 0 10px rgba(0,0,0,.1);-moz-box-shadow:0 0 10px rgba(0,0,0,.1);-webkit-box-shadow:0 0 10px rgba(0,0,0,.1)}.admin-notice{padding:15px 10px;margin-top:10px;margin-bottom:10px;border:1px solid #dfe5e7;background:#f7f8f9;font-size:12px}.admin-notice h1{margin-bottom:7px;font-size:20px;line-height:1.3}.admin-notice h3{font-size:16px;margin-bottom:1em}.admin-notice h4{font-size:13px;margin-bottom:1em}.admin-notice ol,.admin-notice ul{margin-top:.5em;margin-bottom:.5em;padding-left:2em}.admin-notice li{list-style:circle!important;line-height:1.5;margin-bottom:.5em}.welcome-message{background:#eff3ff;border:1px solid #c6c3ff}.welcome-message h1{font-size:24px;font-weight:400;margin:10px 0}.welcome-message p{margin:.8em 0 1.5em}.welcome-message h2{font-size:18px;font-weight:400}.welcome-message .last{margin-bottom:0}.aside-notice{background:#f5f5f5;padding:10px;font-size:13px;border:1px dashed #ccc;margin-bottom:10px}.aside-notice p{margin-bottom:0!important}.admin-p{margin:10px 0}.alert{padding:8px 35px 8px 14px;margin-bottom:20px;background-color:#fcf8e3;border:1px solid #fbeed5;border-radius:4px}.alert .btn{margin-top:.3em;margin-bottom:.3em}.alert,.alert h4{color:#c09853}.alert h4{margin:0}.alert .close{position:relative;top:-2px;right:-21px;line-height:20px}.alert-success{color:#468847;background-color:#dff0d8;border-color:#d6e9c6}.alert-success h4{color:#468847}.alert-danger,.alert-error{color:#b94a48;background-color:#f2dede;border-color:#eed3d7}.alert-danger a,.alert-error a{color:#843534;font-weight:700}.alert-danger h4,.alert-error h4{color:#b94a48}.alert-info{background-color:#d9edf7;border-color:#bce8f1}.alert-info,.alert-info h4{color:#3a87ad}#close{background:#fff;padding:5px;position:absolute;top:5px;right:5px;z-index:9999;width:16px;height:16px}#close,.btn{cursor:pointer}.btn{display:inline-block;*display:inline;*zoom:1;padding:4px 10px;margin-bottom:0;line-height:18px;color:#4f5051!important;background-color:#f7f8f9;text-align:center;vertical-align:middle;border:1px solid #dfe5e7;-webkit-border-top-right-radius:2px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:2px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:2px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:2px;background-clip:padding-box;font-size:12px;text-decoration:none;font-weight:700;-webkit-appearance:none}.btn:hover{border-color:#c8d2d6;background-color:#eef0f2;text-decoration:none!important}.btn [class*=blogicon-]{position:relative;top:1px}input.btn{margin-top:0}.btn-blue,.btn-primary{color:#fff!important;background:#4eacd1;border:1px solid transparent}.btn-blue:hover,.btn-primary:hover{border:1px solid transparent;background:#339bc3}.btn-danger{color:#fff!important;background:#e0716d;border:1px solid transparent}.btn-danger:hover{border:1px solid transparent;background:#d9504b}.btn-register{color:#fff!important;background:#5aba90;border:1px solid transparent}.btn-register:hover{border:1px solid transparent;background:#45a67c}.btn-pro{color:#fff!important;background:#3d3f44;border:1px solid transparent}.btn-pro:hover{background:#313337}.btn-ghost-wh{color:#fff!important;background:transparent;border-width:3px;border-color:#fff}.btn-ghost-wh:hover{background:transparent;border-color:#c8d2d6}.btn-small{padding:2px 10px!important;font-size:11px!important}.btn-large{padding:13px 19px;font-size:17px;line-height:normal;font-weight:700}.btn.disabled,.btn.disabled:hover,.btn[disabled=disabled],.btn[disabled=disabled]:hover,input#submit[disabled=disabled],input#submit[disabled=disabled]:hover{-moz-opacity:.4;opacity:.4;-khtml-opacity:.4;-webkit-opacity:.4;cursor:default;white-space:nowrap}.btn-group .btn{position:relative;float:left;margin-left:-1px;border-radius:0}.btn-group .btn:first-child{margin-left:0;border-top-left-radius:4px;border-bottom-left-radius:4px}.btn-group .btn:last-child,.btn-group .dropdown-toggle{border-top-right-radius:4px;border-bottom-right-radius:4px}.btn-group .btn.large:first-child{margin-left:0;border-top-left-radius:6px;border-bottom-left-radius:6px}.btn-group .btn.large:last-child,.btn-group .large.dropdown-toggle{border-top-right-radius:6px;border-bottom-right-radius:6px}.btn-group .btn.active,.btn-group .btn:active,.btn-group .btn:focus,.btn-group .btn:hover{z-index:2}.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0}.dropdown-toggle{background:#f7f8f9 url(../images/header/dropdown-gray.gif%3Fversion=bc5ba514f969d60f29633617191c0f65d847138d) 100% no-repeat;cursor:pointer;display:block;padding-right:16px}button.btn{margin-top:0}.btn.btn-tw{background-color:#55acee;border-color:#55acee}.btn.btn-tw,.btn.btn-tw i{color:#fff!important}.btn.btn-tw:hover{background-color:#309aea;border-color:#309aea}.btn.btn-fb{background-color:#3b5998;border-color:#3b5998}.btn.btn-fb,.btn.btn-fb i{color:#fff!important}.btn.btn-fb:hover{background-color:#30487b;border-color:#30487b}.btn.btn-mixi{background-color:#d1ad59;border-color:#d1ad59}.btn.btn-mixi,.btn.btn-mixi i{color:#fff!important}.btn.btn-mixi:hover{background-color:#c89d39;border-color:#c89d39}.btn.btn-haiku{background-color:#b96664;border-color:#b96664}.btn.btn-haiku,.btn.btn-haiku i{color:#fff!important}.btn.btn-haiku:hover{background-color:#a84e4c;border-color:#a84e4c}.btn-table{display:table;width:100%;table-layout:fixed;margin-bottom:20px}.btn-table .btn-table-cell{display:table-cell;padding-right:5px}.btn-table .btn-table-cell:last-child{padding-right:0}.btn-table .btn-table-cell-ellipsis{width:4em}.btn-table .btn{width:100%;-ms-box-sizing:border-box;box-sizing:border-box;padding:.8em 0;font-size:100%}@font-face{font-family:blogicon;src:url(../fonts/public/blogicon/blogicon-regular.woff%3Fversion=e6c6301f8f411fe89573b16cc9a90fdfa73423b4) format('woff'),url(../fonts/public/blogicon/blogicon-regular.otf%3Fversion=3efd24f48a3031dc10b88526d035be7b0873df06) format('opentype');font-weight:400;font-style:normal}[class*=blogicon-]{display:inline-block;font-family:blogicon;font-style:normal;font-weight:400;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}[class*=blogicon-].lg{font-size:1.3333333333333333em;line-height:.75em;vertical-align:-10%}.blogicon-hatenablog:before{content:'\\f000'}.blogicon-plus:before{content:'\\f001'}.blogicon-minus:before{content:'\\f002'}.blogicon-reorder:before{content:'\\f003'}.blogicon-grid:before{content:'\\f004'}.blogicon-chevron-left:before{content:'\\f005'}.blogicon-chevron-right:before{content:'\\f006'}.blogicon-chevron-up:before{content:'\\f007'}.blogicon-chevron-down:before{content:'\\f008'}.blogicon-external:before{content:'\\f009'}.blogicon-plugin:before{content:'\\f00a'}.blogicon-member:before{content:'\\f00b'}.blogicon-account:before{content:'\\f00c'}.blogicon-design:before{content:'\\f00d'}.blogicon-cog:before{content:'\\f00e'}.blogicon-edit:before{content:'\\f010'}.blogicon-addstar:before{content:'\\f011'}.blogicon-subscribe:before{content:'\\f012'}.blogicon-entry:before{content:'\\f013'}.blogicon-notify:before{content:'\\f014'}.blogicon-private:before{content:'\\f015'}.blogicon-user:before{content:'\\f016'}.blogicon-home:before{content:'\\f017'}.blogicon-setting:before{content:'\\f018'}.blogicon-draft:before{content:'\\f019'}.blogicon-search:before{content:'\\f01a'}.blogicon-analytics:before{content:'\\f01b'}.blogicon-help:before{content:'\\f01c'}.blogicon-comment:before{content:'\\f01d'}.blogicon-import:before{content:'\\f01e'}.blogicon-odai:before{content:'\\f01f'}.blogicon-truck:before{content:'\\f020'}.blogicon-group:before{content:'\\f021'}.blogicon-folder:before{content:'\\f022'}.blogicon-add:before{content:'\\f023'}.blogicon-pen:before{content:'\\f024'}.blogicon-close:before{content:'\\f025'}.blogicon-trash:before{content:'\\f026'}.blogicon-bookmark:before{content:'\\f027'}.blogicon-redirect:before{content:'\\f028'}.blogicon-check:before{content:'\\f029';color:#5aba90}.blogicon-crop:before{content:'\\f02a'}.blogicon-repeat:before{content:'\\f02b'}.blogicon-logout:before{content:'\\f02c'}.blogicon-star:before{content:'\\f02d'}.blogicon-star-o:before{content:'\\f720'}.blogicon-pro:before{content:'\\f02e'}.blogicon-myblog:before{content:'\\f030'}.blogicon-recent:before{content:'\\f031'}.blogicon-info:before{content:'\\f032'}.blogicon-good:before{content:'\\f033'}.blogicon-amazon:before{content:'\\f034'}.blogicon-twitter:before{content:'\\f035'}.blogicon-facebook:before{content:'\\f036'}.blogicon-share:before{content:'\\f037'}.blogicon-code:before{content:'\\f038'}.blogicon-list:before{content:'\\f039'}.blogicon-calendar:before{content:'\\f03a'}.blogicon-bracket:before{content:'\\f03b'}.blogicon-photo:before{content:'\\f03c'}.blogicon-color:before{content:'\\f03d'}.blogicon-public:before{content:'\\f03e'}.blogicon-realtime-preview:before{content:'\\f040'}.blogicon-warning:before{content:'\\f041'}.blogicon-link:before{content:'\\f042'}.blogicon-time:before{content:'\\f043'}.blogicon-markdown:before{content:'\\f044'}.blogicon-evernote:before{content:'\\f045'}.blogicon-music:before{content:'\\f046'}.blogicon-niconico:before{content:'\\f047'}.blogicon-heart:before{content:'\\f048'}.blogicon-heart-alt:before{content:'\\f049'}.blogicon-tag:before{content:'\\f04a'}.blogicon-mail:before{content:'\\f04b'}.blogicon-help-alt:before{content:'\\f04c'}.blogicon-sushi:before{content:'\\f04d'}.blogicon-rss:before{content:'\\f04e'}.blogicon-smartphone:before{content:'\\f051'}.blogicon-laptop:before{content:'\\f052'}.blogicon-mixi:before{content:'\\f053'}.blogicon-haiku:before{content:'\\f054'}.blogicon-quote:before{content:'\\f704'}.blogicon-toggle-on:before{content:'\\f71d'}.blogicon-toggle-off:before{content:'\\f71e'}.blogicon-odaislot:before{content:'\\f721'}.blogicon-grid-3x3:before{content:'\\f723'}.blogicon-grid-vertical:before{content:'\\f724'}[class*=blogicon-editor-]{color:#9aa5ab}.blogicon-editor-unorderedlist:before{content:'\\f700'}.blogicon-editor-orderedlist:before{content:'\\f701'}.blogicon-editor-link:before{content:'\\f702'}.blogicon-editor-seemore:before{content:'\\f703'}.blogicon-editor-blockquote:before{content:'\\f704'}.blogicon-editor-footnote:before{content:'\\f705'}.blogicon-editor-toolbar-show:before{content:'\\f706'}.blogicon-editor-toolbar-hide:before{content:'\\f707'}.blogicon-editor-bold:before{content:'\\f708'}.blogicon-editor-italic:before{content:'\\f709'}.blogicon-editor-strike:before{content:'\\f70a'}.blogicon-editor-underline:before{content:'\\f70b'}.blogicon-editor-fontsize:before{content:'\\f70c'}.blogicon-editor-color:before{content:'\\f70d'}.blogicon-editor-insert-toc:before{content:'\\f725'}.blogicon-fotolife:before{content:'\\f711'}.blogicon-curation-bar-toggle:before{content:'\\f713'}.blogicon-paint:before{content:'\\f714'}.blogicon-gourmet:before{content:'\\f715'}.blogicon-flickr:before{content:'\\f716'}.blogicon-gist:before{content:'\\f717'}.blogicon-pixiv:before{content:'\\f718'}.blogicon-miil:before{content:'\\f719'}.blogicon-youtube:before{content:'\\f71a'}.blogicon-instagram:before{content:'\\f71b'}.blogicon-google-picker:before{content:'\\f71c'}.blogicon-others:before{content:'\\f710'}.blogicon-rakuten:before{content:'\\f722'}.l-container{width:960px;margin-left:auto;margin-right:auto}@media (max-width:1024px){.l-container{width:720px}}@media (max-width:767px){.l-container{width:auto;margin-left:10px;margin-right:10px}}.l-row{margin-left:-15px;margin-right:-15px;display:block;*zoom:1}.l-row:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}@media (max-width:767px){.l-row{margin-left:0;margin-right:0}}[class*=l-span]{float:left;padding-right:15px;padding-left:15px;min-height:1px;box-sizing:border-box}@media (max-width:767px){[class*=l-span]{float:none;padding:0;width:auto!important;margin-bottom:1em}}.l-span1{width:8.33333333%}.l-span2{width:16.66666667%}.l-span3{width:25%}.l-span4{width:33.33333333%}.l-span5{width:41.66666667%}.l-span6{width:50%}.l-span7{width:58.33333333%}.l-span8{width:66.66666667%}.l-span9{width:75%}.l-span10{width:83.33333333%}.l-span11{width:91.66666667%}.row{margin-left:-20px;*zoom:1}.row [class*=span]{float:left;min-height:1px;margin-left:20px}.row:after,.row:before{display:table;line-height:0;content:\"\"}.row:after{clear:both}.navbar-fixed-bottom .container,.navbar-fixed-top .container,.navbar-static-top .container,.span12{width:940px}.span11{width:860px}.span10{width:780px}.span9{width:700px}.span8{width:620px}.span7{width:540px}.span6{width:460px}.span5{width:380px}.span4{width:300px}.span3{width:220px}.span2{width:140px}.span1{width:60px}.offset12{margin-left:980px}.offset11{margin-left:900px}.offset10{margin-left:820px}.offset9{margin-left:740px}.offset8{margin-left:660px}.offset7{margin-left:580px}.offset6{margin-left:500px}.offset5{margin-left:420px}.offset4{margin-left:340px}.offset3{margin-left:260px}.offset2{margin-left:180px}.offset1{margin-left:100px}.row-fluid{width:100%;*zoom:1}.row-fluid:after,.row-fluid:before{display:table;line-height:0;content:\"\"}.row-fluid:after{clear:both}.row-fluid [class*=span]{display:block;float:left;width:100%;min-height:30px;margin-left:2.127659574468085%;*margin-left:2.074468085106383%;box-sizing:border-box}.row-fluid [class*=span]:first-child{margin-left:0}.row-fluid .controls-row [class*=span]+[class*=span]{margin-left:2.127659574468085%}.row-fluid .span12{width:100%;*width:99.94680851063829%}.row-fluid .span11{width:91.48936170212765%;*width:91.43617021276594%}.row-fluid .span10{width:82.97872340425532%;*width:82.92553191489361%}.row-fluid .span9{width:74.46808510638297%;*width:74.41489361702126%}.row-fluid .span8{width:65.95744680851064%;*width:65.90425531914893%}.row-fluid .span7{width:57.44680851063829%;*width:57.39361702127659%}.row-fluid .span6{width:48.93617021276595%;*width:48.88297872340425%}.row-fluid .span5{width:40.42553191489362%;*width:40.37234042553192%}.row-fluid .span4{width:31.914893617021278%;*width:31.861702127659576%}.row-fluid .span3{width:23.404255319148934%;*width:23.351063829787233%}.row-fluid .span2{width:14.893617021276595%;*width:14.840425531914894%}.row-fluid .span1{width:6.382978723404255%;*width:6.329787234042553%}.row-fluid .offset12{margin-left:104.25531914893617%;*margin-left:104.14893617021275%}.row-fluid .offset12:first-child{margin-left:102.12765957446808%;*margin-left:102.02127659574467%}.row-fluid .offset11{margin-left:95.74468085106382%;*margin-left:95.6382978723404%}.row-fluid .offset11:first-child{margin-left:93.61702127659574%;*margin-left:93.51063829787232%}.row-fluid .offset10{margin-left:87.23404255319149%;*margin-left:87.12765957446807%}.row-fluid .offset10:first-child{margin-left:85.1063829787234%;*margin-left:84.99999999999999%}.row-fluid .offset9{margin-left:78.72340425531914%;*margin-left:78.61702127659572%}.row-fluid .offset9:first-child{margin-left:76.59574468085106%;*margin-left:76.48936170212764%}.row-fluid .offset8{margin-left:70.2127659574468%;*margin-left:70.10638297872339%}.row-fluid .offset8:first-child{margin-left:68.08510638297872%;*margin-left:67.9787234042553%}.row-fluid .offset7{margin-left:61.70212765957446%;*margin-left:61.59574468085106%}.row-fluid .offset7:first-child{margin-left:59.574468085106375%;*margin-left:59.46808510638297%}.row-fluid .offset6{margin-left:53.191489361702125%;*margin-left:53.085106382978715%}.row-fluid .offset6:first-child{margin-left:51.063829787234035%;*margin-left:50.95744680851063%}.row-fluid .offset5{margin-left:44.68085106382979%;*margin-left:44.57446808510638%}.row-fluid .offset5:first-child{margin-left:42.5531914893617%;*margin-left:42.4468085106383%}.row-fluid .offset4{margin-left:36.170212765957444%;*margin-left:36.06382978723405%}.row-fluid .offset4:first-child{margin-left:34.04255319148936%;*margin-left:33.93617021276596%}.row-fluid .offset3{margin-left:27.659574468085104%;*margin-left:27.5531914893617%}.row-fluid .offset3:first-child{margin-left:25.53191489361702%;*margin-left:25.425531914893618%}.row-fluid .offset2{margin-left:19.148936170212764%;*margin-left:19.04255319148936%}.row-fluid .offset2:first-child{margin-left:17.02127659574468%;*margin-left:16.914893617021278%}.row-fluid .offset1{margin-left:10.638297872340425%;*margin-left:10.53191489361702%}.row-fluid .offset1:first-child{margin-left:8.51063829787234%;*margin-left:8.404255319148938%}.thumbnails{margin-left:-20px;list-style:none;display:block;*zoom:1}.thumbnails:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.thumbnails>li{float:left;margin-bottom:20px;margin-left:20px}#globalheader{position:relative;z-index:99;width:100%;border:none;font-family:Open Sans,Helvetica Neue,Helvetica,Arial,ヒラギノ角ゴ Pro W3,Hiragino Kaku Gothic Pro,メイリオ,Meiryo,ＭＳ\\ Ｐゴシック,MS PGothic,sans-serif}#globalheader-container{height:37px;width:100%;z-index:99}.browsing-with-smartphone #globalheader-container,.browsing-with-smartphone #globalheader-container iframe#globalheader{height:44px}.globalheader-fixed{margin-top:37px}.globalheader-fixed #globalheader-container{width:100%;position:fixed;z-index:9999;top:0;left:0}.hatena-globalheader-window{position:fixed;top:37px;right:100px;width:150px;height:315px;margin:0;padding:0;border:1px solid #ccc;background:#fff;font-size:75%;z-index:9999;box-shadow:0 2px 4px rgba(0,0,0,.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,.2)}.hatena-globalheader-window iframe{width:100%;height:100%}.hatena-globalheader-window.message{font-weight:700;font-size:100%;font-size:13px;line-height:30px;margin:0 0 20px;padding:5px 10px 5px 35px;border:1px solid #c6c3ff;background:#eff3ff url(../images/admin/check.png%3Fversion=54e3b154276a9daca184174c7d95862d561bc819) no-repeat 7px 7px;color:#454545}.hatena-globalheader-window.message a{color:#4eacd1}#notify-window{width:250px}#hatena-diary-dropdown-blogmenu,#hatena-diary-dropdown-mymenu,.hatena-diary-dropdown-myblogs{width:200px}#hatena-diary-feedback{position:fixed;padding:0;margin:0;top:37px;right:188px;border:1px solid #ccc;background:#fff;z-index:9999}#header-container #sp-suggest{background:#3d3f44;padding:1em;text-align:center}#header-container #sp-suggest a{display:inline-block;color:#3d3f44;background:#fff;padding:1em;border-radius:.5em;text-decoration:none}@media (min-width:300px){#header-container #sp-suggest a{font-size:16px}}@media (min-width:900px){#header-container #sp-suggest{padding:3em;text-align:center}#header-container #sp-suggest a{font-size:50px;padding:1em;border-radius:.5em}}body{color:#3d3f44;background:#fff;font-family:Open Sans,Helvetica Neue,Helvetica,Arial,ヒラギノ角ゴ Pro W3,Hiragino Kaku Gothic Pro,メイリオ,Meiryo,ＭＳ\\ Ｐゴシック,MS PGothic,sans-serif}#container,#service-top-container,.container{width:940px;margin-left:auto;margin-right:auto}.section{margin-bottom:60px}.service-main-container{margin-bottom:30px}h2{font-size:1.3em;margin-bottom:1em}h2 a:link,h2 a:visited{color:#3d3f44;text-decoration:none}.box-wrapper{width:990px;margin-right:-30px;overflow:hidden;display:block;*zoom:1}.box-wrapper:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.box-wrapper .box{width:300px;float:left;margin-right:30px}.row h3{margin-bottom:1em;line-height:1.3em}.row h3 a:link,.row h3 a:visited{color:#3d3f44}.row p{font-size:13px}.icon{display:inline-block;width:40px;height:40px;line-height:40px;vertical-align:text-top;background-image:url(../images/guide/guide/features-icon-sprite.png%3Fversion=6f7e1ec727e892cb39599edf5843f31b8b576386);background-repeat:no-repeat}.bcount-module{font-size:12px;line-height:16px;height:16px;display:inline-block}.bcount-module a{color:#008fde!important;text-decoration:none}.bcount-module a:hover{text-decoration:none;color:#00a5de!important}.bcount-module .bcount-module-bicon{font-weight:700;font-size:14px}div.likebox_container .fb_iframe_widget,div.likebox_container .fb_iframe_widget[style],div.likebox_container .fb_iframe_widget iframe[style],div.likebox_container .fb_iframe_widget span,div.likebox_container .fbcomments,div.likebox_container .fbcomments iframe[style]{width:100%!important}#globalheader-container{background:#3d3f44}#globalheader-container #globalheader{margin:0 auto;color:#f7f8f9}#service-header{width:940px;margin:30px auto;min-height:45px;display:block;*zoom:1;position:relative}#service-header:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}#service-header h1{font-size:28px;line-height:1.5}#service-header h1 a{color:#3d3f44}#service-header h1 a:hover{text-decoration:none}#service-header .pull-left{float:left}#service-header .description{font-size:11px;display:block;margin-top:5px;line-height:1.4;font-weight:400;margin:0}#service-header .top-service-logo-wrapper{text-align:center}#service-header .top-service-logo-wrapper .service-logo img{width:250px;height:45px}#service-header .pull-right{position:absolute;top:0;right:0;text-align:right}#service-header .pull-right .description{margin-bottom:5px}#service-header .header-nav ul{font-size:12px;list-style:none}#service-header .header-nav li{float:right;margin-left:5px}#service-header .header-nav .btn{padding:.4em 1.8em}.page-hot #service-header h1,.page-hotentry #service-header h1{background-size:50px 50px;background-position:0 0;padding-left:50px;min-height:50px;line-height:50px;background-repeat:no-repeat;background-image:url(../images/service/service-header-icon-hotentry.png%3Fversion=921fc95cedd9ae07a8ce45bee625cce73217b644)}@media (-webkit-min-device-pixel-ratio:2),(min-resolution:2dppx){.page-hot #service-header h1,.page-hotentry #service-header h1{background-image:url(../images/service/service-header-icon-hotentry@2x.png%3Fversion=4600767683014a7267aa14a7f027bbb72bee2dd3)}}.page-recent #service-header h1{background-size:50px 50px;background-position:0 0;padding-left:50px;min-height:50px;line-height:50px;background-repeat:no-repeat;background-image:url(../images/service/service-header-icon-recent.png%3Fversion=1dbdbfc283a7822f6a03067f3726afaa8db2bacc)}@media (-webkit-min-device-pixel-ratio:2),(min-resolution:2dppx){.page-recent #service-header h1{background-image:url(../images/service/service-header-icon-recent@2x.png%3Fversion=3e0db15d66f69725c53a4f92bedb7aed2937c7d1)}}.global-page .favicon{-webkit-border-top-right-radius:2px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:2px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:2px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:2px;background-clip:padding-box}.global-page #main h2{border-left:3px solid #3d3f44;padding-left:.5em;font-size:24px;line-height:1.5em;font-weight:400;margin:.5em 0 1em}.global-page #main h2 .description{display:inline-block;font-size:11px;font-weight:400;color:#9aa5ab;margin-left:.5em;vertical-align:middle}.global-page #main .section{margin-bottom:40px}.global-page .item-box{width:193px;margin-bottom:30px}.global-page .item-box img{max-width:100%}.global-page .item.item-exlg{margin-bottom:30px}.global-page .item.item-exlg .thumb img{width:100%;height:auto}.global-page .item.item-exlg .entry-title{font-size:28px}.global-page .item.item-exlg.item-with-nothumb .entry-title{font-size:36px}.global-page .item.item-exlg.item-with-nothumb .article{font-size:14px;line-height:1.7}.global-page .item.item-lg{margin-bottom:30px;width:289px;display:block;*zoom:1}.global-page .item.item-lg:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.global-page .item.item-lg .thumb img{width:100%;height:auto}.global-page .item.item-lg:nth-child(odd){border-right:1px solid #dfe5e7;padding-right:20px}.global-page .item{display:block;*zoom:1}.global-page .item:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.global-page .item .thumb{margin-bottom:10px}.global-page .item .entry-title{font-size:18px;margin-bottom:5px;line-height:1.4;font-weight:700;word-wrap:break-word}.global-page .item .entry-title a{color:#3d3f44}.global-page .item .article{font-size:12px;line-height:1.5;margin-bottom:3px;color:#777;word-wrap:break-word;word-break:break-all}.global-page .item .meta{display:block;color:#9aa5ab;font-size:12px;margin-top:5px;line-height:1.5}.global-page .item .meta a{color:#9aa5ab}.global-page .item .meta img{vertical-align:middle}.global-page .item .meta-icon{font-weight:700}.global-page .item-with-nothumb .entry-title{font-size:22px}.global-page .item-with-nothumb .article{font-size:14px;line-height:1.7}.global-page .item-list .list li{padding:15px 0}.global-page .item-list .list li:first-child{padding-top:0}.global-page .item-list .thumb{float:right;margin-left:10px;margin-bottom:0}.global-page .item-thumbnail .thumb-image-wrapper{width:128px;height:128px;overflow:hidden;border:1px solid #dfe5e7;background:#fff;padding:5px;margin-bottom:10px}.global-page .item-thumbnail .thumb-image-wrapper img{width:100%;background-color:#f7f8f9}.global-page .item-thumbnail .entry-title{font-size:12px}.global-page .item-user .username{font-weight:700;font-size:14px;color:#3d3f44}.global-page .item-user .user-icon{float:left;margin-right:10px;-webkit-border-top-right-radius:5px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:5px;background-clip:padding-box}.global-page .item-user .btn{float:right}.global-page .more{text-align:right}.global-page #recent .entry-title{font-size:13px}.global-page .recent-quote .recent-quote-body{font-weight:400;font-style:italic;position:relative}.global-page .recent-quote .recent-quote-body:before{content:\"“\";font-style:normal;line-height:1;font-family:Times New Roman,serif;position:absolute;left:-20px;top:-13px;color:#e0e3e5;font-size:100px;z-index:-2}.global-page .recent-quote .recent-quote-from{font-size:13px;margin:.5em 0}.global-page #hottopic>h3{margin-bottom:15px;padding-bottom:10px;border-bottom:1px solid #dfe5e7}.global-page .topic-title{font-size:120%;color:#4eacd1}.global-page .topic-title a{color:#4eacd1!important}.section-introducing{background-color:#f7f8f9;border-left:3px solid #ccc;padding:1em}.section-introducing h3{font-size:140%;font-weight:400}.section-introducing p{margin:0 0 1em}#sidebar{font-size:12px;line-height:1.5}#sidebar a{color:#3d3f44}#sidebar img{max-width:100%}#sidebar .badge{font-size:80%}#sidebar .section{margin-bottom:30px}#sidebar h2{font-size:14px}#sidebar .h2{margin-bottom:1em}#sidebar .section-box{position:relative;border:1px solid #dfe5e7;padding:20px 10px 10px}#sidebar .section-box h2{position:absolute;top:-10px;left:10px;background-color:#fff;display:inline-block;padding:0 .4em}#sidebar .ad{margin-bottom:30px}#sidebar h3{font-size:14px;margin-bottom:10px}#sidebar .sidebar-box{border:3px solid #dfe5e7;padding:10px;margin-bottom:15px}#sidebar .sidebar-box h2{padding-top:0;border-bottom:1px solid #dfe5e7}#sidebar .odai-box{background-color:#f7f8f9;padding:.8em;margin-bottom:1em;font-size:110%;font-weight:700}#sidebar .sponsored-box li{list-style:none;display:table;width:100%}#sidebar .sponsored-box li:last-child{margin-bottom:0}#sidebar .sponsored-box .profile-image{border:1px solid #dfe5e7;margin-right:8px;margin-bottom:8px}#sidebar .sponsored-box .sponsored-cell{display:table-cell;vertical-align:top}#sidebar .sponsored-box .sponsored-cell.cell-icon{width:60px}#sidebar .sponsored-box .title{display:block;margin-bottom:5px;font-weight:700}#sidebar .sponsored-box .meta{font-size:12px;color:#3d3f44}#sidebar .staffblog li{display:block;*zoom:1}#sidebar .staffblog li:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}#sidebar .staffblog .thumb{width:100px;height:100px;float:left;margin:0 8px 0 0;border:1px solid #dfe5e7;background-size:cover;background-position:50%}#sidebar .app-box{display:block;*zoom:1}#sidebar .app-box:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}#sidebar .app-box .app-box-body img{vertical-align:middle}#sidebar .app-box .app-box-body .appstore{width:135px;height:40px}#sidebar .app-box .p{display:block;margin-bottom:5px;font-size:12px}#sidebar .btn-large{width:100%}.subscribing-top-iframe .list li{height:140px}.subscribing-top-iframe #main .section:last-child{margin-bottom:0}.subscribing-top-iframe #main .section:only-child{margin:60px 0}#google_afc_top{width:730px;text-align:left;margin-left:auto;margin-right:auto;padding-top:20px;padding-bottom:20px}#google_afc_top .google_afc_blocklink{line-height:1.5}#google_afc_top .google_afc_blocklink .google_ads_by{font-size:80%;margin-bottom:5px}#google_afc_top .google_afc_blocklink .google_ads_by a{color:#666}#google_afc_top .google_afc_blocklink ul{list-style:none;margin:0;padding:0}#google_afc_top .google_afc_blocklink li{margin-bottom:10px;list-style:none}#google_afc_top .google_afc_blocklink .title{text-decoration:underline;background:none;font-size:104%;letter-spacing:.4em;font-weight:700;display:block}#google_afc_top .google_afc_blocklink .summary{color:#222;font-size:80%;opacity:.6;display:inline}#google_afc_top .google_afc_blocklink .visible_url{margin-left:10px;white-space:nowrap;font-size:80%;letter-spacing:.4em}#google_afc_top .google_afc_image{font-size:12px}#google_afc_top .google_afc_image td{padding-bottom:5px}#google_afc_top .google_afc_image a{color:#9aa5ab}.footer-section{margin-bottom:20px;text-align:left}.footer-nav{display:block;*zoom:1}.footer-nav:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.footer-nav ul{font-size:75%}.footer-nav ul li{float:left;margin-right:.5em;line-height:40px;color:#dfe5e7;font-weight:700}.footer-nav ul li a{color:#666;margin-right:.5em}.footer-nav ul li a:hover{text-decoration:none;color:#4eacd1}.social-button .fb_iframe_widget{vertical-align:top;*display:inline;*zoom:1}.footer{background:#f7f8f9;padding:30px 0 20px;margin:0;width:100%;text-align:center}.footer-inner{width:960px;margin:0 auto;text-align:left;font-size:80%;display:block;*zoom:1}.footer-inner:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.footer-inner .footer-box{width:240px;float:left;margin-bottom:2em}.footer-inner .footer-box h4{margin:0 0 1.5em;line-height:1.3}.footer-inner .footer-box ul li{list-style-type:none;padding:.5em 0}.footer-inner .footer-box ul li a{color:#9aa5ab}.footer-inner .badge{vertical-align:text-bottom!important}.footer-inner .count-box{width:270px;color:#858585}.footer-inner .count-box h4{color:#858585;font-weight:400;margin-bottom:.5em}.footer-inner .count-box .counter{font-size:300%;font-weight:700;margin-bottom:30px}.footer-inner .count-box .counter .small{font-size:18px;margin-left:3px}.footer-inner .footer-address{font-style:normal;font-size:90%;padding:20px 0 0;color:#9aa5ab;line-height:1.5}.footer-inner .footer-address img.left{margin-right:15px}.footer-inner .footer-address i{display:block;font-size:110%}.section-case{text-align:center;margin:50px auto}.section-case h1{margin:0 0 .3em}.section-case p{margin:1em 0!important}.hot-section,.primary-section,.recent-section{width:800px;margin:20px auto}#main-header h1{font-size:18px;height:18px;font-weight:400;font-style:normal;padding-bottom:10px;margin-bottom:20px;border-bottom:1px solid #dfe5e7}.antenna-delete{display:none}.antenna li:hover .antenna-delete{display:inline;margin-left:10px}.page-403{margin:30px auto 100px;text-align:center;font-size:13px;width:90%}.page-403 h1{font-weight:100;font-size:40px;color:#999;margin-bottom:10px}.page-403 h1.syonboria{font-size:40px;color:#ccc}.page-403 #private-message{padding:10px;background:#fff;border:1px dashed #ccc;width:500px;margin:20px auto}.hatena-id-icon{vertical-align:middle;margin-right:3px}.page-admin-404{background:#f7f8f9;text-align:center}.page-admin-404 #container{width:750px;margin-top:100px;margin-bottom:100px;-webkit-border-top-right-radius:5px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:5px;background-clip:padding-box;background:#fff;-ms-box-sizing:border-box;box-sizing:border-box;box-shadow:0 1px 4px rgba(0,0,0,.4);-moz-box-shadow:0 1px 4px rgba(0,0,0,.4);-webkit-box-shadow:0 1px 4px rgba(0,0,0,.4);padding:30px}.page-admin-404 #container .header{margin-bottom:20px}.page-admin-404 #container h1{font-size:50px;font-weight:400;color:#9aa5ab}.page-admin-404 #container p{font-size:14px;margin-bottom:10px}.page-admin-404 #container .footer-ad{display:block;*zoom:1;margin-top:30px}.page-admin-404 #container .footer-ad:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-admin-404 #container .ad-left{float:left}.page-admin-404 #container .ad-right{float:right}.page-blog-count-exceeded #container .blog-count-exceeded-h1{font-size:28px}.hotentry-heading{margin-top:50px}.hotentry-heading .box1{width:630px}.hotentry-heading .box2{text-align:right;margin-top:30px}.hotentry-heading h1{margin-bottom:.3em;line-height:1.3}.hotentry-heading p{font-size:75%}.hotentry-list{display:block;*zoom:1}.hotentry-list:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.hotentry-list li{list-style:none}.hotentry-list .article{line-height:1.3;overflow:hidden;margin-bottom:15px}.hotentry-list .article a{color:#545353}.hotentry-list .article a:hover{text-decoration:none}.hotentry-list .blog-icon img{-webkit-border-top-right-radius:2px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:2px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:2px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:2px;background-clip:padding-box;vertical-align:middle}.hotentry-list .entry-title{font-size:80%;font-style:italic;color:#9aa5ab}.hotentry-list .caption{white-space:nowrap;-webkit-text-overflow:ellipsis;text-overflow:ellipsis;overflow:hidden;color:#9aa5ab}.hotentry-list .entry-big{border-bottom:1px solid #dfe5e7;padding:30px 0}.hotentry-list .entry-big .article{font-size:30px;height:75px;margin-bottom:15px}.hotentry-list .article-image-wrapper{width:100px;height:100px;overflow:hidden;background-color:#fff;padding:4px;border:1px solid #dfe5e7;box-shadow:0 2px 3px rgba(0,0,0,.1);-moz-box-shadow:0 2px 3px rgba(0,0,0,.1);-webkit-box-shadow:0 2px 3px rgba(0,0,0,.1);float:left;margin-right:10px}.hotentry-list .article-image-wrapper .article-image{background-size:cover;background-position:50%;background-repeat:no-repeat;width:100px;height:100px}.hotentry-list.medium-ul .entry-medium{float:left;width:439px;padding:30px 0 0;border-bottom:1px solid #dfe5e7}.hotentry-list.medium-ul .entry-medium .article{font-size:23px;height:115px;margin-bottom:15px}.hotentry-list.medium-ul .entry-medium .caption{padding-bottom:30px}.hotentry-list.medium-ul li:nth-child(odd){padding-right:30px;border-right:1px solid #dfe5e7}.hotentry-list.medium-ul li:nth-child(even){padding-left:30px}.hotentry-list.medium-ul .entry-left{padding-right:30px;border-right:1px solid #dfe5e7}.hotentry-list.medium-ul .entry-right{padding-left:30px}.hotentry-list.small-ul .entry-small{float:left;width:286px;padding:20px 0 0;border-bottom:1px solid #dfe5e7}.hotentry-list.small-ul .entry-small .article{font-size:18px;height:110px;margin-bottom:15px;line-height:1.5}.hotentry-list.small-ul .entry-small .caption{padding-bottom:20px;font-size:90%}.hotentry-list.small-ul li:nth-child(1),.hotentry-list.small-ul li:nth-child(2){padding-right:20px;border-right:1px solid #dfe5e7}.hotentry-list.small-ul li:nth-child(2),.hotentry-list.small-ul li:nth-child(3){padding-left:20px}.hotentry-list.small-ul .entry-center,.hotentry-list.small-ul .entry-left{padding-right:20px;border-right:1px solid #dfe5e7}.hotentry-list.small-ul .entry-center,.hotentry-list.small-ul .entry-right{padding-left:20px}.hotentry-list.small-ul .article-image-wrapper,.hotentry-list.small-ul .article-image-wrapper .article-image{width:100px;height:100px}.page-guide-library,.page-guide-npo{background:#f7f8f9}.page-guide-library #globalheader-container,.page-guide-npo #globalheader-container{display:none}.page-guide-library #service-top-container,.page-guide-npo #service-top-container{background:#fff;width:880px;border:1px solid #dfe5e7;margin:30px auto}.page-guide-library #container-inner,.page-guide-npo #container-inner{font-size:80%;padding:30px}.page-guide-library .header-logo,.page-guide-npo .header-logo{margin-bottom:10px}.page-guide-library .header-logo img,.page-guide-npo .header-logo img{width:200px}.page-guide-library p,.page-guide-npo p{margin-bottom:1em}.page-guide-library .header,.page-guide-npo .header{padding:30px;text-align:left;border-bottom:1px solid #dfe5e7;background:url(../images/guide/npo/pro-npo-header.jpg%3Fversion=cbfef9b120c26702165d509799eb353ea9b07ad7) no-repeat;background-position:100% 100%}.page-guide-library .header h1,.page-guide-npo .header h1{color:#4eacd1;font-size:40px;line-height:1.1}.page-guide-library .header p,.page-guide-npo .header p{width:400px;font-size:75%}.page-guide-library .header h2,.page-guide-npo .header h2{font-size:100%;margin:10px 0}.page-guide-library .header h2 .large,.page-guide-npo .header h2 .large{border-bottom:4px solid #ff9faa;font-size:120%;padding:0 3px}.page-guide-library h3,.page-guide-npo h3{margin-bottom:.5em;font-size:120%}.page-guide-library table,.page-guide-npo table{border-collapse:collapse}.page-guide-library table tr,.page-guide-npo table tr{border:0}.page-guide-library table td,.page-guide-library table th,.page-guide-npo table td,.page-guide-npo table th{background:#fff;border-width:1px}.page-guide-library section ul,.page-guide-npo section ul{margin:1em 0;padding-left:1.5em}.page-guide-library section ul li,.page-guide-npo section ul li{line-height:1.7}.page-guide-library .campaign-social-buttons,.page-guide-npo .campaign-social-buttons{text-align:right}.page-guide-library .header{background:url(../images/guide/library/pro-library-header.jpg%3Fversion=b84d9ade6126ed9b7bb329e39a19129bddea0796) no-repeat;color:#fff}.page-guide-library .header h1,.page-guide-library .header p{color:#fff}.page-special-doubutsuno_mori{background:url(../images/special/doubutsuno/purty_wood.png%3Fversion=b082fceeeb611125c197ba410ef9d27c3551c685) repeat}.page-special-doubutsuno_mori #service-top-container{padding:30px;background:#f5e2c9;background:none repeat scroll 0 0 hsla(0,0%,100%,.3);box-shadow:inset 0 0 20px #9a7248;-moz-box-shadow:inset 0 0 20px #9a7248;-webkit-box-shadow:inset 0 0 20px #9a7248;border:1px solid #c18c54;text-shadow:1px 1px 0 hsla(0,0%,100%,.3);-moz-text-shadow:1px 1px 0 hsla(0,0%,100%,.3);-webkit-text-shadow:1px 1px 0 hsla(0,0%,100%,.3)}.page-special-doubutsuno_mori .header-nav ul li.selected{border-color:#805221!important}.page-special-doubutsuno_mori .hotentry-heading{color:#2b7434;line-height:1.2}.page-special-doubutsuno_mori h1{font-size:2.5em}.page-special-doubutsuno_mori .span4{margin-top:0}.page-special-doubutsuno_mori .span4 p{font-weight:700}.page-special-doubutsuno_mori .btn-blue{text-shadow:none}.page-special-doubutsuno_mori .btn-blue,.page-special-doubutsuno_mori .btn-blue:hover{background:#2b7434!important;border:none}.page-special-doubutsuno_mori .hotentry-list .article-image-wrapper{width:167px;border:none;box-shadow:0 2px 6px #805221;-moz-box-shadow:0 2px 6px #805221;-webkit-box-shadow:0 2px 6px #805221}.page-special-doubutsuno_mori .article-image{width:167px!important}.page-special-doubutsuno_mori .entry-small .article-image,.page-special-doubutsuno_mori .entry-small .article-image-wrapper{width:100px!important;height:60px!important}.page-special-doubutsuno_mori .hotentry-list .article a{color:#333}.page-special-doubutsuno_mori .hotentry-list .entry-title{color:#805221}.page-special-doubutsuno_mori .entry-big,.page-special-doubutsuno_mori .entry-left,.page-special-doubutsuno_mori .entry-medium,.page-special-doubutsuno_mori .entry-small{border-color:#c18c54!important}.page-special-doubutsuno_mori .register-wrapper p{font-size:12px;font-weight:700;color:#2b7434}.page-keyword-campaign-index #container{width:900px}.page-keyword-campaign-entries #container{width:940px}.page-keyword-campaign-entries,.page-keyword-campaign-index{background:#f7f8f9}.page-keyword-campaign-entries #container,.page-keyword-campaign-index #container{margin:30px auto;background:#fff;border:1px solid #dfe5e7;padding:30px;font-size:90%}.page-keyword-campaign-entries .campaign-image-container,.page-keyword-campaign-index .campaign-image-container{margin:0;padding:0;border:none}.page-keyword-campaign-entries h1,.page-keyword-campaign-index h1{text-align:center;margin:0 0 20px;padding:20px 0;border-top:1px solid #dfe5e7;border-bottom:1px solid #dfe5e7;line-height:1.3}.page-keyword-campaign-entries h1 a,.page-keyword-campaign-index h1 a{color:#3d3f44}.page-keyword-campaign-entries .campaign-social-buttons,.page-keyword-campaign-index .campaign-social-buttons{margin:20px 0;text-align:right}.page-keyword-campaign-entries .campaign-social-buttons .fb-like,.page-keyword-campaign-entries .campaign-social-buttons div,.page-keyword-campaign-entries .campaign-social-buttons iframe,.page-keyword-campaign-index .campaign-social-buttons .fb-like,.page-keyword-campaign-index .campaign-social-buttons div,.page-keyword-campaign-index .campaign-social-buttons iframe{vertical-align:middle!important}.page-keyword-campaign-entries .campaign-image-container img,.page-keyword-campaign-index .campaign-image-container img{width:100%}.page-keyword-campaign-entries .campaign-description,.page-keyword-campaign-index .campaign-description{margin-top:1.5em}.page-keyword-campaign-entries table ol,.page-keyword-campaign-entries table ul,.page-keyword-campaign-index table ol,.page-keyword-campaign-index table ul{margin:0 0 10px 1.5em;padding:0;line-height:1.7}.page-keyword-campaign-entries table ol li ol,.page-keyword-campaign-entries table ol li ul,.page-keyword-campaign-entries table ul li ol,.page-keyword-campaign-entries table ul li ul,.page-keyword-campaign-index table ol li ol,.page-keyword-campaign-index table ol li ul,.page-keyword-campaign-index table ul li ol,.page-keyword-campaign-index table ul li ul{margin-bottom:0}.page-keyword-campaign-entries table p,.page-keyword-campaign-index table p{font-size:100%;color:#3d3f44;line-height:1.5;margin:0}.page-keyword-campaign-entries .entry-content,.page-keyword-campaign-index .entry-content{font-size:1rem;line-height:1.6}.page-keyword-campaign-entries .entry-content h3,.page-keyword-campaign-index .entry-content h3{padding-left:10px;border-bottom:0;border-left:4px solid #9aa5ab}.page-keyword-campaign-entries .list,.page-keyword-campaign-index .list{margin-bottom:20px}.page-keyword-campaign-entries .list .blog-title,.page-keyword-campaign-index .list .blog-title{display:block;font-size:16px;margin-bottom:7px;font-weight:700;line-height:1.2}.page-keyword-campaign-entries .list .blog-title a,.page-keyword-campaign-index .list .blog-title a{color:#3d3f44}.page-keyword-campaign-entries .list li,.page-keyword-campaign-index .list li{display:block;*zoom:1;padding:15px 0}.page-keyword-campaign-entries .list li:after,.page-keyword-campaign-index .list li:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-keyword-campaign-entries .list .article,.page-keyword-campaign-index .list .article{font-size:12px;line-height:1.5;margin-bottom:3px;color:#666;word-wrap:break-word;word-break:break-all}.page-keyword-campaign-entries .list .meta,.page-keyword-campaign-index .list .meta{display:block;font-size:12px;margin-top:7px;line-height:1.5;color:#9aa5ab}.page-keyword-campaign-entries .list .meta .blog-icon,.page-keyword-campaign-index .list .meta .blog-icon{vertical-align:middle;margin-right:7px}.page-keyword-campaign-entries .list .meta a,.page-keyword-campaign-index .list .meta a{color:#9aa5ab}.page-keyword-campaign-entries .list .entry-image,.page-keyword-campaign-index .list .entry-image{float:right;width:100px;height:100px;margin-left:10px;margin-bottom:0;border:1px solid #dfe5e7;background-position:50%;background-size:cover}.page-keyword-campaign-entries .campaign-entry-button-container,.page-keyword-campaign-index .campaign-entry-button-container{text-align:center;margin-bottom:1em}.page-keyword-campaign-entries .campaign-entry-button-container .campaign-entry-button,.page-keyword-campaign-index .campaign-entry-button-container .campaign-entry-button{display:inline-block;*display:inline;*zoom:1;margin-left:10px}.page-keyword-campaign-entries .section-diary,.page-keyword-campaign-index .section-diary{margin-bottom:0}.page-hotodai #service-header h1,.page-hotodai-hot #service-header h1,.page-hotodai-recent #service-header h1{background-size:50px 50px;background-position:0 0;padding-left:50px;min-height:50px;line-height:50px;background-repeat:no-repeat;background-image:url(../images/service/service-header-icon-odai.png%3Fversion=eda6b587797c99d25e85811436d663d792c9e352)}@media (-webkit-min-device-pixel-ratio:2),(min-resolution:2dppx){.page-hotodai #service-header h1,.page-hotodai-hot #service-header h1,.page-hotodai-recent #service-header h1{background-image:url(../images/service/service-header-icon-odai@2x.png%3Fversion=a9941985c819e20d2aa6cea5e0cf5b1ab9aa37ad)}}.page-hotodai #service-header .description,.page-hotodai-hot #service-header .description,.page-hotodai-recent #service-header .description{margin-top:10px;line-height:1.6}.page-hotodai #service-header a,.page-hotodai-hot #service-header a,.page-hotodai-recent #service-header a{color:#4eacd1}.page-hotodai-hot .odai-item,.page-hotodai-recent .odai-item,.page-hotodai .odai-item{position:relative;max-height:90px}.page-hotodai-hot .odai-item .odai-title,.page-hotodai-recent .odai-item .odai-title,.page-hotodai .odai-item .odai-title{display:inline-block;width:100%;height:18px;font-size:18px;font-weight:700;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-bottom:10px}.page-hotodai-hot .odai-item .odai-title a,.page-hotodai-recent .odai-item .odai-title a,.page-hotodai .odai-item .odai-title a{color:#3d3f44}.page-hotodai-hot .odai-item-footer,.page-hotodai-recent .odai-item-footer,.page-hotodai .odai-item-footer{width:100%;max-height:72px;overflow:hidden;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.page-hotodai-hot .odai-item-footer .meta,.page-hotodai-recent .odai-item-footer .meta,.page-hotodai .odai-item-footer .meta{margin:0 1px}.page-hotodai-hot .odai-item-footer .meta p,.page-hotodai-recent .odai-item-footer .meta p,.page-hotodai .odai-item-footer .meta p{font-size:12px;line-height:20px;color:#9aa5ab}.page-hotodai-hot .odai-item-footer .thumbnails,.page-hotodai-recent .odai-item-footer .thumbnails,.page-hotodai .odai-item-footer .thumbnails{width:260px;margin-top:2px;max-height:54px;text-align:right;overflow:hidden;white-space:nowrap}.page-hotodai-hot .odai-item-footer .thumbnails img,.page-hotodai-recent .odai-item-footer .thumbnails img,.page-hotodai .odai-item-footer .thumbnails img{height:54px}.page-odai-entries{background:#f7f8f9}.page-odai-entries #container{width:940px;margin:30px auto;background:#fff;border:1px solid #dfe5e7;padding:30px;font-size:90%}.page-odai-entries .odai-link-to-hotodai{margin:0 0 5px}.page-odai-entries .odai-title{text-align:center;margin:0 0 20px;padding:20px 0;border-top:1px solid #dfe5e7;border-bottom:1px solid #dfe5e7}.page-odai-entries .odai-title h1{line-height:1.3}.page-odai-entries .odai-title a{color:#3d3f44}.page-odai-entries .odai-title .social-buttons{height:24px;padding:14px 0 0;overflow:hidden}.page-odai-entries .odai-title .social-buttons .social-button{display:inline-block;position:relative;margin:0 6px}.page-odai-entries .odai-title .social-buttons .social-button-facebook{top:-8px}.page-odai-entries .odai-title .social-buttons .social-button-twitter a{color:#fff}.page-odai-entries .odai-info{margin:1em auto auto;font-size:14px}.page-odai-entries .odai-info-key{font-weight:700;color:#9aa5ab}.page-odai-entries .odai-info-value{color:#999}.page-odai-entries .odai-info .odai-owner{font-weight:700}.page-odai-entries .odai-info img{width:18px;height:18px;border-radius:2px;vertical-align:middle}.page-odai-entries .post-odai-entry{font-size:18px;color:#4eacd1;margin-left:18px;float:right}.page-odai-entries .odai-invitation{border-bottom:1px solid #dfe5e7;padding:0 0 20px;margin-bottom:30px}.page-odai-entries .odai-invitation h3{margin:0 0 1em;padding:0;display:block;*zoom:1;font-size:16px}.page-odai-entries .odai-invitation h3:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-odai-entries .odai-invitation p{color:gray;line-height:1.5em}.page-odai-entries .list{margin-bottom:20px}.page-odai-entries .list .blog-title{display:block;font-size:16px;margin-bottom:7px;font-weight:700;line-height:1.2}.page-odai-entries .list .blog-title a{color:#3d3f44}.page-odai-entries .list li{display:block;*zoom:1;padding:15px 0}.page-odai-entries .list li:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-odai-entries .list .article{font-size:12px;line-height:1.5;margin-bottom:3px;color:#666;word-wrap:break-word;word-break:break-all}.page-odai-entries .list .meta{display:block;font-size:12px;margin-top:7px;line-height:1.5;color:#9aa5ab}.page-odai-entries .list .meta .blog-icon{vertical-align:middle;margin-right:7px}.page-odai-entries .list .meta a{color:#9aa5ab}.page-odai-entries .list .entry-image{float:right;width:100px;height:100px;margin-left:10px;margin-bottom:0;border:1px solid #dfe5e7;background-position:50%;background-size:cover}.page-odai-entries .odai-entry-button-container{text-align:center;margin-bottom:1em}.page-odai-entries .odai-entry-button-container .odai-entry-button{display:inline-block;*display:inline;*zoom:1;margin-left:10px}.entry-content p{margin:.7em 0}.entry-content img{max-width:100%}.entry-content h1,.entry-content h2,.entry-content h3,.entry-content h4,.entry-content h5,.entry-content h6{margin:1em 0 .5em;line-height:1.5}.entry-content h1{font-size:160%}.entry-content h2{font-size:150%}.entry-content h3{font-size:140%}.entry-content h4{font-size:120%}.entry-content h5{font-size:110%}.entry-content h6{font-size:100%}.entry-content h2,.entry-content h3{border-bottom:1px solid #dfe5e7}.entry-content dd,.entry-content ol,.entry-content ul{margin:0 0 0 1.5em;padding:0;line-height:1.7}.entry-content blockquote{padding:10px;margin:1em 0;border:1px solid #ccc}.entry-content blockquote p{margin-top:0;margin-bottom:0}.entry-content table{border-collapse:collapse;border-spacing:0}.entry-content table td,.entry-content table th{border:1px solid #ddd;padding:5px 10px}.entry-content table th{background:#fafafa}.entry-content a,.entry-content pre{word-break:break-all;overflow:hidden}.entry-content pre{font-size:12px;padding:10px;white-space:pre-wrap;border:1px solid #ccc;font-family:Monaco,Consolas,Courier New,Courier,monospace,sans-serif;line-height:1.3}.entry-content a.keyword{text-decoration:none;border-bottom:1px solid #dedede;color:#222}.entry-content pre.lang-aa{font-size:14px;line-height:15px}.entry-content .hatena-asin-detail li{line-height:1.4}.entry-content .section{margin:0}.entry-content img.hatena-fotolife{cursor:pointer}.entry-content .hatena-image-right{float:right;margin:0 0 1em 1em}.entry-content .hatena-image-left{float:left;margin:0 1em 1em 0}.entry-content pre.code{font-family:Monaco,Consolas,Courier New,Courier,monospace,sans-serif;line-height:1.5}.entry-content .footnote-delimiter{padding-right:.5em}.entry-content .hatena-asin-detail{margin:1em 0;padding:.8em .6em;border:1px solid #ddd;border-image:initial;font-size:90%}.entry-content .hatena-asin-detail .hatena-asin-detail-image{float:left;margin-right:15px}.entry-content .hatena-asin-detail .hatena-asin-detail-title{margin-top:0;font-weight:700}.entry-content .hatena-asin-detail p{text-indent:0}.entry-content .hatena-asin-detail ul{list-style:none;margin:0;padding:0}.entry-content .hatena-asin-detail .hatena-asin-detail-foot{clear:left}.page-famous-blogs-top #service-header h1{background-position:0 0;padding-left:50px;line-height:50px;height:50px;background-repeat:no-repeat;background-image:url(../images/service/service-header-icon-famous.png%3Fversion=ae06126f60fce2cff72e1b00b8972b50e30c8d8b);background-size:50px 50px}@media (-webkit-min-device-pixel-ratio:2),(min-resolution:2dppx){.page-famous-blogs-top #service-header h1{background-image:url(../images/service/service-header-icon-famous@2x.png%3Fversion=e5f3bf492b2e29caea054a030ee5d72f356cbf73)}}.button-nav{list-style:none;margin-bottom:10px}.button-nav li{display:inline-block;*display:inline;*zoom:1;padding:0 7px 7px 0}.page-famous-blogs-top #main h2 .description{float:none;display:inline;font-size:12px;font-weight:400}.list-blog-user li,.list-subscribing-entries li{position:relative;padding:15px 0!important}.list-blog-user li:first-child,.list-subscribing-entries li:first-child{padding-top:0!important}.list-blog-user li:first-child .user-icon,.list-subscribing-entries li:first-child .user-icon{top:0}.list-blog-user .user-icon,.list-subscribing-entries .user-icon{position:absolute;top:15px;left:0;width:64px;height:64px;-webkit-border-top-right-radius:3px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:3px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:3px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:3px;background-clip:padding-box}.list-blog-user .item,.list-subscribing-entries .item{padding-left:80px;display:block;*zoom:1}.list-blog-user .item:after,.list-subscribing-entries .item:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.list-blog-user .item .user-name-wrapper,.list-subscribing-entries .item .user-name-wrapper{display:block;margin-bottom:8px;line-height:1.2;word-wrap:break-word}.list-blog-user .item .user-name,.list-subscribing-entries .item .user-name{font-size:18px;color:#3d3f44;font-weight:700}.list-blog-user .item .user-id,.list-subscribing-entries .item .user-id{color:#9aa5ab;font-size:12px;margin-left:.5em}.list-blog-user .item .entry-title,.list-subscribing-entries .item .entry-title{font-size:13px;line-height:1.7;margin-bottom:0}#sidebar .contact p{margin-bottom:1em}.serviceTop-container{width:960px;margin-left:auto;margin-right:auto}@media (max-width:1024px){.serviceTop-container{width:700px}}@media (max-width:767px){.serviceTop-container{width:auto;padding-left:10px;padding-right:10px;overflow:hidden}}.serviceTop-section{margin:4em auto}@media (max-width:767px){.serviceTop-section{margin:2em auto}}.serviceTop-section .serviceTop-container-header{border-bottom:1px solid #c2cdd1;margin:1em auto}.serviceTop-section .serviceTop-container-header h2{padding-bottom:.5em;margin:0;font-size:120%}@media (max-width:767px){.serviceTop-section .serviceTop-container-header h2{font-size:100%}}.serviceTop-section .serviceTop-container-header h2 [class*=blogicon-]{color:#4eacd1;font-size:80%}.serviceTop-section .serviceTop-container-header p{font-size:90%;color:#9aa5ab;padding-bottom:.5em;margin:0}@media (max-width:767px){.serviceTop-section .serviceTop-container-header p{font-size:80%}}.serviceTop-section .serviceTop-container-heading-label{background-color:#3d3f44;color:#fff;display:inline-block;padding:.2em .4em;font-weight:400}@media (max-width:767px){.serviceTop-section .serviceTop-container-heading-label{font-size:90%}}@media (max-width:767px){.serviceTop-section p{font-size:80%}}.mixin-serviceTop-entry-medium{word-wrap:break-word}.mixin-serviceTop-entry-medium a:hover{text-decoration:underline}.mixin-serviceTop-entry-medium .serviceTop-entry-title{font-size:140%;margin-bottom:.3em;line-height:1.3}@media (max-width:1024px){.mixin-serviceTop-entry-medium .serviceTop-entry-title{font-size:130%}}.mixin-serviceTop-entry-medium .serviceTop-entry-title a{color:#3d3f44}.mixin-serviceTop-entry-medium .serviceTop-entry-img-a{display:block;margin-bottom:1em}.mixin-serviceTop-entry-medium .serviceTop-entry-img{display:block;width:100%;height:170px;background-color:#f7f8f9;background-size:cover;background-position:50%}.mixin-serviceTop-entry-medium .serviceTop-blog-title{font-size:100%;margin-bottom:.5em;line-height:1.3}@media (max-width:1024px){.mixin-serviceTop-entry-medium .serviceTop-blog-title{font-size:90%}}.mixin-serviceTop-entry-medium .serviceTop-blog-title a{color:#3d3f44}.mixin-serviceTop-entry-medium .serviceTop-entry-date{display:block;font-size:80%;color:#9aa5ab}.mixin-serviceTop-entry-medium .serviceTop-entry-content{font-size:90%;margin-top:1em;line-height:1.6}.mixin-serviceTop-entry-medium .serviceTop-entry-content a{color:#6d717a}.mixin-serviceTop-entry-medium .serviceTop-entry-content a:hover{text-decoration:none}.mixin-serviceTop-entry-compact{padding:0;padding:10px 0;box-sizing:border-box;border-bottom:1px solid #dfe5e7;min-height:92px;display:block;*zoom:1}.mixin-serviceTop-entry-compact:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.mixin-serviceTop-entry-compact:first-child{border-top:1px solid #dfe5e7}.mixin-serviceTop-entry-compact a{color:#3d3f44}.mixin-serviceTop-entry-compact a:hover{text-decoration:underline}.mixin-serviceTop-entry-compact .serviceTop-entry-img-a{float:right;display:block;width:70px;height:70px;margin-left:8px}.mixin-serviceTop-entry-compact .serviceTop-entry-img{width:70px;height:70px;background-size:cover;background-position:50%;background-color:#f7f8f9}.mixin-serviceTop-entry-compact .serviceTop-entry-title{font-size:17px;line-height:1.3;height:42px;overflow:hidden;margin-bottom:6px}.mixin-serviceTop-entry-compact .serviceTop-blog-title{font-size:14px;line-height:1.3;height:17px;overflow:hidden}.mixin-serviceTop-entry-compact .serviceTop-blog-title a{color:#9aa5ab}.mixin-serviceTop-entry-compact .serviceTop-entry-date{display:none}.mixin-serviceTop-entry-touch{padding:0;position:relative;margin-left:-10px;margin-right:-10px;height:100px;padding:8px 10px;box-sizing:border-box;border-bottom:1px solid #dfe5e7}.mixin-serviceTop-entry-touch .serviceTop-entry-img-a{position:absolute;top:0;right:0;width:100px;height:99px;display:none}.mixin-serviceTop-entry-touch .serviceTop-entry-img{width:100px;height:99px;background-size:cover;background-position:50%;background-color:#f7f8f9}.mixin-serviceTop-entry-touch .serviceTop-entry-title{font-size:95%;height:38px;overflow:hidden}.mixin-serviceTop-entry-touch .serviceTop-blog-title{font-size:80%;height:15px;overflow:hidden;margin-bottom:.5em}.mixin-serviceTop-entry-touch .serviceTop-blog-title a{color:#9aa5ab}.mixin-serviceTop-entry-touch .serviceTop-entry-date{font-size:75%;display:block;color:#9aa5ab}.mixin-serviceTop-entry-touch .serviceTop-entry-content{font-size:75%;display:none}.page-global-top.serviceTop #globalheader-container{background-color:#f7f8f9}.page-global-top.serviceTop #globalheader-container #globalheader{color:#3d3f44}@media (max-width:767px){.page-global-top.serviceTop #globalheader-container{height:44px}}.page-global-top.serviceTop .serviceTop-header{margin-top:1.5em;display:block;*zoom:1}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-header{margin-top:1em}}.page-global-top.serviceTop .serviceTop-header:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-logo{float:left}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-logo{float:none;width:100%;text-align:center}}.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-logo h1{display:inline-block;vertical-align:middle}.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-logo h1 a{display:inline-block}.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-logo .serviceTop-header-box-logo-dash{width:2em;height:1px;display:inline-block;vertical-align:middle;margin:0 .15em;background-color:#c2cdd1}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-logo .serviceTop-header-box-logo-dash{width:1.5em}}.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-logo p{display:inline-block;vertical-align:middle;color:#9aa5ab;font-size:90%}.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-logo-img{width:50px;height:50px;display:inline-block}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-logo-img{width:40px;height:40px}}.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-register{float:right;text-align:right;margin-top:15px}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-register{float:none;text-align:center;margin-top:10px}}.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-register-btn{display:inline-block;*display:inline;*zoom:1;padding:4px 10px;margin-bottom:0;line-height:18px;color:#4f5051!important;background-color:#f7f8f9;text-align:center;vertical-align:middle;border:1px solid #dfe5e7;-webkit-border-top-right-radius:2px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:2px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:2px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:2px;background-clip:padding-box;cursor:pointer;font-size:12px;text-decoration:none;font-weight:700;-webkit-appearance:none;color:#fff!important;background:#5aba90;border:1px solid transparent}.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-register-btn:hover{border-color:#c8d2d6;background-color:#eef0f2;text-decoration:none!important}.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-register-btn [class*=blogicon-]{position:relative;top:1px}.page-global-top.serviceTop .serviceTop-header .serviceTop-header-box-register-btn:hover{border:1px solid transparent;background:#45a67c}.page-global-top.serviceTop .serviceTop-recommend{margin:4em auto;margin-top:2em;margin-bottom:0}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend{margin:2em auto}}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-container-header{border-bottom:1px solid #c2cdd1;margin:1em auto}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-container-header h2{padding-bottom:.5em;margin:0;font-size:120%}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend .serviceTop-container-header h2{font-size:100%}}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-container-header h2 [class*=blogicon-]{color:#4eacd1;font-size:80%}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-container-header p{font-size:90%;color:#9aa5ab;padding-bottom:.5em;margin:0}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend .serviceTop-container-header p{font-size:80%}}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-container-heading-label{background-color:#3d3f44;color:#fff;display:inline-block;padding:.2em .4em;font-weight:400}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend .serviceTop-container-heading-label{font-size:90%}}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend p{font-size:80%}}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend{margin-bottom:0;margin-top:1em}}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry{word-wrap:break-word}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry a:hover{text-decoration:underline}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry .serviceTop-entry-title{font-size:140%;margin-bottom:.3em;line-height:1.3}@media (max-width:1024px){.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry .serviceTop-entry-title{font-size:130%}}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry .serviceTop-entry-title a{color:#3d3f44}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry .serviceTop-entry-img-a{display:block;margin-bottom:1em}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry .serviceTop-entry-img{display:block;width:100%;height:170px;background-color:#f7f8f9;background-size:cover;background-position:50%}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry .serviceTop-blog-title{font-size:100%;margin-bottom:.5em;line-height:1.3}@media (max-width:1024px){.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry .serviceTop-blog-title{font-size:90%}}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry .serviceTop-blog-title a{color:#3d3f44}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry .serviceTop-entry-date{display:block;font-size:80%;color:#9aa5ab}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry .serviceTop-entry-content{font-size:90%;margin-top:1em;line-height:1.6}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry .serviceTop-entry-content a{color:#6d717a}.page-global-top.serviceTop .serviceTop-recommend .serviceTop-entry .serviceTop-entry-content a:hover{text-decoration:none}.page-global-top.serviceTop .serviceTop-recommend-primary{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:15px;padding-bottom:15px;border-bottom:1px solid #dfe5e7}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend-primary{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-bottom:10px;padding-bottom:0;border-bottom:none}}.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-entry{padding-right:40px;width:620px}@media (max-width:1024px){.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-entry{width:360px}}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-entry{width:auto;-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2;padding-right:0}}.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-entry .serviceTop-entry-title{font-size:220%;line-height:1.3}@media (max-width:1024px){.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-entry .serviceTop-entry-title{font-size:200%}}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-entry .serviceTop-entry-title{font-size:130%}}.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-entry .serviceTop-blog-title{font-size:140%}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-entry .serviceTop-blog-title{font-size:100%}.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-entry .serviceTop-blog-title a{color:#9aa5ab}}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-entry .serviceTop-entry-content{display:none}}.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-recommend-primary-img{width:300px}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-recommend-primary-img{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1;width:auto;margin-left:-15px;margin-right:-15px;margin-bottom:.5em}}.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-recommend-primary-img .serviceTop-entry-img-a{display:block;margin-bottom:1em}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-recommend-primary-img .serviceTop-entry-img-a{margin-bottom:0}}.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-recommend-primary-img .serviceTop-entry-img{display:block;width:300px;height:170px;background-color:#f7f8f9;background-size:cover;background-position:50%}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-recommend-primary-img .serviceTop-entry-img{width:100%;height:150px}}@media (max-width:374px){.page-global-top.serviceTop .serviceTop-recommend-primary .serviceTop-recommend-primary-img .serviceTop-entry-img{height:100px}}.page-global-top.serviceTop .serviceTop-recommend-grid{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:15px;padding-bottom:15px;border-bottom:1px solid #dfe5e7}.page-global-top.serviceTop .serviceTop-recommend-grid:last-child{padding-bottom:0;margin-bottom:0;border-bottom:none}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend-grid{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-bottom:0;padding-bottom:0;border-bottom:none}}.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry{width:33.333333%;vertical-align:top;padding-right:15px;padding-left:15px}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry{display:block;width:auto;padding:0;position:relative;margin-left:-10px;margin-right:-10px;height:100px;padding:8px 10px;box-sizing:border-box;border-bottom:1px solid #dfe5e7}.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry .serviceTop-entry-img-a{position:absolute;top:0;right:0;width:100px;height:99px;display:none}.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry .serviceTop-entry-img{width:100px;height:99px;background-size:cover;background-position:50%;background-color:#f7f8f9}.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry .serviceTop-entry-title{font-size:95%;height:38px;overflow:hidden}.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry .serviceTop-blog-title{font-size:80%;height:15px;overflow:hidden;margin-bottom:.5em}.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry .serviceTop-blog-title a{color:#9aa5ab}.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry .serviceTop-entry-date{font-size:75%;display:block;color:#9aa5ab}.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry .serviceTop-entry-content{font-size:75%;display:none}}.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry:first-child{padding-left:0;border-right:1px solid #dfe5e7}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry:first-child{border-right:0;padding-left:10px}}.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry:last-child{padding-right:0;border-left:1px solid #dfe5e7}@media (max-width:767px){.page-global-top.serviceTop .serviceTop-recommend-grid>.serviceTop-entry:last-child{border-left:0;padding-right:10px}}@media (max-width:767px){.serviceTop-entry.has-thumb{padding-right:110px!important;height:100px;box-sizing:border-box;border-bottom:1px solid #dfe5e7}.serviceTop-entry.has-thumb .serviceTop-entry-img-a{display:block!important}.serviceTop-entry.has-thumb .serviceTop-entry-title{height:37px;overflow:hidden}.serviceTop-entry.has-thumb .serviceTop-blog-title{height:15px;overflow:hidden}}@media (max-width:767px){.serviceTop-recommend-grid.grid-has-ad .serviceTop-entry:first-child{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.serviceTop-recommend-grid.grid-has-ad .serviceTop-entry:nth-child(2){-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}}.serviceTop-recommend-grid.grid-has-ad .serviceTop-entry.serviceTop-recommend-ad{height:auto}.serviceTop-recommend-grid.grid-has-ad .serviceTop-entry.serviceTop-recommend-ad.is-touch{min-height:104px}@media (max-width:767px){.serviceTop-recommend-grid.grid-has-ad .serviceTop-entry.serviceTop-recommend-ad{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1;padding:0!important;text-align:center;border-top:1px solid #dfe5e7}}.serviceTop-recommend-grid.grid-has-ad .serviceTop-entry.serviceTop-recommend-ad>div{background-color:transparent;height:330px;width:300px}@media (max-width:1024px){.serviceTop-recommend-grid.grid-has-ad .serviceTop-entry.serviceTop-recommend-ad>div{width:213px}}@media (max-width:767px){.serviceTop-recommend-grid.grid-has-ad .serviceTop-entry.serviceTop-recommend-ad>div{width:auto;height:auto;overflow:hidden}}.serviceTop-promotion{margin:4em auto;margin-top:2em}@media (max-width:767px){.serviceTop-promotion{margin:2em auto}}.serviceTop-promotion .serviceTop-container-header{border-bottom:1px solid #c2cdd1;margin:1em auto}.serviceTop-promotion .serviceTop-container-header h2{padding-bottom:.5em;margin:0;font-size:120%}@media (max-width:767px){.serviceTop-promotion .serviceTop-container-header h2{font-size:100%}}.serviceTop-promotion .serviceTop-container-header h2 [class*=blogicon-]{color:#4eacd1;font-size:80%}.serviceTop-promotion .serviceTop-container-header p{font-size:90%;color:#9aa5ab;padding-bottom:.5em;margin:0}@media (max-width:767px){.serviceTop-promotion .serviceTop-container-header p{font-size:80%}}.serviceTop-promotion .serviceTop-container-heading-label{background-color:#3d3f44;color:#fff;display:inline-block;padding:.2em .4em;font-weight:400}@media (max-width:767px){.serviceTop-promotion .serviceTop-container-heading-label{font-size:90%}}@media (max-width:767px){.serviceTop-promotion p{font-size:80%}}.serviceTop-promotion-list{list-style:none}.serviceTop-promotion-list li{margin-bottom:.6em;padding-bottom:.6em;border-bottom:1px solid #dfe5e7;font-size:1rem;line-height:1.5}@media (max-width:767px){.serviceTop-promotion-list li{font-size:.9rem}}.serviceTop-promotion-list li:first-child{padding-top:.6em;border-top:1px solid #dfe5e7}.serviceTop-promotion-list li a{color:#3d3f44}.serviceTop-promotion-list li .serviceTop-promotion-list-symbol{content:\"▸ \";color:#9aa5ab;text-decoration:none}.serviceTop-category{margin:4em auto}@media (max-width:767px){.serviceTop-category{margin:2em auto}}.serviceTop-category .serviceTop-container-header{border-bottom:1px solid #c2cdd1;margin:1em auto}.serviceTop-category .serviceTop-container-header h2{padding-bottom:.5em;margin:0;font-size:120%}@media (max-width:767px){.serviceTop-category .serviceTop-container-header h2{font-size:100%}}.serviceTop-category .serviceTop-container-header h2 [class*=blogicon-]{color:#4eacd1;font-size:80%}.serviceTop-category .serviceTop-container-header p{font-size:90%;color:#9aa5ab;padding-bottom:.5em;margin:0}@media (max-width:767px){.serviceTop-category .serviceTop-container-header p{font-size:80%}}.serviceTop-category .serviceTop-container-heading-label{background-color:#3d3f44;color:#fff;display:inline-block;padding:.2em .4em;font-weight:400}@media (max-width:767px){.serviceTop-category .serviceTop-container-heading-label{font-size:90%}}@media (max-width:767px){.serviceTop-category p{font-size:80%}}.serviceTop-category .serviceTop-category-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:767px){.serviceTop-category .serviceTop-category-row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.serviceTop-category .serviceTop-category-row>div{width:30%}@media (max-width:767px){.serviceTop-category .serviceTop-category-row>div{width:auto;margin-bottom:2em}.serviceTop-category .serviceTop-category-row>div:last-child{margin-bottom:0}}.serviceTop-category h3{font-size:110%;margin:0 0 .5em}.serviceTop-category .serviceTop-entry{padding:0;padding:10px 0;box-sizing:border-box;border-bottom:1px solid #dfe5e7;min-height:92px;display:block;*zoom:1}.serviceTop-category .serviceTop-entry:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.serviceTop-category .serviceTop-entry:first-child{border-top:1px solid #dfe5e7}.serviceTop-category .serviceTop-entry a{color:#3d3f44}.serviceTop-category .serviceTop-entry a:hover{text-decoration:underline}.serviceTop-category .serviceTop-entry .serviceTop-entry-img-a{float:right;display:block;width:70px;height:70px;margin-left:8px}.serviceTop-category .serviceTop-entry .serviceTop-entry-img{width:70px;height:70px;background-size:cover;background-position:50%;background-color:#f7f8f9}.serviceTop-category .serviceTop-entry .serviceTop-entry-title{font-size:17px;line-height:1.3;height:42px;overflow:hidden;margin-bottom:6px}.serviceTop-category .serviceTop-entry .serviceTop-blog-title{font-size:14px;line-height:1.3;height:17px;overflow:hidden}.serviceTop-category .serviceTop-entry .serviceTop-blog-title a{color:#9aa5ab}.serviceTop-category .serviceTop-entry .serviceTop-entry-date{display:none}@media (max-width:767px){.serviceTop-category .serviceTop-entry{padding:0;position:relative;margin-left:-10px;margin-right:-10px;height:100px;padding:8px 10px;box-sizing:border-box;border-bottom:1px solid #dfe5e7}.serviceTop-category .serviceTop-entry .serviceTop-entry-img-a{position:absolute;top:0;right:0;width:100px;height:99px;display:none}.serviceTop-category .serviceTop-entry .serviceTop-entry-img{width:100px;height:99px;background-size:cover;background-position:50%;background-color:#f7f8f9}.serviceTop-category .serviceTop-entry .serviceTop-entry-title{font-size:95%;height:38px;overflow:hidden}.serviceTop-category .serviceTop-entry .serviceTop-blog-title{font-size:80%;height:15px;overflow:hidden;margin-bottom:.5em}.serviceTop-category .serviceTop-entry .serviceTop-blog-title a{color:#9aa5ab}.serviceTop-category .serviceTop-entry .serviceTop-entry-date{font-size:75%;display:block;color:#9aa5ab}.serviceTop-category .serviceTop-entry .serviceTop-entry-content{font-size:75%;display:none}}.serviceTop-backIn{margin:4em auto}@media (max-width:767px){.serviceTop-backIn{margin:2em auto}}.serviceTop-backIn .serviceTop-container-header{border-bottom:1px solid #c2cdd1;margin:1em auto}.serviceTop-backIn .serviceTop-container-header h2{padding-bottom:.5em;margin:0;font-size:120%}@media (max-width:767px){.serviceTop-backIn .serviceTop-container-header h2{font-size:100%}}.serviceTop-backIn .serviceTop-container-header h2 [class*=blogicon-]{color:#4eacd1;font-size:80%}.serviceTop-backIn .serviceTop-container-header p{font-size:90%;color:#9aa5ab;padding-bottom:.5em;margin:0}@media (max-width:767px){.serviceTop-backIn .serviceTop-container-header p{font-size:80%}}.serviceTop-backIn .serviceTop-container-heading-label{background-color:#3d3f44;color:#fff;display:inline-block;padding:.2em .4em;font-weight:400}@media (max-width:767px){.serviceTop-backIn .serviceTop-container-heading-label{font-size:90%}}@media (max-width:767px){.serviceTop-backIn p{font-size:80%}}.serviceTop-backIn .serviceTop-backIn-grid{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:767px){.serviceTop-backIn .serviceTop-backIn-grid{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry{width:33.333333%;vertical-align:top;padding-right:15px;padding-left:15px}@media (max-width:767px){.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry{display:block;width:auto;padding:0;position:relative;margin-left:-10px;margin-right:-10px;height:100px;padding:8px 10px;box-sizing:border-box;border-bottom:1px solid #dfe5e7}.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry .serviceTop-entry-img-a{position:absolute;top:0;right:0;width:100px;height:99px;display:none}.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry .serviceTop-entry-img{width:100px;height:99px;background-size:cover;background-position:50%;background-color:#f7f8f9}.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry .serviceTop-entry-title{font-size:95%;height:38px;overflow:hidden}.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry .serviceTop-blog-title{font-size:80%;height:15px;overflow:hidden;margin-bottom:.5em}.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry .serviceTop-blog-title a{color:#9aa5ab}.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry .serviceTop-entry-date{font-size:75%;display:block;color:#9aa5ab}.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry .serviceTop-entry-content{font-size:75%;display:none}}.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry:first-child{padding-left:0;border-right:1px solid #dfe5e7}@media (max-width:767px){.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry:first-child{border-right:0;padding-left:10px}}.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry:last-child{padding-right:0;border-left:1px solid #dfe5e7}@media (max-width:767px){.serviceTop-backIn .serviceTop-backIn-grid>.serviceTop-entry:last-child{border-left:0;padding-right:10px}}.serviceTop-backIn .serviceTop-entry{word-wrap:break-word}.serviceTop-backIn .serviceTop-entry a:hover{text-decoration:underline}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-title{font-size:140%;margin-bottom:.3em;line-height:1.3}@media (max-width:1024px){.serviceTop-backIn .serviceTop-entry .serviceTop-entry-title{font-size:130%}}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-title a{color:#3d3f44}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-img-a{display:block;margin-bottom:1em}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-img{display:block;width:100%;height:170px;background-color:#f7f8f9;background-size:cover;background-position:50%}.serviceTop-backIn .serviceTop-entry .serviceTop-blog-title{font-size:100%;margin-bottom:.5em;line-height:1.3}@media (max-width:1024px){.serviceTop-backIn .serviceTop-entry .serviceTop-blog-title{font-size:90%}}.serviceTop-backIn .serviceTop-entry .serviceTop-blog-title a{color:#3d3f44}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-date{display:block;font-size:80%;color:#9aa5ab}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-content{font-size:90%;margin-top:1em;line-height:1.6}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-content a{color:#6d717a}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-content a:hover{text-decoration:none}@media (max-width:767px){.serviceTop-backIn .serviceTop-entry{padding:0;position:relative;margin-left:-10px;margin-right:-10px;height:100px;padding:8px 10px;box-sizing:border-box;border-bottom:1px solid #dfe5e7}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-img-a{position:absolute;top:0;right:0;width:100px;height:99px;display:none}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-img{width:100px;height:99px;background-size:cover;background-position:50%;background-color:#f7f8f9}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-title{font-size:95%;height:38px;overflow:hidden}.serviceTop-backIn .serviceTop-entry .serviceTop-blog-title{font-size:80%;height:15px;overflow:hidden;margin-bottom:.5em}.serviceTop-backIn .serviceTop-entry .serviceTop-blog-title a{color:#9aa5ab}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-date{font-size:75%;display:block;color:#9aa5ab}.serviceTop-backIn .serviceTop-entry .serviceTop-entry-content{font-size:75%;display:none}}.serviceTop-startHatenablog{margin:4em auto;padding:3em 0;text-align:center;background-size:cover;background-position:50%;color:#fff;position:relative}@media (max-width:767px){.serviceTop-startHatenablog{margin:2em auto}}.serviceTop-startHatenablog .serviceTop-container-header{border-bottom:1px solid #c2cdd1;margin:1em auto}.serviceTop-startHatenablog .serviceTop-container-header h2{padding-bottom:.5em;margin:0;font-size:120%}@media (max-width:767px){.serviceTop-startHatenablog .serviceTop-container-header h2{font-size:100%}}.serviceTop-startHatenablog .serviceTop-container-header h2 [class*=blogicon-]{color:#4eacd1;font-size:80%}.serviceTop-startHatenablog .serviceTop-container-header p{font-size:90%;color:#9aa5ab;padding-bottom:.5em;margin:0}@media (max-width:767px){.serviceTop-startHatenablog .serviceTop-container-header p{font-size:80%}}.serviceTop-startHatenablog .serviceTop-container-heading-label{background-color:#3d3f44;color:#fff;display:inline-block;padding:.2em .4em;font-weight:400}@media (max-width:767px){.serviceTop-startHatenablog .serviceTop-container-heading-label{font-size:90%}}@media (max-width:767px){.serviceTop-startHatenablog p{font-size:80%}}@media (max-width:767px){.serviceTop-startHatenablog{margin-top:0;padding:2em 0}}.serviceTop-startHatenablog .serviceTop-container{position:relative;z-index:2}.serviceTop-startHatenablog .serviceTop-startHatenablog-mask{position:absolute;width:100%;height:100%;left:0;top:0;z-index:1;background-color:#000;opacity:.3}.serviceTop-startHatenablog a{color:#fff}.serviceTop-startHatenablog h3{font-size:280%;font-weight:400}@media (max-width:767px){.serviceTop-startHatenablog h3{font-size:150%}}.serviceTop-startHatenablog p{margin:1em auto;font-size:90%}@media (max-width:767px){.serviceTop-startHatenablog p.serviceTop-startHatenablog-p2{display:none}}.serviceTop-startHatenablog .serviceTop-startHatenablog-registerBtn{display:inline-block;*display:inline;*zoom:1;padding:4px 10px;margin-bottom:0;line-height:18px;color:#4f5051!important;background-color:#f7f8f9;text-align:center;vertical-align:middle;border:1px solid #dfe5e7;-webkit-border-top-right-radius:2px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:2px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:2px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:2px;background-clip:padding-box;cursor:pointer;font-size:12px;text-decoration:none;-webkit-appearance:none;padding:13px 19px;font-size:17px;line-height:normal;font-weight:700;color:#fff!important;background:#5aba90;border:1px solid transparent}.serviceTop-startHatenablog .serviceTop-startHatenablog-registerBtn:hover{border-color:#c8d2d6;background-color:#eef0f2;text-decoration:none!important}.serviceTop-startHatenablog .serviceTop-startHatenablog-registerBtn [class*=blogicon-]{position:relative;top:1px}.serviceTop-startHatenablog .serviceTop-startHatenablog-registerBtn:hover{border:1px solid transparent;background:#45a67c}.serviceTop-information{margin:4em auto}@media (max-width:767px){.serviceTop-information{margin:2em auto}}.serviceTop-information .serviceTop-container-header{border-bottom:1px solid #c2cdd1;margin:1em auto}.serviceTop-information .serviceTop-container-header h2{padding-bottom:.5em;margin:0;font-size:120%}@media (max-width:767px){.serviceTop-information .serviceTop-container-header h2{font-size:100%}}.serviceTop-information .serviceTop-container-header h2 [class*=blogicon-]{color:#4eacd1;font-size:80%}.serviceTop-information .serviceTop-container-header p{font-size:90%;color:#9aa5ab;padding-bottom:.5em;margin:0}@media (max-width:767px){.serviceTop-information .serviceTop-container-header p{font-size:80%}}.serviceTop-information .serviceTop-container-heading-label{background-color:#3d3f44;color:#fff;display:inline-block;padding:.2em .4em;font-weight:400}@media (max-width:767px){.serviceTop-information .serviceTop-container-heading-label{font-size:90%}}@media (max-width:767px){.serviceTop-information p{font-size:80%}}.serviceTop-information .serviceTop-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:767px){.serviceTop-information .serviceTop-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.serviceTop-information .serviceTop-container>div{width:48%}@media (max-width:767px){.serviceTop-information .serviceTop-container>div{width:auto;margin-bottom:2em}.serviceTop-information .serviceTop-container>div:last-child{margin-bottom:0}}.serviceTop-information .serviceTop-information-more-btn{display:inline-block;padding:.7em 0;font-size:90%;color:#3d3f44}@media (max-width:767px){.serviceTop-information .serviceTop-information-more-btn{padding-left:10px;padding-right:10px;box-sizing:border-box;text-align:right}.serviceTop-information .serviceTop-information-more-btn [class*=blogicon-]{padding-right:10px}}@media (max-width:767px){.serviceTop-information-list{margin-left:-10px;margin-right:-10px}}.serviceTop-information-list li{list-style-type:none;word-wrap:break-word;border-bottom:1px solid #dfe5e7}.serviceTop-information-list li:last-child{border-bottom:none}.serviceTop-information-list a{display:table;width:100%}.serviceTop-information-list-content a{color:#3d3f44;min-height:80px}.serviceTop-information-list-title{padding:8px 0;line-height:1.4em;display:table-cell;vertical-align:top;font-size:90%}@media (max-width:767px){.serviceTop-information-list-title{padding-left:10px;padding-right:10px}}.has-thumb .serviceTop-information-list-title{padding:8px 8px 8px 0}@media (max-width:767px){.has-thumb .serviceTop-information-list-title{padding-left:10px;padding-right:10px}}.serviceTop-information-list-thumb{width:90px;height:100%;margin-left:8px;background-size:cover;display:table-cell}.serviceTop-AppSuggest{display:none;padding:1.5em 10px;background-color:#4eacd1;text-align:center;color:#fff}@media (max-width:767px){.serviceTop-AppSuggest{display:block}}.serviceTop-AppSuggest h3{margin:0 0 1em}.serviceTop-AppSuggest p{font-size:80%;margin:0 0 .5em}.serviceTop-socialAccount-primary{display:none;margin:4em auto}@media (max-width:767px){.serviceTop-socialAccount-primary{display:block;margin:2em auto}}.serviceTop-socialAccount-primary .serviceTop-container-header{border-bottom:1px solid #c2cdd1;margin:1em auto}.serviceTop-socialAccount-primary .serviceTop-container-header h2{padding-bottom:.5em;margin:0;font-size:120%}@media (max-width:767px){.serviceTop-socialAccount-primary .serviceTop-container-header h2{font-size:100%}}.serviceTop-socialAccount-primary .serviceTop-container-header h2 [class*=blogicon-]{color:#4eacd1;font-size:80%}.serviceTop-socialAccount-primary .serviceTop-container-header p{font-size:90%;color:#9aa5ab;padding-bottom:.5em;margin:0}@media (max-width:767px){.serviceTop-socialAccount-primary .serviceTop-container-header p{font-size:80%}}.serviceTop-socialAccount-primary .serviceTop-container-heading-label{background-color:#3d3f44;color:#fff;display:inline-block;padding:.2em .4em;font-weight:400}@media (max-width:767px){.serviceTop-socialAccount-primary .serviceTop-container-heading-label{font-size:90%}}@media (max-width:767px){.serviceTop-socialAccount-primary p{font-size:80%}}.serviceTop-socialAccount-primary .serviceTop-socialAccount-primary-wrapper{padding:10px 10px 15px;border:1px solid #dfe5e7;background-color:#f7f8f9;border-radius:.2em}.serviceTop-socialAccount-primary h4{font-size:17px;text-align:center;line-height:1.4;margin-bottom:5px}.serviceTop-socialAccount-primary p{margin-bottom:5px}.serviceTop-socialAccount-primary .fb-like,.serviceTop-socialAccount-primary .twitter-follow-button{vertical-align:bottom}.serviceTop-socialAccount-secondary{margin:4em auto;margin-bottom:2em;text-align:center}@media (max-width:767px){.serviceTop-socialAccount-secondary{display:none;margin:2em auto}}.serviceTop-socialAccount-secondary .serviceTop-container-header{border-bottom:1px solid #c2cdd1;margin:1em auto}.serviceTop-socialAccount-secondary .serviceTop-container-header h2{padding-bottom:.5em;margin:0;font-size:120%}@media (max-width:767px){.serviceTop-socialAccount-secondary .serviceTop-container-header h2{font-size:100%}}.serviceTop-socialAccount-secondary .serviceTop-container-header h2 [class*=blogicon-]{color:#4eacd1;font-size:80%}.serviceTop-socialAccount-secondary .serviceTop-container-header p{font-size:90%;color:#9aa5ab;padding-bottom:.5em;margin:0}@media (max-width:767px){.serviceTop-socialAccount-secondary .serviceTop-container-header p{font-size:80%}}.serviceTop-socialAccount-secondary .serviceTop-container-heading-label{background-color:#3d3f44;color:#fff;display:inline-block;padding:.2em .4em;font-weight:400}@media (max-width:767px){.serviceTop-socialAccount-secondary .serviceTop-container-heading-label{font-size:90%}}@media (max-width:767px){.serviceTop-socialAccount-secondary p{font-size:80%}}.serviceTop-socialAccount-secondary .serviceTop-socialAccount-p{font-weight:700;margin:0 0 1em}@media (max-width:767px){.serviceTop-socialAccount-secondary .serviceTop-socialAccount-p{font-size:80%}}.serviceTop-socialAccount-secondary .serviceTop-socialAccount-p br{display:none}@media (max-width:767px){.serviceTop-socialAccount-secondary .serviceTop-socialAccount-p br{display:inline}}.serviceTop-socialBtn{width:54px;height:54px;border-radius:50%;margin:0 10px 8px;padding:0;font-size:24px;display:inline-block;vertical-align:middle;line-height:54px}@media (max-width:767px){.serviceTop-footer{display:none}}.serviceTop-footer .footer-inner{width:100%}.serviceTop-footer .box-wrapper{width:960px;margin-left:auto;margin-right:auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:1024px){.serviceTop-footer .box-wrapper{width:700px}}@media (max-width:767px){.serviceTop-footer .box-wrapper{width:auto;padding-left:10px;padding-right:10px;overflow:hidden}}.serviceTop-footer .footer-box{width:23%;line-height:1.4}@media (max-width:767px){.serviceTop-footer .footer-box{width:100px}}.serviceTop-footer .footer-address{width:960px;margin-left:auto;margin-right:auto}@media (max-width:1024px){.serviceTop-footer .footer-address{width:700px}}@media (max-width:767px){.serviceTop-footer .footer-address{width:auto;padding-left:10px;padding-right:10px;overflow:hidden}}.serviceTop-touchFooter{display:none;text-align:center;font-size:90%;color:#9aa5ab;margin-top:20px}@media (max-width:767px){.serviceTop-touchFooter{display:block}}.serviceTop-touchFooter .serviceTop-touchFooter-nav{list-style-type:none;margin:0 0 14px;padding:0;text-align:center}.serviceTop-touchFooter .serviceTop-touchFooter-nav li{display:inline-block;padding:0 5px}.serviceTop-touchFooter .serviceTop-touchFooter-nav a{color:#9aa5ab}.serviceTop-touchFooter .serviceTop-touchFooter-bottom{color:#9aa5ab;background-color:#3d3f44;padding:12px 0}.serviceTop-touchFooter .serviceTop-touchFooter-copyright{font-size:85%}#popular-themes input[type=email],#popular-themes input[type=number],#popular-themes input[type=password],#popular-themes input[type=search],#popular-themes input[type=tel],#popular-themes input[type=text],#popular-themes input[type=url],#popular-themes textarea,.page-store input[type=email],.page-store input[type=number],.page-store input[type=password],.page-store input[type=search],.page-store input[type=tel],.page-store input[type=text],.page-store input[type=url],.page-store textarea{width:100%}#popular-themes .thumbnails,.page-store .thumbnails{margin-left:-20px;list-style:none;display:block;*zoom:1}#popular-themes .thumbnails:after,.page-store .thumbnails:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}#popular-themes .thumbnails>li,.page-store .thumbnails>li{float:left;margin-bottom:20px;margin-left:20px;-webkit-border-top-right-radius:5px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:5px;background-clip:padding-box;background:#fff;-ms-box-sizing:border-box;box-sizing:border-box;box-shadow:0 1px 4px rgba(0,0,0,.4);-moz-box-shadow:0 1px 4px rgba(0,0,0,.4);-webkit-box-shadow:0 1px 4px rgba(0,0,0,.4)}#popular-themes .thumbnails>li.adx,.page-store .thumbnails>li.adx{-webkit-border-top-right-radius:0;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:0;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:0;background-clip:padding-box;-ms-box-sizing:border-box;box-sizing:border-box;box-shadow:0 0 0 #fff;-moz-box-shadow:0 0 0 #fff;-webkit-box-shadow:0 0 0 #fff;height:258px}#popular-themes .thumbnails .theme-thumb,.page-store .thumbnails .theme-thumb{overflow:hidden;background:#f7f8f9;-ms-box-sizing:border-box;box-sizing:border-box;-webkit-border-top-right-radius:5px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:5px;-moz-border-radius-topright:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:5px;border-top-right-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:5px;background-clip:padding-box;border-bottom:1px solid #dfe5e7;background-size:cover;background-position:50%}#popular-themes .thumbnails .theme-thumb img,.page-store .thumbnails .theme-thumb img{width:100%;-ms-box-sizing:border-box;box-sizing:border-box}#popular-themes .thumbnails .theme-meta,.page-store .thumbnails .theme-meta{margin:0 10px;padding:10px 0;height:15px;font-size:13px;color:#9aa5ab;line-height:1.5;white-space:nowrap;-webkit-text-overflow:ellipsis;text-overflow:ellipsis;overflow:hidden}#popular-themes .thumbnails .theme-meta a,.page-store .thumbnails .theme-meta a{color:#9aa5ab}#popular-themes .thumbnails .theme-meta .badge,.page-store .thumbnails .theme-meta .badge{font-size:70%;padding:1px 3px;vertical-align:baseline}#popular-themes .thumbnails .theme-meta .theme-name,.page-store .thumbnails .theme-meta .theme-name{margin-right:5px}#popular-themes .thumbnails .theme-meta .theme-name a,.page-store .thumbnails .theme-meta .theme-name a{color:#3d3f44;font-weight:700}#popular-themes .thumbnails .theme-meta .author,.page-store .thumbnails .theme-meta .author{font-size:12px;margin-bottom:3px}#popular-themes .thumbnails .span2 .theme-thumb,.page-store .thumbnails .span2 .theme-thumb{width:140px;height:104px}#popular-themes .thumbnails .theme-card .theme-thumb,.page-store .thumbnails .theme-card .theme-thumb{width:300px;height:223px}#popular-themes .thumbnails .theme-card-big .theme-thumb,.page-store .thumbnails .theme-card-big .theme-thumb{width:620px;height:460px;margin-right:20px}#popular-themes .thumbnails .theme-card-big .theme-meta,.page-store .thumbnails .theme-card-big .theme-meta{height:56px;line-height:1.4}#popular-themes .thumbnails .theme-card-big .theme-meta .theme-name,.page-store .thumbnails .theme-card-big .theme-meta .theme-name{font-size:20px}#popular-themes .thumbnails .theme-card-big .theme-meta .install-count,.page-store .thumbnails .theme-card-big .theme-meta .install-count{margin-top:5px;display:block}.global-page #popular-themes .theme-card{width:193px}.global-page #popular-themes .theme-card .theme-thumb{width:193px;height:143px}.page-store #service-header h1{background-size:50px 50px;background-position:0 0;padding-left:50px;height:50px;line-height:50px;background-repeat:no-repeat;background-image:url(../images/service/service-header-icon-theme.png)}@media (-webkit-min-device-pixel-ratio:2),(min-resolution:2dppx){.page-store #service-header h1{background-image:url(../images/service/service-header-icon-theme@2x.png)}}.page-store .main{width:960px;margin-right:-20px;display:block;*zoom:1}.page-store .main:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-store .main img{max-width:100%}.page-store aside.section{font-size:13px;padding:10px;border:1px solid #dfe5e7;background:#f7f8f9;-webkit-border-top-right-radius:5px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:5px;background-clip:padding-box}.page-store aside.section a{color:#4eacd1!important}.page-store aside.section .list{margin-bottom:0;line-height:1.5}.page-store aside.section .list ul{margin:10px 0;padding-left:2em}.page-store aside.section .list ul li{list-style:circle;line-height:1.5;border:none;padding:0}.page-store .thumbnails li{position:relative}.page-store .ribbon{display:inline;color:#fff;font-weight:700;font-size:15px;position:absolute;overflow:hidden;width:110px;height:110px;top:-5px;right:-5px}.page-store .ribbon .ribbon-content{position:absolute;display:inline-block;right:-25px;box-shadow:0 0 10px rgba(0,0,0,.2),inset 0 5px 30px hsla(0,0%,100%,.2);text-align:center;text-transform:uppercase;text-shadow:0 -1px 0 rgba(0,0,0,.4);-moz-text-shadow:0 -1px 0 rgba(0,0,0,.4);-webkit-text-shadow:0 -1px 0 rgba(0,0,0,.4);top:22px;background:#bbb;width:100px;padding:0 10px;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);-ms-transform:rotate(45deg)}.page-store .ribbon:before{top:-17px;right:66px;border:17px solid;border-color:transparent transparent #888}.page-store .ribbon:after,.page-store .ribbon:before{content:\"\";width:0;height:0;position:absolute;z-index:-1}.page-store .ribbon:after{top:74px;right:-10px;border:17px solid;border-color:#888 transparent transparent}.page-store .ribbon.ranking-1 .ribbon-content{background:#ffb419}.page-store .ribbon.ranking-1:before{border-color:transparent transparent #684624}.page-store .ribbon.ranking-1:after{border-color:#684624 transparent transparent}.page-store .ribbon.ranking-2 .ribbon-content{background:#8a8a8a}.page-store .ribbon.ranking-2:before{border-color:transparent transparent #454545}.page-store .ribbon.ranking-2:after{border-color:#454545 transparent transparent}.page-store .ribbon.ranking-3 .ribbon-content{background:#a47f59}.page-store .ribbon.ranking-3:before{border-color:transparent transparent #5f4c39}.page-store .ribbon.ranking-3:after{border-color:#5f4c39 transparent transparent}.page-store .pager{font-size:12px;text-align:center}.page-store .pager a,.page-store .pager span{padding:6px 8px;margin:1px;color:#999;-webkit-border-top-right-radius:3px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:3px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:3px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:3px;background-clip:padding-box;border:1px solid #f7f8f9}.page-store .pager a:hover{border:1px solid #dfe5e7;color:#666;text-decoration:none}.page-store .pager .current{background-color:#4eacd1;color:#fff;border:1px solid #4eacd1}.page-store .pager .current,.page-store .pager .page{display:inline-block;min-width:1.2em}.page-store .badge{font-style:normal;vertical-align:middle}.page-store .badge.new{background-color:#ccc}.page-store .badge.recommend{background-color:#4eacd1}.page-store .badge.popular{background-color:#ff6485}.page-store .badge.official{background-color:#f0ad4e}.page-store .page-store-permalink .theme-name{font-size:24px;padding-bottom:30px;white-space:nowrap;-webkit-text-overflow:ellipsis;text-overflow:ellipsis;overflow:hidden}.page-store .page-store-permalink .theme-name a{color:#3d3f44}.page-store .page-store-permalink .theme-screenshot{width:100%}.page-store .page-store-permalink .theme-screenshot .theme-image{width:100%;height:460px;box-shadow:0 1px 4px rgba(0,0,0,.4);-moz-box-shadow:0 1px 4px rgba(0,0,0,.4);-webkit-box-shadow:0 1px 4px rgba(0,0,0,.4);-ms-box-sizing:border-box;box-sizing:border-box;-webkit-border-top-right-radius:5px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:5px;background-clip:padding-box}.page-store .page-store-permalink .nav-tabs{font-size:14px}.page-store .entry-content{font-size:90%;line-height:1.7}.page-store .entry-content h2{font-size:150%!important;border-bottom:1px solid #dfe5e7!important;padding:0!important}.page-store #sidebar h1{font-size:150%;margin-bottom:1em}.page-store #sidebar p{line-height:1.5;margin-bottom:10px}.page-store #sidebar li .number{color:#4eacd1;font-size:20px;margin-right:5px}.page-store #sidebar li .number.theme-install-0{color:#3d3f44;font-size:13px;margin-right:5px;font-weight:400}.page-store #sidebar .theme-user-favicon{vertical-align:bottom}.page-store #sidebar .theme-user-name{font-size:20px}.page-store #sidebar .blog-title-dropdown-window{border:1px solid #dfe5e7;box-shadow:0 1px 10px rgba(0,0,0,.2);-moz-box-shadow:0 1px 10px rgba(0,0,0,.2);-webkit-box-shadow:0 1px 10px rgba(0,0,0,.2);display:none}.page-store #sidebar .blog-title-dropdown-window h1{padding:8px;color:#3d3f44;background:#fff;display:block;font-size:13px;margin:0;border-bottom:1px solid #dfe5e7}.page-store #sidebar .blog-title-dropdown-window ul{margin:0}.page-store #sidebar .blog-title-dropdown-window li{padding:0;list-style:none}.page-store #sidebar .blog-title-dropdown-window li a{padding:8px;color:#3d3f44;background:#fff;display:block}.page-store #sidebar .blog-title-dropdown-window li a:hover{background:#f7f8f9;text-decoration:none}.page-store #sidebar .blog-title-dropdown-window .dropdown-guest{margin:10px}.page-store #sidebar .login-hatena-btn,.page-store #sidebar .register-blog-btn{display:inline-block;*display:inline;*zoom:1;padding:4px 10px;margin-bottom:0;line-height:18px;color:#4f5051!important;background-color:#f7f8f9;text-align:center;vertical-align:middle;border:1px solid #dfe5e7;-webkit-border-top-right-radius:2px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:2px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:2px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:2px;background-clip:padding-box;cursor:pointer;font-size:12px;text-decoration:none;font-weight:700;-webkit-appearance:none;color:#fff!important;background:#4eacd1;border:1px solid transparent}.page-store #sidebar .login-hatena-btn:hover,.page-store #sidebar .register-blog-btn:hover{border-color:#c8d2d6;background-color:#eef0f2;text-decoration:none!important}.page-store #sidebar .login-hatena-btn [class*=blogicon-],.page-store #sidebar .register-blog-btn [class*=blogicon-]{position:relative;top:1px}.page-store #sidebar .login-hatena-btn:hover,.page-store #sidebar .register-blog-btn:hover{border:1px solid transparent;background:#339bc3}.page-store #sidebar .btn-large{width:100%;-ms-box-sizing:border-box;box-sizing:border-box}.page-store .section-user-list li{font-size:13px;padding-left:45px;position:relative;line-height:1.5}.page-store .section-user-list .install-user-icon{width:35px;height:35px;position:absolute;top:8px;left:0}.page-store .section-user-list li:first-child .install-user-icon{top:0}.page-store .section-user-list .username a{font-weight:700;color:#3d3f44}.page-store .show-all{text-align:center}.page-store .theme-manage-list li{display:block;*zoom:1;padding:15px 0}.page-store .theme-manage-list li:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-store .theme-manage-list h3{margin:.5em 0}.page-store .theme-manage-list .theme-thumb{overflow:hidden;width:300px;height:230px;box-shadow:0 1px 4px rgba(0,0,0,.4);-moz-box-shadow:0 1px 4px rgba(0,0,0,.4);-webkit-box-shadow:0 1px 4px rgba(0,0,0,.4);-ms-box-sizing:border-box;box-sizing:border-box;-webkit-border-top-right-radius:5px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:5px;background-clip:padding-box;background-size:cover;background-position:50%}.page-store .theme-manage-list .theme-thumb img{width:100%}.page-store .theme-manage-list .theme-meta{font-size:12px}.page-store .theme-manage-list .theme-meta li{padding:8px 0}.page-store .table-theme-installed .theme-thumb{width:150px;height:115px;overflow:hidden;background:#f7f8f9;-ms-box-sizing:border-box;box-sizing:border-box;-webkit-border-top-right-radius:3px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:3px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:3px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:3px;background-clip:padding-box;background-size:cover;background-position:50%;box-shadow:0 1px 4px rgba(0,0,0,.4);-moz-box-shadow:0 1px 4px rgba(0,0,0,.4);-webkit-box-shadow:0 1px 4px rgba(0,0,0,.4)}.page-store .table-theme-installed td{vertical-align:top;font-size:13px}.page-store .table-theme-installed .td-theme-thumb{width:150px}.page-store .table-theme-installed .td-theme-meta h3{font-size:15px;margin-bottom:10px}.page-store .table-theme-installed .td-theme-meta h3 a{color:#3d3f44}.page-store .table-theme-installed .td-theme-meta .badge{vertical-align:baseline;margin-right:.5em}.page-store textarea#theme-description{height:100px}.page-store input#theme-name{font-size:200%}.page-store .theme-post-notice{margin-bottom:10px}.page-store aside .screenshot{margin-top:10px}.page-store aside .screenshot img{max-width:100%}.page-store ul.radioform{list-style:none}.page-store ul.radioform li{margin:10px 0;position:relative}.page-store label.radio,.page-store span.radio{font-weight:700;font-size:14px;margin-right:10px;margin-left:2px}.page-store .show-deed{font-size:13px;position:absolute;right:0;top:2px}.page-store .deed{padding:20px;border:1px solid #dfe5e7;background-color:#f7f8f9;font-size:13px;margin-top:10px}.page-store .deed dt{font-weight:700}.page-store .deed ul{padding-left:2em}.page-store .deed p,.page-store .show-more{margin-bottom:10px}.page-store .show-more a{display:inline-block;*display:inline;*zoom:1;padding:4px 10px;margin-bottom:0;line-height:18px;color:#4f5051!important;background-color:#f7f8f9;text-align:center;vertical-align:middle;border:1px solid #dfe5e7;-webkit-border-top-right-radius:2px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:2px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:2px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:2px;background-clip:padding-box;cursor:pointer;font-size:12px;text-decoration:none;font-weight:700;-webkit-appearance:none}.page-store .show-more a:hover{border-color:#c8d2d6;background-color:#eef0f2;text-decoration:none!important}.page-store .show-more a [class*=blogicon-]{position:relative;top:1px}.page-store #theme-permission .permission{margin-bottom:10px}.page-store #theme-permission .badge{vertical-align:text-top}.page-store #theme-permission .notice{margin-top:10px}.page-store .theme-post-unpublished{margin-left:1em;cursor:pointer}.page-store .theme-post-unpublished-notice{margin-top:1em}.page-store-404 #container{margin-top:30px;margin-bottom:30px}.page-store-404 .center{text-align:center}.page-store-404 .center h1{font-size:40px;font-weight:400;margin-bottom:10px}.page-store-404 .center h2{font-weight:400;font-size:100%;margin-bottom:20px}.page-store-404 .theme-screenshot{width:300px;height:240px;box-shadow:0 1px 4px rgba(0,0,0,.4);-moz-box-shadow:0 1px 4px rgba(0,0,0,.4);-webkit-box-shadow:0 1px 4px rgba(0,0,0,.4);-ms-box-sizing:border-box;box-sizing:border-box;-webkit-border-top-right-radius:5px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:5px;background-clip:padding-box;margin-left:auto;margin-right:auto;margin-bottom:15px;text-align:center}.page-store-404 .theme-screenshot .theme-thumb{font-size:50px;line-height:200px;font-family:monospace;background:#f7f8f9;color:#dce1e3;border-bottom:1px solid #dfe5e7;text-shadow:0 2px 0 #fff;-moz-text-shadow:0 2px 0 #fff;-webkit-text-shadow:0 2px 0 #fff}.page-store-404 .theme-screenshot .theme-meta{margin:0 10px;padding:10px 0;height:15px;font-size:13px;color:#999;line-height:1.5;white-space:nowrap;-webkit-text-overflow:ellipsis;text-overflow:ellipsis;overflow:hidden;background:#fff;color:#3d3f44;text-align:left}.page-store-404 .theme-screenshot .theme-meta .theme-name{font-weight:700}.topic-box.staff-only{background-color:#eee}.topic-box .thumbnails{margin-left:-20px;list-style:none;display:block;*zoom:1}.topic-box .thumbnails:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.topic-box .thumbnails>li{float:left;height:150px;margin-bottom:5px;margin-left:20px}.topic-box .thumbnails>li:first-child{padding-top:15px!important}.topic-box .thumbnails>li:last-child{border-bottom:1px solid #dfe5e7!important}.topic-box .topic-header{display:block;*zoom:1;margin-bottom:15px}.topic-box .topic-header:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.topic-box h1 a{color:#3d3f44}.topic-box .topic-month{background:#3d3f44;color:#fff;-webkit-border-top-right-radius:5px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:5px;background-clip:padding-box;width:60px;float:left;margin-right:10px}.topic-box .topic-month span{display:block;text-align:center}.topic-box .topic-month .month{font-size:20px;padding-top:5px}.topic-box .topic-month .year{font-size:12px;padding:3px 0 5px}.topic-box h1{float:left;font-weight:400;line-height:45px}.ui-tabs .ui-tabs-hide{display:none}.section.post-entry .btn-primary{width:100%;-ms-box-sizing:border-box;box-sizing:border-box;padding:10px 0;font-size:14px}.page-global-top-foreign{font-family:Open Sans;background:url(../images/foreign/bg.jpg%3Fversion=9935268947bd4c9a5db18a1631909ef2047f31dd);font-weight:400}.page-global-top-foreign header{color:#fff}.page-global-top-foreign header .header-nav li a{color:#fff!important}.page-global-top-foreign header .header-nav li a:hover{background-color:hsla(0,0%,100%,.4)!important}.page-global-top-foreign .big-container{box-shadow:inset 0 0 25px rgba(0,0,0,.2);-moz-box-shadow:inset 0 0 25px rgba(0,0,0,.2);-webkit-box-shadow:inset 0 0 25px rgba(0,0,0,.2);background:#eee}.page-global-top-foreign .big-container .big-container-inner{width:940px;height:310px;margin:0 auto;padding:70px 0}.page-global-top-foreign #main{margin:100px 0}.page-global-top-foreign .heading-text h1{font-weight:300;font-size:3.5em;text-shadow:0 0 5px rgba(0,0,0,.8);-moz-text-shadow:0 0 5px rgba(0,0,0,.8);-webkit-text-shadow:0 0 5px rgba(0,0,0,.8);color:#fff;line-height:1.2}.page-global-top-foreign .heading-text h2{color:#fff;font-weight:300;border:none!important;text-shadow:0 0 5px rgba(0,0,0,.5);-moz-text-shadow:0 0 5px rgba(0,0,0,.5);-webkit-text-shadow:0 0 5px rgba(0,0,0,.5)}.page-global-top-foreign .heading-text .heading{padding-bottom:10px}.page-global-top-foreign .btn-large{font-size:28px;font-weight:300}.page-global-top-foreign .blogs-list{list-style:none;margin-left:560px}.page-global-top-foreign .blogs-list h3{font-weight:300}.page-global-top-foreign .blogs-list li{margin:0 0 1em;font-weight:300;font-size:1.6em;line-height:1.2}.circle-page input[type=email],.circle-page input[type=number],.circle-page input[type=password],.circle-page input[type=search],.circle-page input[type=tel],.circle-page input[type=text],.circle-page input[type=url],.circle-page textarea,.page-circle-global input[type=email],.page-circle-global input[type=number],.page-circle-global input[type=password],.page-circle-global input[type=search],.page-circle-global input[type=tel],.page-circle-global input[type=text],.page-circle-global input[type=url],.page-circle-global textarea{width:100%}.super-category-icon{width:40px;height:40px;background-image:url(../images/circle/super-category-icon.png%3Fversion=7c405e895f5eac497648ddb9120b6662eb56e30a);display:inline-block;*display:inline;*zoom:1;background-repeat:repeat-y}.super-category-icon.category-entertainment{background-position:0 0}.super-category-icon.category-showbiz{background-position:0 -40px}.super-category-icon.category-sports{background-position:0 -80px}.super-category-icon.category-games{background-position:0 -120px}.super-category-icon.category-animation-and-comics{background-position:0 -160px}.super-category-icon.category-hobbies{background-position:0 -200px}.super-category-icon.category-computers{background-position:0 -240px}.super-category-icon.category-gourmet{background-position:0 -280px}.super-category-icon.category-style{background-position:0 -320px}.super-category-icon.category-life{background-position:0 -360px}.super-category-icon.category-learning-and-culture{background-position:0 -400px}.super-category-icon.category-regional{background-position:0 -440px}.super-category-icon.category-etc{background-position:0 -480px}.super-category-icon-mini{width:20px;height:20px;background-image:url(../images/circle/super-category-icon-mini.png%3Fversion=3480beaf58c048543bbcaee92610356332ea05d7);display:inline-block;*display:inline;*zoom:1;vertical-align:text-bottom}.super-category-icon-mini.category-entertainment{background-position:0 0}.super-category-icon-mini.category-showbiz{background-position:0 -20px}.super-category-icon-mini.category-sports{background-position:0 -40px}.super-category-icon-mini.category-games{background-position:0 -60px}.super-category-icon-mini.category-animation-and-comics{background-position:0 -80px}.super-category-icon-mini.category-hobbies{background-position:0 -100px}.super-category-icon-mini.category-computers{background-position:0 -120px}.super-category-icon-mini.category-gourmet{background-position:0 -140px}.super-category-icon-mini.category-style{background-position:0 -160px}.super-category-icon-mini.category-life{background-position:0 -180px}.super-category-icon-mini.category-learning-and-culture{background-position:0 -200px}.super-category-icon-mini.category-regional{background-position:0 -220px}.super-category-icon-mini.category-etc{background-position:0 -240px}.super-category-icon-mini.category-hot{background-position:0 -260px}.super-category-icon-mini.category-recent{background-position:0 -280px}@media (-webkit-min-device-pixel-ratio:2){.super-category-icon{background-image:url(../images/circle/super-category-icon@2x.png%3Fversion=39bbec9d4f2fe869897c9128df17626a80922653);background-size:40px auto}.super-category-icon-mini{background-image:url(../images/circle/super-category-icon-mini@2x.png%3Fversion=5c8e7d00243d938edd7886a1544cd603839b4c0d);background-size:20px auto}}.page-circle-global #service-header h1{background-size:50px 50px;background-position:0 0;padding-left:50px;line-height:50px;height:50px;background-repeat:no-repeat;background-image:url(../images/circle/service-header-icon-circle.png%3Fversion=874aa29dcb8f36fba70632cdfc2c12140211c2c8)}@media (-webkit-min-device-pixel-ratio:2){.page-circle-global #service-header h1{background-image:url(../images/circle/service-header-icon-circle@2x.png%3Fversion=3a715909740182a355bd7130507ba9a3538431c7)}}.super-category-icons{word-wrap:break-word}.super-category-icons [class*=span]{text-align:center;font-size:12px;font-weight:700;margin-bottom:20px;-webkit-border-top-right-radius:4px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:4px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:4px;background-clip:padding-box;background:#fff;background:-webkit-gradient(linear,left top,left bottom,from(#fff),to(#f6f6f6));background:-moz-linear-gradient(top,#fff 0,#f6f6f6 100%);border:1px solid #dfe5e7;-ms-box-sizing:border-box;box-sizing:border-box}.super-category-icons [class*=span]:hover{background:#fff;background:-webkit-gradient(linear,left top,left bottom,from(#fff),to(#ebebeb));background:-moz-linear-gradient(top,#fff 0,#ebebeb 100%)}.super-category-icons [class*=span] a{display:block;padding:3px 0 10px}.super-category-icons [class*=span] a:hover{text-decoration:none;color:#4eacd1}.super-category-icons a{color:#3d3f44}.super-category-icons .super-category-icon{margin:0 auto}.category-list{word-wrap:break-word;font-size:0}.category-list h3{font-size:14px;padding-bottom:5px;border-bottom:1px solid #dfe5e7}.category-list a{color:#3d3f44}.category-list .span2{vertical-align:top;font-size:100%;display:inline-block;*display:inline;*zoom:1;float:none}.category-list ul{font-size:12px;line-height:1.7;list-style:none}.circle-list{line-height:1.3}.circle-list a{color:#3d3f44}.circle-list li{position:relative}.circle-list .list-content{margin-left:70px;min-height:60px}.circle-list .circle-icon{width:60px;height:60px;position:absolute;top:8px;left:0;-webkit-border-top-right-radius:3px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:3px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:3px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:3px;background-clip:padding-box}.circle-list li:first-child .circle-icon{top:0}.circle-list .circle-name{font-size:13px;font-weight:700;margin-bottom:5px}.circle-list .circle-description{display:block;font-size:13px;margin:5px 0 0}.circle-list .circle-meta{font-size:12px;color:#9aa5ab}.circle-list li{display:block;*zoom:1}.circle-list li:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}#main .circle-list .circle-name{font-size:16px}.breadcrumb a{color:#3d3f44;font-weight:700}.category-child-list{margin-bottom:20px}.category-child-list li{list-style:none;display:inline;font-size:13px;line-height:1.7;padding-right:.7em;margin-right:.3em;border-right:1px solid #dfe5e7}.page-circle-global .search-form{position:relative}.page-circle-global .search-button{width:20px;height:20px;background:transparent url(../images/theme/search.png%3Fversion=5ce19ab982799e9f1225e7acae034e9d43b6e6b6) no-repeat 100%;border:none;outline:none;text-indent:-9999px;position:absolute;top:7px;right:5px;-moz-opacity:.5;opacity:.5;-khtml-opacity:.5;-webkit-opacity:.5;filter:alpha(opacity=50)}.page-circle-global .search-button:hover{-moz-opacity:.85;opacity:.85;-khtml-opacity:.85;-webkit-opacity:.85;filter:alpha(opacity=85)}.page-circle-global #main .search-button{top:12px;right:7px}#sidebar .btn-large{-ms-box-sizing:border-box;box-sizing:border-box;margin-bottom:10px}#sidebar .btn-large:last-child{margin-bottom:0}.btn-rounded{display:inline-block;background-color:#b3c4c3;padding:.6em 2em;font-size:13px;color:#fff!important;line-height:1.5;font-weight:700;border:none;-webkit-border-top-right-radius:30px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:30px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:30px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:30px;background-clip:padding-box}.btn-rounded:hover{text-decoration:none!important;background-color:#9cb2b1;border:none}.btn-rounded.btn-large{padding:1em 2.5em;font-size:15px}.btn-rounded.btn-primary{background-color:#4eacd1}.btn-rounded.btn-primary:hover{background-color:#3aa3cc}.btn-rounded.btn-register{background-color:#5aba90}.btn-rounded.btn-register:hover{background-color:#4ab184}.guide-case-nav{width:940px;margin:auto;padding-top:2em;text-align:right}.guide-case-nav ul{margin:0;padding:0}.guide-case-nav li{display:inline-block;font-size:90%}.guide-case-nav li a{color:#fff;border-bottom:4px solid hsla(0,0%,100%,.7);margin-left:1.5em}.guide-case-nav li a:hover{text-decoration:none;color:#ebebeb}.guide-case-bg-gray{background-color:#f7f8f9}.guide-case-container{width:940px;margin-left:auto;margin-right:auto;padding:3em 0;font-family:proxima-nova,Helvetica Neue,Helvetica,Arial,ヒラギノ角ゴ Pro W3,Hiragino Kaku Gothic Pro,メイリオ,Meiryo,ＭＳ\\ Ｐゴシック,MS PGothic,sans-serif;color:#717c7b;font-size:90%}.guide-case-container p{margin-bottom:1em}.guide-case-container .badge{background:#4f5656;-webkit-border-top-right-radius:20px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:20px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:20px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:20px;background-clip:padding-box;font-size:11px;padding:0 .5em;vertical-align:top}.guide-case-container h1,.guide-case-container h2,.guide-case-container h3,.guide-case-container h4,.guide-case-container h5{color:#4f5656}.guide-case-container .container-header-subtitle{display:block;color:#b3c4c3;letter-spacing:.5em;text-align:center;line-height:1.5;margin:0 0 1em;font-size:80%}.guide-case-container h1{text-align:center;letter-spacing:.05em;margin:0 0 1.5em}.guide-case-container h3{margin-bottom:1em;font-size:110%}.guide-case-container h4{margin-bottom:1em;font-size:100%}.guide-case-container .span4 p{font-size:90%}.guide-case-container .span3 p{font-size:85%}.guide-case-container .aside{width:75%;margin:2.5em auto;padding:1.5em 0;padding-left:100px;border-top:1px solid #dfe5e7;border-bottom:1px solid #dfe5e7;position:relative}.guide-case-container .aside>*{text-align:left}.guide-case-container .aside img{position:absolute;top:3em;left:0}.guide-case-container .aside h1{text-align:left;letter-spacing:0;font-size:120%;margin-bottom:.5em}.guide-case-header{background-color:#000;background-size:cover;height:550px;color:#fff;position:relative;text-align:center}.guide-case-header .guide-case-container{padding:0}.guide-case-header .guide-case-header-inner{height:340px;padding:0;width:100%;position:absolute;top:50%;left:0;margin-top:-170px}.guide-case-header p{font-size:105%;color:#fff}.guide-case-feature-section .guide-case-container{position:relative;display:block;*zoom:1}.guide-case-feature-section .guide-case-container:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.guide-case-feature-section .guide-feature-img{position:absolute;top:0;right:500px}.guide-case-feature-section .guide-feature-content{width:470px;float:right;margin-top:3em}.guide-case-feature-section h1{letter-spacing:0;line-height:1.4;margin:0 0 .5em;text-align:left}.guide-case-subfeature .guide-case-container{padding-bottom:0}.guide-case-subfeature h3{text-align:center}.guide-case-subfeature .feature-image{margin-bottom:1em;text-align:center}.guide-case-subfeature .btn-wrapper{margin:1em 0;text-align:center}.guide-case-subfeature .feature-2 .feature-image{text-align:left;margin-bottom:.5em}#guide-creator-header{background:#000 url(../images/guide/case/creator/guide-creator-header.jpg%3Fversion=5dd5c7f4bf21ae7ed167be5138a686519da138a0) no-repeat 50%;text-align:left}#guide-creator-header h1{margin:0;color:#fff;text-align:left}#guide-creator-header h1 .line1{font-family:Nothing You Could Do,cursive;display:block;font-size:24px;line-height:1.2em;letter-spacing:0}#guide-creator-header h1 .line2{font-size:112px;display:block;line-height:1.1em;letter-spacing:0}.guide-creator-app .guide-case-container{position:relative;min-height:600px;padding:0;display:block;*zoom:1}.guide-creator-app .guide-case-container:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.guide-creator-app .container-header-subtitle,.guide-creator-app h1{text-align:left}.guide-creator-app .guide-creator-app-img{position:absolute;top:0;right:500px;background-image:url(../images/guide/case/creator/ios-app.jpg%3Fversion=084d157b401b1d6cedbfc528810f17c046d3cc6c);width:632px;height:600px}.guide-creator-app .guide-creator-app-content{width:470px;float:right;margin-top:120px}@media (-webkit-min-device-pixel-ratio:2) and (min-device-width:768px),(min-resolution:2dppx) and (min-device-width:768px){.guide-creator-app .guide-creator-app-img{background-image:url(../images/guide/case/creator/ios-app@2x.jpg%3Fversion=1c202eff62880e1f45cbe9f4cb6dc24e5a0eacd6);background-size:632px 600px}}.guide-creator-creator{background-color:#f7f8f9}.guide-creator-creator blockquote{font-family:serif;font-style:italic;font-size:120%;line-height:1.7;margin-bottom:1em}.guide-creator-creator strong{font-size:120%;color:#4f5656;display:block;margin-bottom:.5em}.guide-creator-creator small a{color:#9aa5ab}.guide-creator-getstarted{text-align:center;padding:3em 0}.guide-creator-getstarted h1{font-size:340%;margin-bottom:10px}.badge.badge-media-header{background-color:#b1ff58;color:#717c7b;display:inline-block;width:70px;height:70px;line-height:70px;border-radius:70px;text-align:center;font-size:17px;font-weight:700;padding:0;position:absolute;top:-20px;left:240px}#guide-media-header{background:#000 url(../images/guide/case/media/guide-media-header.jpg%3Fversion=77cbeabb5810c7c2b6d30a58035c36f1bd56354b) no-repeat 50%}#guide-media-header .guide-case-container{position:relative}#guide-media-header h1{margin:0 0 .5em;color:#fff}#guide-media-header h1 .line1{display:block;font-size:16px;line-height:1.2em;letter-spacing:1em;text-transform:uppercase}#guide-media-header h1 .line2{font-size:112px;display:block;line-height:1.2em;letter-spacing:.05em;font-family:Nothing You Could Do,cursive}#guide-media-header p{font-size:90%}#guide-media-header .guide-case-header-description-line1{font-size:200%;display:block;line-height:1.4;margin-bottom:.5em}.page-guide-media .guide-case-subfeature .guide-case-container{padding-top:0}.guide-case-feature-section.overview .guide-case-container{height:355px}.guide-case-feature-section.overview .guide-feature-img{top:3em}.guide-case-feature-section.seo .guide-case-container{height:453px}.guide-case-feature-section.seo .guide-feature-content{float:left;width:400px}.guide-case-feature-section.seo .guide-feature-img{right:0;top:3em}.guide-media-case .row h1,.guide-media-case .row h2{text-align:center}.guide-media-case .row h1{font-size:160%;margin:0 0 .5em}.guide-media-case .row h2{font-size:90%}.guide-media-case .row .guide-case-image img{margin-bottom:1.5em;max-width:100%}.guide-media-case .btn-wrapper{text-align:center}.guide-case-voice{margin:3em auto;width:70%}.guide-case-voice blockquote{font-family:serif;font-style:italic;font-size:120%;line-height:1.7;margin-bottom:1em}.guide-case-voice strong{font-size:120%;color:#4f5656;display:block;margin-bottom:.5em}.guide-case-voice small a{color:#9aa5ab;line-height:1.5}.guide-media-request{text-align:center}.page-guide-creator .section-case,.page-guide-media .section-case{margin:0}.guide-case-thumb{width:220px;margin:0 10px;display:inline-block;vertical-align:top}.guide-case-thumb h3{margin:.5em 0;font-size:13px}.guide-case-thumb h3 a{color:#3d3f44}.guide-case-thumb img{max-width:100%}.page-guide{color:gray}.page-guide h1,.page-guide h2,.page-guide h3{color:#4c4c4c}.page-guide a.guide-link{margin:30px 0 0;padding:0 8px 10px;border-bottom:4px solid #c1d4d6;font-weight:700;font-size:16px;color:#2fb6b3;display:inline-block;*display:inline;*zoom:1}.page-guide a.guide-link:hover{text-decoration:none;border-bottom:4px solid #a2bfc2}.page-guide .guide-section-inner{width:960px;margin:0 auto;display:block;*zoom:1}.page-guide .guide-section-inner:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-guide .guide-header{background:#e6efef url(../images/guide/guide/header-image.png%3Fversion=97b8eff8d9d3007d50b866d99353f53d46655b1f) no-repeat 50%;min-height:560px}@media (-webkit-min-device-pixel-ratio:2){.page-guide .guide-header{background:#e6efef url(../images/guide/guide/header-image@2x.png%3Fversion=e8e78c037c5016da70c5370770f1bfc5c2b94e9c) no-repeat 50%;background-size:1325px 631px}}.page-guide nav{padding:30px 0;display:block;*zoom:1}.page-guide nav:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-guide nav ul{float:right;display:inline-block;*display:inline;*zoom:1}.page-guide nav li{float:left;margin:0 0 0 20px}.page-guide nav li a{padding:0 5px 8px;border-bottom:4px solid #c1d4d6;font-weight:700;font-size:14px;color:#4c4c4c;display:inline-block;*display:inline;*zoom:1}.page-guide nav li a:hover{text-decoration:none;border-bottom:4px solid #a2bfc2}.page-guide .head-title{float:right}.page-guide .head-title h1{font-size:40px;font-weight:400;line-height:1.2;margin:10px 0}.page-guide .head-title p{margin:8px 0;font-size:16px}.page-guide section{text-align:center}.page-guide section h2{font-size:40px;margin:10px 0;line-height:1.2;font-weight:400;letter-spacing:.03em}.page-guide section p{font-size:18px;margin:0}.page-guide .blog-main{text-align:center;padding:70px 0 50px;display:block;*zoom:1}.page-guide .blog-main:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-guide .blog-main-figure{margin:50px 0 0;display:block;*zoom:1}.page-guide .blog-main-figure:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-guide .blog-main-figure h3{font-size:20px;margin:30px 0 10px}.page-guide .blog-main-figure p{font-size:16px}.page-guide .write-blog{width:50%;float:left}.page-guide .write-blog-image{margin:0 auto}.page-guide .write-blog-image img{width:344px;height:285px}.page-guide .comment-star{width:50%;float:left}.page-guide .comment-star-image{width:312px;height:285px;margin:0 auto}.page-guide .comment-star-image img{width:312px;height:264px}.page-guide #blog-features{padding:50px 0 70px}.page-guide .blog-features-figure{text-align:left;margin:50px 0 0;display:block;*zoom:1}.page-guide .blog-features-figure:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-guide .blog-features-figure h3{margin:15px 0;font-size:26px}.page-guide .blog-features-figure p{font-size:16px}.page-guide .blog-features-figure section{margin:0 0 40px;display:block;*zoom:1}.page-guide .blog-features-figure section:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-guide .key-features-image{float:left;width:400px;height:290px}.page-guide .features-text{width:450px;float:right;text-align:left;margin:50px 0 0}.page-guide .feature-curation-image{background:url(../images/guide/guide/feature-curation.png%3Fversion=0f36539fd728351773acca17d9e84718cc770449);width:460px;height:345px;float:left}@media (-webkit-min-device-pixel-ratio:2){.page-guide .feature-curation-image{background:url(../images/guide/guide/feature-curation@2x.png%3Fversion=0c7125ea6002c733f9ebd3d58435b6eb2fdaaaac);background-size:460px 345px}}.page-guide .feature-design .feature-design-image{float:right;background:url(../images/guide/guide/feature-design.png%3Fversion=e8bedf275b979a911f364683630f797d1ae2aec4);width:460px;height:345px}@media (-webkit-min-device-pixel-ratio:2){.page-guide .feature-design .feature-design-image{background:url(../images/guide/guide/feature-design@2x.png%3Fversion=7f4775179f078455247dae4e80910538f1c36423);background-size:460px 345px}}.page-guide .feature-design .features-text{float:left}.page-guide .feature-iphone-image{background:url(../images/guide/guide/feature-iphone.png%3Fversion=3e583ddbc76e8e1ee48864260cfbf5db55f6bb6e);width:443px;height:329px;float:left}@media (-webkit-min-device-pixel-ratio:2){.page-guide .feature-iphone-image{background:url(../images/guide/guide/feature-iphone@2x.png%3Fversion=f335bd994f45e159006b0d0c00ad87373c82adf0);background-size:443px 329px}}.page-guide .blog-features-sub{margin:50px 0 0;text-align:left}.page-guide .blog-features-sub .row{margin:0 0 30px}.page-guide .blog-features-sub h3{font-size:14px;margin:5px 0;display:inline-block}.page-guide .blog-features-sub p{font-size:14px;margin:5px 0 0}.page-guide .blog-features-sub .guide-feature-icon{width:40px;height:40px;vertical-align:middle;margin:0 5px 0 0}.page-guide .blog-import{margin:50px 0;display:block;*zoom:1}.page-guide .blog-import:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-guide .blog-import h3{font-weight:400}.page-guide .blog-import img{float:left;width:183px;height:109px;margin:30px 0 0 90px}.page-guide .blog-import-text{float:right;width:580px;text-align:left}.page-guide .blog-import-text h3{font-size:24px}.page-guide .blog-import-text p{font-size:16px}.page-guide .start-blog{text-align:center;margin:100px 0}.page-guide .start-blog p{font-size:18px;margin:0 0 20px}.page-guide .section-case{margin:50px 0}.page-guide .section-case h1{font-size:40px;font-weight:400;margin-bottom:1em}.page-guide #main-pro{text-align:left;padding:70px 0 50px;background:#f9f9f9}.page-guide section.pro-features{background:#f9f9f9;padding:50px 0 70px}.page-guide section.pro-features h3{margin:5px 0}.page-guide section.pro-features p{font-size:14px}.page-guide .section{margin:0 0 30px}.page-guide .pro-features-image{width:150px;height:100px;margin:0 0 5px!important}.page-guide .pro-image{float:right}.page-guide .pro-image img{width:405px;height:382px}.page-guide .pro-text{float:left;width:450px;margin:20px 0 0}.page-guide .pro-text .btn{margin:25px 0 0}.page-guide .plan-comparison{padding:70px 0}.page-guide .plus-features{margin:30px 0 0}.page-guide .plus-features tr{background:#fff}.page-guide .plus-features tr:nth-child(2n){background:#f9f9f9}.page-guide .plus-features th{padding:15px 20px;border:1px solid #ccc;border-left-style:none}.page-guide .plus-features td{border:1px solid #ccc;font-size:16px;padding:10px 0}.page-guide .plus-features th.row-first{visibility:hidden}.page-guide .plus-features td.primary-first-row{padding:0 10px 20px;border-top-style:none}.page-guide .plus-features td.primary-first-row img{margin:0 auto 10px}.page-guide .plus-features td.primary-first-row:before{content:\"\";width:100%;height:8px;background:#42aaa7;display:block;margin:0 0 15px}.page-guide .plus-features td.primary{color:#42aaa7;background:inherit}.page-guide .plus-features .pro-price{color:#42aaa7;font-size:16px;padding:5px;width:60%;margin:0 auto}.page-guide .plus-features .pro-price .price{font-size:40px}.page-guide .plus-features .pro-price .year{margin:5px 0 0;display:inline-block}.page-guide .plus-features .pro-price-notice,.page-guide .plus-features .pro-price-notice a{color:gray}.page-guide .plus-features td.secondary-first-row{padding:0 10px;border-top-style:none;border-right-style:none;vertical-align:top}.page-guide .plus-features td.secondary-first-row:before{content:\"\";width:100%;height:8px;background:gray;display:block;margin:0 0 15px}.page-guide .plus-features td.secondary{color:gray;border-right-style:none}.page-guide .plus-features .free-price{color:gray;font-size:20px;padding:10px;display:inline-block;*display:inline;*zoom:1}.page-guide .plus-features .last-row{border-bottom-style:none}.page-guide .plus-course{margin:50px 0!important}.page-guide .plus-course dt{color:#4c4c4c}.page-guide .plus-course .sign{font-weight:700;margin:0 3px;font-size:30px;color:#42aaa7}.page-guide .plus-course .blue{color:#42aaa7}.page-guide .plus-course .course-notice{padding:10px 0 0}.page-guide .admin-notice{border:none;background:#fff}.page-guide .admin-notice img{float:none}.page-guide .admin-notice-text{float:right;width:580px;text-align:left}.page-guide .admin-notice-text h3{font-size:24px}.page-guide .admin-notice-text p{font-size:16px}.page-guide .register-blog{background:#e6efef;padding:70px 0}.page-guide .register-blog h2{margin:0 0 10px;font-size:180%!important}.page-guide .register-blog p{margin:0 0 20px}.page-compare h2{font-size:150%!important;letter-spacing:0!important;font-weight:700!important}.page-compare h3{margin:0 0 10px}.page-compare .plan-comparison{padding:50px 0}.page-compare p,.page-compare table{line-height:1.4}.page-compare .plus-features th{font-size:14px;vertical-align:middle}.page-compare .plus-features td{padding:20px;vertical-align:middle}.page-compare .primary-first-row{width:45%}.page-compare .primary-first-row span{display:block;font-weight:400}.page-compare .secondary-first-row{width:30%}.page-compare .secondary-first-row span{display:block;font-weight:400}.page-compare .secondary-first-row img{margin:20px auto}.page-compare a.guide-link{margin:10px 0 0;padding:0 8px 4px;line-height:1.4}.page-compare a.guide-link-primary{text-decoration:underline;color:#23b6b4}.page-compare a.guide-link-primary:hover{color:#34d8d6}.page-compare .note{color:#9a9a9a;font-size:80%;font-weight:400;display:block}.page-compare .blog-import{margin:60px 0 30px}.page-compare .blog-import img{margin:10px 50px 0 70px}.page-compare .blog-import-text{width:600px;float:left}.page-compare .blog-import-text p{margin:0 0 10px}.page-compare .register-blog{padding:50px 0}.guide-compare-header{text-align:center;background:#e6efef;padding:50px 0}.guide-compare-header h1{font-size:220%;margin:0 0 20px}.guide-compare-header .description{font-size:110%}.guide-compare-header strong{color:#565656}.guide-compare-header .btn{margin:20px 0 0}.page-guide-app{color:#4d4d4d}.page-guide-app .content-inner{width:960px;margin:0 auto}.page-guide-app .content-main{background:#edf2f2;text-align:center;padding:10px 0 70px}.page-guide-app .thin{font-size:18px;font-weight:700;margin:10px 0 0}.page-guide-app .intro{margin:20px 0 0}.page-guide-app .intro p{font-size:16px}.page-guide-app .intro img{margin:20px 5px 0}.page-guide-app .app-image{margin:50px 0 0}.page-guide-app .app-image .device{height:560px}.page-guide-app .device-wrapper{position:relative}.page-guide-app .download-banner{margin-bottom:1em}.page-guide-app .new{top:-10px;right:70px;background:#369ecf;position:absolute;width:90px;color:#fff;font-weight:700;font-size:18px;padding:35px 0;-webkit-border-top-right-radius:45px;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;-webkit-border-top-left-radius:0;-moz-border-radius-topright:45px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-moz-border-radius-topleft:0;border-top-right-radius:45px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:0;border-radius:45px;background-clip:padding-box}.page-guide-app .content-function{margin:40px 0}.page-guide-app .content-function .span4{text-align:center}.page-guide-app .content-function h3{margin:0 0 .5em}.page-guide-app .content-function img{margin:25px 0}.page-guide-app .content-function p{text-align:left}.page-guide-app .download-app{background:#edf2f2;text-align:center;padding:70px 0}.page-guide-app .download-app img{margin:0 5px}.page-guide-pro{background:#fff}.page-guide-pro .l-guide-pro-container{width:960px;margin-left:auto;margin-right:auto}.page-guide-pro .l-pro-header{padding:2em 0;background:#3d3f44 url(../images/guide/pro/guide-pro-header.jpg%3Fversion=148115b01d561a8c8525b90ddf4416a290dea0a9) no-repeat 50%;background-size:cover;color:#fff;text-align:center}.page-guide-pro .l-pro-header h2{font-size:300%;font-weight:400;margin:.3em 0}.page-guide-pro .l-pro-header p{font-size:100%}.page-guide-pro .pro-header-copy{font-size:260%;font-weight:400;line-height:1.3;margin:.3em 0}.page-guide-pro .pro-header-logo-wrapper{width:300px;margin:auto;font-size:11px;text-align:right}.page-guide-pro .pro-header-logo-wrapper .pro-header-logo{width:300px}.page-guide-pro .pro-header-logo-wrapper h1{font-size:11px;margin:0;font-weight:400}.page-guide-pro p{margin-top:1em;margin-bottom:1em;font-size:90%}.page-guide-pro .l-section{margin-top:50px;margin-bottom:50px}.page-guide-pro .l-section-header{text-align:center;margin-bottom:2em}.page-guide-pro .l-guide-pro-features{text-align:center}.page-guide-pro .l-guide-pro-features .row{margin-bottom:40px}.page-guide-pro .l-guide-pro-features .row:last-child{margin-bottom:0}.page-guide-pro .l-guide-pro-features p{text-align:left}.page-guide-pro .l-guide-pro-features h2{font-size:18px}.page-guide-pro .l-guide-pro-features img{max-width:150px}.page-guide-pro .fotolifeplus-logo{margin-top:7px}.page-guide-pro .btn-wrapper{text-align:center}.page-guide-pro .guide-pro-order-wrapper{display:block;*zoom:1;border:1px solid #dfe5e7;padding:1.5em}.page-guide-pro .guide-pro-order-wrapper:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.page-guide-pro .guide-pro-order-wrapper img{float:right;margin-left:1em}.plus-features{width:100%}.plus-features th{padding:10px 20px;font-size:13px;font-weight:400;text-align:left;border:1px solid #dbdbdb;border-left:0}.plus-features td{padding:10px;font-size:15px;text-align:center;font-weight:700;border:1px solid #dbdbdb}.plus-features th.row-first{border-top:0}.plus-features td.secondary,.plus-features td.secondary-first-row{color:#8e9da7;border-right:0}.plus-features td.primary{color:#4eacd1}.plus-features td.primary-first-row,.plus-features td.secondary-first-row{border-top:0}.plus-features .price{font-size:200%}.plus-features img{display:block;margin:0 auto 10px}.plus-features .pro-price-notice{font-size:12px;display:block;margin-top:5px;color:#aaa;line-height:1.5;font-weight:400}.plus-features .pro-price-notice a{color:#aaa;text-decoration:underline}.plus-features-wrapper .plus-features-table-notice{margin:1em 0;font-size:12px!important;color:#9aa5ab;text-align:left}.plus-course{margin:0;padding:0;display:block;*zoom:1}.plus-course:after{display:block;visibility:hidden;font-size:0;height:0;clear:both;content:\".\"}.plus-course li{float:left;list-style:none;text-align:center;margin-right:42px;width:30%}.plus-course dt{border-bottom:1px solid #ddd;padding:10px 0;font-size:16px;font-weight:700;color:#4eacd1}.plus-course dd{margin:0;font-size:13px;padding:2px 0}.plus-course dd .blue{color:#4eacd1}.plus-course .discount-rate{font-weight:700}.plus-course .discount-percent{font-size:140%}.plus-course .price{font-size:24px}.plus-course .year{font-size:16px;color:#9aa5ab}.page-policy .l-policy-header{background-color:#4eacd1;color:#fff;margin-bottom:3em}.page-policy .l-policy-header a{color:#fff}.page-policy .l-policy-header .l-policy-header-inner{padding:3em 0}.page-policy .l-policy-header h1{font-size:300%;font-weight:400;line-height:1.5;margin:0}.page-policy .l-policy-content{font-size:95%;line-height:1.8em}.page-policy .l-policy-content section{margin-bottom:4em}.page-policy .l-policy-content p{margin:0 0 1.5em}.page-policy .l-policy-content img,.page-policy .l-policy-content video{max-width:100%;height:auto}.page-policy .l-policy-content h1,.page-policy .l-policy-content h2,.page-policy .l-policy-content h3,.page-policy .l-policy-content h4,.page-policy .l-policy-content h5,.page-policy .l-policy-content h6{margin:0 0 .8em;line-height:1.5}.page-policy .l-policy-content h1{font-size:220%;font-weight:400;color:#9aa5ab}.page-policy .l-policy-content h2{font-size:150%}.page-policy .l-policy-content h3{font-size:140%}.page-policy .l-policy-content h4{font-size:130%}.page-policy .l-policy-content h5,.page-policy .l-policy-content h6{font-size:100%}.page-policy .l-policy-content dd,.page-policy .l-policy-content ol,.page-policy .l-policy-content ul{margin:0 0 1em 1.5em;padding:0 0 0 1em}.page-policy .l-policy-content dd li ol,.page-policy .l-policy-content dd li ul,.page-policy .l-policy-content ol li ol,.page-policy .l-policy-content ol li ul,.page-policy .l-policy-content ul li ol,.page-policy .l-policy-content ul li ul{margin-bottom:0}.page-policy .l-policy-content table{border-collapse:collapse;border-spacing:0;border-bottom:1em;margin-bottom:1em;width:100%;overflow:auto;display:block}.page-policy .l-policy-content table td,.page-policy .l-policy-content table th{border:1px solid #ddd;padding:5px 10px}.page-policy .l-policy-content table th{background:#fafafa}.page-policy .l-policy-content .hatena-asin-detail li{line-height:1.4}.page-policy .l-policy-content blockquote{margin:1.5em 3em;padding:5px 20px;border-left:2px solid #aaa;color:#777}.page-policy .l-policy-content blockquote p:last-child{margin-bottom:0}.page-policy .l-policy-content code,.page-policy .l-policy-content pre{font-family:Monaco,Consolas,Courier New,Courier,monospace,sans-serif}.page-policy .l-policy-content pre{padding:15px;background:#f7f8f9;border:none;border-radius:3px;word-wrap:normal;overflow-x:auto;font-size:100%;line-height:1.3}.page-policy .l-policy-content pre>code{margin:0;padding:0;white-space:pre;border:none;background-color:transparent;font-family:Monaco,Consolas,Courier New,Courier,monospace,sans-serif}.page-policy .l-sidebar ul{list-style:none;margin:0 0 2em;padding:1em;background-color:#f7f8f9}.page-policy .l-sidebar li a{display:block;padding:.5em 0}.modal-window-background{position:fixed;left:0;top:0;width:100%;height:100%;background-color:#000;z-index:100;-moz-opacity:.5;opacity:.5;-khtml-opacity:.5;-webkit-opacity:.5;filter:alpha(opacity=50)}a.open-pro-modal{visibility:hidden}.pro-modal-container{position:fixed;width:500px;height:250px;z-index:110;background-color:#fff}.favicon{margin-right:.3em;vertical-align:text-top}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 27388
        },
        "cache": {},
        "timings": {
          "blocked": 0.334000214934349,
          "dns": -1,
          "connect": -1,
          "send": 0.12599979527294597,
          "wait": 561.2640001345427,
          "receive": 1554.6279998961836,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:40.535Z",
        "time": 3897.70400011912,
        "request": {
          "method": "GET",
          "url": "https://www.googletagservices.com/tag/js/gpt.js",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/tag/js/gpt.js"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": ":authority",
              "value": "www.googletagservices.com"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 404,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "date",
              "value": "Fri, 17 Feb 2017 18:59:43 GMT"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "status",
              "value": "404"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "20"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "text/plain",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 152,
          "_error": ""
        },
        "cache": {},
        "timings": {
          "blocked": 0.259000109508634,
          "dns": 0.01199985854327601,
          "connect": 2406.237000133838,
          "send": 0.13799988665005003,
          "wait": 1490.07800011896,
          "receive": 0.9800000116197225,
          "ssl": 1776.921999873597
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "10130",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:40.554Z",
        "time": 2049.0460000000894,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.blog.st-hatena.com/images/common/logo-icon.svg%3Fversion=c570949326e4e1ec6f258179bb9985ce829d4d0c&env=production",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"0-246\""
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "582"
            }
          ],
          "cookies": [],
          "content": {
            "size": 582,
            "mimeType": "text/plain",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 582
        },
        "cache": {},
        "timings": {
          "blocked": 0.363999977707863,
          "dns": -1,
          "connect": -1,
          "send": 0.09700004011392599,
          "wait": 1835.2429999504282,
          "receive": 213.34200003183946,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.063Z",
        "time": 1979.8399999272078,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/hatenablog.com/images/touch/guide-app/apple-badge@2x.png",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 08:27:45 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588ef901-11ac\""
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "4524"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4524,
            "mimeType": "image/png",
            "text": "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",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 4660
        },
        "cache": {},
        "timings": {
          "blocked": 0.49899984151125,
          "dns": -1,
          "connect": -1,
          "send": 0.13000005856156305,
          "wait": 1573.9130000583873,
          "receive": 405.2979999687477,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.063Z",
        "time": 3877.0980001427233,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/hatenablog.com/images/touch/guide-app/google-badge@2x.png",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 08:27:45 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588ef901-1923\""
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "6435"
            }
          ],
          "cookies": [],
          "content": {
            "size": 6435,
            "mimeType": "image/png",
            "text": "iVBORw0KGgoAAAANSUhEUgAAAXYAAACCCAMAAABl9BPsAAAC+lBMVEUAAAD///////////////////////////////////////////////////////////////////////////////////////////////////////////8AAAD///+goKDQ0NAfHx+wsLAQEBBQUFCAgIACAgJj/9T9/f3w8PCQkJAFBQX7+/ulpaU/Pz8wMDAXFxfAwMBwcHD4+PgTExPk5OQJCAjh4eFP2spCQkIKCgp4eHju7u7r6+vJyclM0sgbGxv19fU2qLypqamcnJxZWVnMzMxgYGA2NjZd9NFb79BW582Xl5cODQ45rb5LS0tGRkYmJiZT4MxR3cszortN1slKz8ctLS1g+dNU481IzMYwnLl9fX3b29vU1NRHycVFxsSzs7OUlJRDwcPy8vI7sr+6urqy8KXL+qJnZ2djY2NVVVXY2NhBvsK3t7f/pHb/r3Vzc3M6OjoqKiojIyPo6OhZ6c5Au8GIiIg+uMA9tcAtlrcqkba686TFPH3/v3Xe3t7Dw8PJPHVra2sni7Sh6Kap7KXU/aGEhIT/nnb/unX/tXX/qnW7Oo7bP1o8PzuZ5afB9qPAO4bRPmojhLKtra1+2amQ4ai0OZf/x3TOPW/YP1/m5ubFxcWvOKGMjIyLi4v/mHZdXV3BwcG9vb1x1Kv/ynQfe6+H3an/w3XeQFWnN61hzazF+KNNTU3jQUxh/dRY689ExMSfn5/gQFGOjo7QhmXWP2Nk+tSbNbdR0K0siZjUPmXSeFZk9NB6RZwjeJWPj48bZ4znQUUYDA1is5aIypVNo5R3vJNSyK1BsaM0mJ6JQI6TQn7/zXSdQ22oQFta38hLxatHvKU7pqIuERk5kJKNjY1jnHU/cFdEFj4hNyo4KhlW1cQ7lYLzxG9bHmKbeUcsVkfGOD9QPCVLFiGe1JKeMXd7KHfojWvouGlEgWezdlkLMUmXLEIiST5+YTlwITRrSzERIx1O1cWRu32Bo2zhqmfTq2CIKly8mVaxj1F4JEuPUUJlHSLREuK4AAAAHHRSTlMAxSIMBWbz7Ol33UPOnD20pYhK1a6ihFa1sJKH6g0TfQAAFbxJREFUeNrsnGdQM0UYx+29j22c/ScEiIlJSCAEDCQxCMSoiSQ2LKCiiFJEAdHXjmLB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",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 6572
        },
        "cache": {},
        "timings": {
          "blocked": 2.55900016054511,
          "dns": -1,
          "connect": -1,
          "send": 0.09699980728328006,
          "wait": 1944.2680000793216,
          "receive": 1930.1740000955733,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.064Z",
        "time": 2089.7100002039224,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/hatenablog.com/images/banner/Download_on_the_App_Store_Badge_US-UK_135x40.png",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 08:27:45 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588ef901-976\""
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "2422"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2422,
            "mimeType": "image/png",
            "text": "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",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 2558
        },
        "cache": {},
        "timings": {
          "blocked": 2.32300022616982,
          "dns": -1,
          "connect": -1,
          "send": 0.08999998681247989,
          "wait": 1921.2199999019476,
          "receive": 166.07700008899246,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.064Z",
        "time": 4884.222999913618,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/hatenablog.com/images/banner/google-play-banner-45-en.png",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 08:27:45 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588ef901-1feb\""
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "content-length",
              "value": "8171"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 8171,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 8308
        },
        "cache": {},
        "timings": {
          "blocked": 2.08800006657839,
          "dns": -1,
          "connect": -1,
          "send": 0.0839999411255099,
          "wait": 1944.283999968316,
          "receive": 2937.766999937598,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.065Z",
        "time": 84373.04500001483,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/s.hatena.ne.jp/js/HatenaStar.js",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Wed, 17 Aug 2016 02:49:56 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"57b3d0d4-2931d\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "application/javascript"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 168733,
            "mimeType": "application/javascript",
            "text": "/* Ten */\nif (typeof(Ten) == 'undefined') {\n\nTen = {};\nTen.NAME = 'Ten';\nTen.VERSION = 0.44;\n\n/* Ten.Class */\nTen.Class = function(klass, prototype) {\n    if (klass && klass.initialize) {\n        var c = klass.initialize;\n    } else if(klass && klass.base) {\n        var c = function() { return klass.base[0].apply(this, arguments) };\n    } else {\n        var c = function() {};\n    }\n    c.prototype = prototype || {};\n    c.prototype.constructor = c;\n    Ten.Class.inherit(c, klass);\n    if (klass && klass.base) {\n        for (var i = 0;  i < klass.base.length; i++) {\n            var parent = klass.base[i];\n            if (i == 0) {\n                c.SUPER = parent;\n                c.prototype.SUPER = parent.prototype;\n            }\n            Ten.Class.inherit(c, parent);\n            Ten.Class.inherit(c.prototype, parent.prototype);\n        }\n    }\n    return c;\n}\nTen.Class.inherit = function(child,parent) {\n    for (var prop in parent) {\n        if (typeof(child[prop]) != 'undefined' || prop == 'initialize') continue;\n        child[prop] = parent[prop];\n    }\n}\n\n/*\n// Basic Ten Classes\n*/\n\n/* Ten.Function */\nTen.Function = {\n    bind: function(f,o) {\n        return function() {\n            return f.apply(o, arguments);\n        }\n    },\n    method: function(obj, method) {\n        return Ten.Function.bind(obj[method], obj);\n    }\n};\n\n/* Ten.Array */\nTen.Array = {\n    flatten: function(arr) {\n        var ret = [];\n        (function(arr) {\n            for (var i = 0; i < arr.length; i++) {\n                var o = arr[i];\n                if (Ten.Array.isArray(o)) {\n                    arguments.callee(o);\n                } else {\n                    ret.push(o);\n                }\n            }\n        })(arr);\n        return ret;\n    },\n    dup: function(arr) {\n        var res = [];\n        for (var i = 0; i < arr.length; i++) {\n            res[i] = arr[i];\n        }\n        return res;\n    },\n    indexOf: function(arr,e) {\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i] == e) return i;\n        }\n        return -1;\n    },\n    isArray: function(o) {\n        return (o instanceof Array ||\n                (o && typeof(o.length) === 'number' && typeof(o) != 'string' && !o.nodeType));\n    },\n    find: function (arr, cond) {\n        var code = (cond instanceof Function) ? cond : function (v) {\n            return v == cond;\n        };\n        var arrL = arr.length;\n        for (var i = 0; i < arrL; i++) {\n            if (code(arr[i])) {\n                return arr[i];\n            }\n        }\n        return undefined; // not null\n    },\n    forEach: function (arraylike, code) {\n        var length = arraylike.length;\n        for (var i = 0; i < length; i++) {\n            var r = code(arraylike[i]);\n            if (r && r.stop) return r.returnValue;\n        }\n        return null;\n    }\n};\n\n/* Ten.JSONP */\nTen.JSONP = new Ten.Class({\n    initialize: function(uri,obj,method) {\n        if (Ten.JSONP.Callbacks.length) {\n            setTimeout(function() {new Ten.JSONP(uri,obj,method)}, 500);\n            return;\n        }\n        var del = uri.match(/\\?/) ? '&' : '?';\n        uri += del + 'callback=Ten.JSONP.callback';\n        if (!uri.match(/timestamp=/)) {\n            uri += '&' + encodeURI(new Date());\n        }\n        if (typeof(obj) == 'function' && typeof(method) == 'undefined') {\n            obj = {callback: obj};\n            method = 'callback';\n        }\n        if (obj && method) Ten.JSONP.addCallback(obj,method);\n        this.script = document.createElement('script');\n        this.script.src = uri;\n        this.script.type = 'text/javascript';\n        this.script.onerror = function () {Ten.JSONP.Callbacks = [];};\n        document.getElementsByTagName('head')[0].appendChild(this.script);\n    },\n    addCallback: function(obj,method) {\n        Ten.JSONP.Callbacks.push({object: obj, method: method});\n    },\n    callback: function(args) {\n        // alert('callback called');\n        var cbs = Ten.JSONP.Callbacks;\n        for (var i = 0; i < cbs.length; i++) {\n            var cb = cbs[i];\n            cb.object[cb.method].call(cb.object, args);\n        }\n        Ten.JSONP.Callbacks = [];\n    },\n    MaxBytes: 1800,\n    Callbacks: []\n});\n\n/* Ten.XHR */\nTen.XHR = new Ten.Class({\n    initialize: function(uri,opts,obj,callPropertyName) {\n        Ten.EventDispatcher.implementEventDispatcher(this);\n        this.method = 'GET';\n\n        if (!uri) return;\n\n        if (!Ten.XHR.isSafeUri(uri)) {\n            throw \"host differs : \" + uri;\n        }\n\n        if (!opts) opts = {};\n\n        if (opts.method) \n            this.method = opts.method;\n\n        var self = this;\n        this.addEventListener('complete', function() {\n            if (!obj) return;\n            if (typeof(obj) == 'function' && typeof(callPropertyName) == 'undefined') {\n                obj.call(obj, self.request);\n            } else {\n                obj[callPropertyName].call(obj, self.request);\n            }\n        });\n\n        this.load(uri, opts.data);\n    },\n    getXMLHttpRequest: function() {\n        var xhr;\n        var tryThese = [\n            function () { return new XMLHttpRequest(); },\n            function () { return new ActiveXObject('Msxml2.XMLHTTP'); },\n            function () { return new ActiveXObject('Microsoft.XMLHTTP'); },\n            function () { return new ActiveXObject('Msxml2.XMLHTTP.4.0'); }\n        ];\n        for (var i = 0; i < tryThese.length; i++) {\n            var func = tryThese[i];\n            try {\n                xhr = func;\n                return func();\n            } catch (e) {\n                //alert(e);\n            }\n        }\n        return xhr;\n    },\n    isSafeUri: function(uri) {\n        if (uri.match(/^\\w+:/) || uri.match(/^\\/\\//)) {\n            if (uri.split('/')[2] == location.host) return true;\n            else return false;\n        } else if (uri.match(/^\\/[^\\/]/) || uri == '/') {\n            return true;\n        } else if (!uri || uri.length == 0) {\n            return false;\n        }\n        return true;\n    },\n    makePostData: function(data) {\n        var regexp = /%20/g;\n        if (typeof data == 'string' || (data instanceof String)) {\n            return encodeURIComponent(data).replace(regexp, '+');\n        }\n        var pairs = [];\n        for (var k in data) {\n            if (typeof data[k] == 'undefined') continue;\n            var prefix = encodeURIComponent(k).replace(regexp, '+') + '=';\n            var values = Array.prototype.concat(data[k]);\n            for (var i = 0; i < values.length; i++) {\n                var pair = prefix + encodeURIComponent(values[i]).replace(regexp, '+');\n                pairs.push(pair);\n            }\n        }\n        return pairs.join('&');\n    }\n},{\n    load: function(url, params) {\n        var req = Ten.XHR.getXMLHttpRequest();\n        this.request = req;\n\n        var self = this;\n        req.onreadystatechange = function() {\n            self.stateChangeHandler.call(self, req);\n        };\n        params = params ? Ten.XHR.makePostData(params) : null;\n\n        req.open(this.method, url, true);\n        if (this.method == 'POST') \n            req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        req.send(params);\n    },\n    stateChangeHandler: function(req) {\n        this.dispatchEvent('state_change');\n\n        if (req.readyState == 4) {\n            this.dispatchEvent('ready', req.status.toString());\n\n            if (req.status >= 200 && req.status < 300) {\n                this.dispatchEvent('complete', req);\n            } else {\n                this.dispatchEvent('error', req);\n            }\n        }\n    }\n});\n\n\n\n/* Ten.Observer */\nTen.Observer = new Ten.Class({\n    initialize: function(element,event,obj,method) {\n        var func = obj;\n        if (typeof(method) == 'string') {\n            func = obj[method];\n        }\n        this.element = element;\n        this.event = event;\n        this.listener = function(event) {\n            return func.call(obj, new Ten.Event(event || window.event));\n        }\n        this.start();\n    }\n},{\n    stop: function() {\n        if (this.element.removeEventListener) {\n            this.element.removeEventListener(this.event,this.listener,false);\n        } else if (this.element.detachEvent) {\n            this.element.detachEvent(this.event,this.listener);\n        }\n    },\n    start: function() {\n        if (this.element.addEventListener) {\n            if (this.event.indexOf('on') == 0) {\n                this.event = this.event.substr(2);\n            }\n            this.element.addEventListener(this.event, this.listener, false);\n        } else if (this.element.attachEvent) {\n            this.element.attachEvent(this.event, this.listener);\n        }\n    }\n});\n\n/* Ten.Event */\nTen.Event = new Ten.Class({\n    initialize: function(e) {\n        this.event = e;\n        if (e) {\n            this.target = e.target || e.srcElement;\n            this.shiftKey = e.shiftKey;\n            this.ctrlKey = e.ctrlKey;\n            this.altKey = e.altKey;\n        }\n    },\n    KeyMap: {\n        8:\"backspace\", 9:\"tab\", 13:\"enter\", 19:\"pause\", 27:\"escape\", 32:\"space\",\n        33:\"pageup\", 34:\"pagedown\", 35:\"end\", 36:\"home\", 37:\"left\", 38:\"up\",\n        39:\"right\", 40:\"down\", 44:\"printscreen\", 45:\"insert\", 46:\"delete\",\n        112:\"f1\", 113:\"f2\", 114:\"f3\", 115:\"f4\", 116:\"f5\", 117:\"f6\", 118:\"f7\",\n        119:\"f8\", 120:\"f9\", 121:\"f10\", 122:\"f11\", 123:\"f12\",\n        144:\"numlock\", 145:\"scrolllock\"\n    }\n},{\n    mousePosition: function() {\n        if (!this.event.clientX) return null;\n        return Ten.Geometry.getMousePosition(this.event);\n    },\n    isKey: function(name) {\n        var ecode = this.event.keyCode;\n        if (!ecode) return false;\n        var ename = Ten.Event.KeyMap[ecode];\n        if (!ename) return false;\n        return (ename == name);\n    },\n    targetIsFormElements: function() {\n        if (!this.target) return false;\n        var T = (this.target.tagName || '').toUpperCase();\n        return (T == 'INPUT' || T == 'SELECT' || T == 'OPTION' ||\n                T == 'BUTTON' || T == 'TEXTAREA');\n    },\n    stop: function() {\n        var e = this.event;\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            e.preventDefault();\n        } else {\n            e.cancelBubble = true;\n            e.returnValue = false;\n        }\n    },\n    preventDefault: function () {\n        var e = this.event;\n        if (e.preventDefault) e.preventDefault();\n        e.returnValue = false;\n        this._isDefaultPrevented = true;\n    },\n    isDefaultPrevented: function () {\n        return this._isDefaultPrevented || this.event.defaultPrevented || (this.event.returnValue === false);\n    }\n});\n\n/* Ten.EventDispatcher */\nTen.EventDispatcher = new Ten.Class({\n    initialize: function() {\n        this._eventListeners = {};\n    }, \n    implementEventDispatcher: function(obj) {\n        Ten.Class.inherit(obj, Ten.EventDispatcher.prototype);\n        obj._eventListeners = {};\n    }\n}, {\n    hasEventListener: function(type) {\n        return (this._eventListeners[type] instanceof Array && this._eventListeners[type].length > 0);\n    },\n    addEventListener: function(type, listener) {\n        if (!this.hasEventListener(type)) {\n            this._eventListeners[type] = [];\n        }\n        var listeners = this._eventListeners[type];\n        for (var i = 0;  i < listeners.length; i++) {\n            if (listeners[i] == listener) {\n                return;\n            }\n        }\n        listeners.push(listener);\n    },\n    removeEventListener: function(type, listener) {\n        if (this.hasEventListener(type)) {\n            var listeners = this._eventListeners[type];\n            for (var i = 0;  i < listeners.length; i++) {\n                if (listeners[i] == listener) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        }\n    },\n    dispatchEvent: function(type, opt) {\n        if (!this.hasEventListener(type)) return false;\n        var listeners = this._eventListeners[type];\n        for (var i = 0;  i < listeners.length; i++) {\n            listeners[i].call(this, opt);\n        }\n        return true; // preventDefault is not implemented\n    }\n});\n\n/* Ten.DOM */\nTen.DOM = new Ten.Class({\n    createElementFromString : function (str, opts) {\n        if (!opts) opts = { data: {} };\n        if (!opts.data) opts.data = { };\n\n        var t, cur = opts.parent || document.createDocumentFragment(), root, stack = [cur];\n        while (str.length) {\n            if (str.indexOf(\"<\") == 0) {\n                if ((t = str.match(/^\\s*<(\\/?[^\\s>\\/]+)([^>]+?)?(\\/)?>/))) {\n                    var tag = t[1], attrs = t[2], isempty = !!t[3];\n                    if (tag.indexOf(\"/\") == -1) {\n                        child = document.createElement(tag);\n                        if (attrs) attrs.replace(/([a-z]+)=(?:'([^']+)'|\"([^\"]+)\")/gi,\n                            function (m, name, v1, v2) {\n                                var v = text(v1 || v2);\n                                if (name == \"class\") root && (root[v] = child), child.className = v;\n                                child.setAttribute(name, v);\n                            }\n                        );\n                        cur.appendChild(root ? child : (root = child));\n                        if (!isempty) {\n                            stack.push(cur);\n                            cur = child;\n                        }\n                    } else cur = stack.pop();\n                } else throw(\"Parse Error: \" + str);\n            } else {\n                if ((t = str.match(/^([^<]+)/))) cur.appendChild(document.createTextNode(text(t[0])));\n            }\n            str = str.substring(t[0].length);\n        }\n\n        function text (str) {\n            return str\n                .replace(/&(#(x)?)?([^;]+);/g, function (_, isNumRef, isHex, ref) {\n                    return isNumRef ? String.fromCharCode(parseInt(ref, isHex ? 16 : 10)):\n                                      {\"lt\":\"<\",\"gt\":\"<\",\"amp\":\"&\"}[ref];\n                })\n                .replace(/#\\{([^}]+)\\}/g, function (_, name) {\n                    return (typeof(opts.data[name]) == \"undefined\") ? _ : opts.data[name];\n                });\n        }\n\n        return root;\n    },\n\n    getElementsByTagAndClassName: function(tagName, className, parent) {\n        if (typeof(parent) == 'undefined') parent = document;\n        if (!tagName) return Ten.DOM.getElementsByClassName(className, parent);\n        var children = parent.getElementsByTagName(tagName);\n        if (className) { \n            var elements = [];\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (Ten.DOM.hasClassName(child, className)) {\n                    elements.push(child);\n                }\n            }\n            return elements;\n        } else {\n            return children;\n        }\n    },\n    getElementsByClassName: function(className, parent) {\n        if (typeof(parent) == 'undefined') parent = document;\n        var ret = [];\n        if (parent.getElementsByClassName) {\n            var nodes =  parent.getElementsByClassName(className);\n            for (var i = 0 , len = nodes.length ; i < len ; i++ ) ret.push(nodes.item(i));\n            return ret;\n        } else {\n            if (!className) return ret;\n            (function(parent) {\n                var elems = parent.childNodes;\n                for (var i = 0; i < elems.length; i++) {\n                    var e = elems[i];\n                    if (Ten.DOM.hasClassName(e, className)) {\n                        ret.push(e);\n                    }\n                    arguments.callee(e);\n                }\n            })(parent);\n            ret = Ten.Array.flatten(ret);\n            return ret;\n        }\n    },\n    hasClassName: function(element, className) {\n        if (!element || !className) return false;\n        var cname = element.className;\n        if (!cname) return false;\n        cname = ' ' + cname.toLowerCase() + ' ';\n        cname = cname.replace(/[\\n\\r\\t]/g, ' ');\n        className = ' ' + className.toLowerCase() + ' ';\n        return (cname.indexOf(className) != -1);\n    },\n    addClassName: function(element, className) {\n        if (Ten.DOM.hasClassName(element, className)) return;\n        var c = element.className || '';\n        c = c.length ? c + \" \" + className : className;\n        element.className = c;\n    },\n    removeClassName: function(element, className) {\n        if (!Ten.DOM.hasClassName(element, className)) return;\n        var c = element.className;\n        var classes = c.split(/\\s+/);\n        for (var i = 0; i < classes.length; i++) {\n            if (classes[i] == className) {\n                classes.splice(i,1);\n                break;\n            }\n        }\n        element.className = classes.join(' ');\n    },\n    removeEmptyTextNodes: function(element) {\n        var nodes = element.childNodes;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (node.nodeType == 3 && !/\\S/.test(node.nodeValue)) {\n                node.parentNode.removeChild(node);\n            }\n        }\n    },\n    nextElement: function(elem) {\n        do {\n            elem = elem.nextSibling;\n        } while (elem && elem.nodeType != 1);\n        return elem;\n    },\n    prevElement: function(elem) {\n        do {\n            elem = elem.previousSibling;\n        } while (elem && elem.nodeType != 1);\n        return elem;\n    },\n    nextSiblingInSource: function(elem) {\n        if (elem.childNodes && elem.childNodes.length) {\n            return elem.childNodes[0];\n        } else if (elem.nextSibling) {\n            return elem.nextSibling;\n        } else if (elem.parentNode && elem.parentNode.nextSibling) {\n            return elem.parentNode.nextSibling;\n        }\n        return null;\n    },\n    firstElementChild: function (node) {\n        var el = node.firstElementChild || node.firstChild;\n        while (el && el.nodeType != 1) {\n            el = el.nextSibling;\n        }\n        return el;\n    },\n    getElementSetByClassNames: function (map, container) {\n        var elements = {root: []};\n\n        if (map.root) {\n            if (map.root instanceof Array) {\n                elements.root = map.root;\n            } else {\n                if (Ten.DOM.hasClassName(container, map.root)) {\n                    elements.root = [container];\n                } else {\n                    elements.root = Ten.DOM.getElementsByClassName(map.root, container);\n                }\n            }\n            delete map.root;\n        }\n\n        var root = elements.root[0] || container || document.body || document.documentElement || document;\n        for (var n in map) {\n            if (map[n] instanceof Array) {\n                elements[n] = map[n];\n            } else if (map[n]) {\n                elements[n] = Ten.DOM.getElementsByClassName(map[n], root);\n            }\n        }\n\n        return elements;\n    },\n    getAncestorByClassName: function (className, node) {\n        while (node != null) {\n            node = node.parentNode;\n            if (Ten.DOM.hasClassName(node, className)) {\n                return node;\n            }\n        }\n        return null;\n    },\n    someParentNode: function(el, func) {\n        if (el.parentNode) {\n            if (func(el.parentNode)) {\n                return true;\n            } else {\n                return Ten.DOM.someParentNode(el.parentNode, func);\n            }\n        } else {\n            return false;\n        }\n    },\n    insertBefore: function(node, ref) {\n        ref.parentNode.insertBefore(node, ref);\n    },\n    insertAfter: function(node, ref) {\n        if (ref.nextSibling) {\n            ref.parentNode.insertBefore(node, ref.nextSibling);\n        } else {\n            ref.parentNode.appendChild(node);\n        }\n    },\n    unshiftChild: function(elem, child) {\n        if (elem.firstChild) {\n            elem.insertBefore(child, elem.firstChild);\n        } else {\n            elem.appendChild(child);\n        }\n    },\n    replaceNode: function(newNode, oldNode) {\n        var parent = oldNode.parentNode;\n        if (newNode && parent && parent.nodeType == 1) {\n            parent.insertBefore(newNode, oldNode);\n            parent.removeChild(oldNode);\n        }\n    },\n    removeElement: function(elem) {\n        if (!elem.parentNode) return;\n        elem.parentNode.removeChild(elem);\n    },\n    removeAllChildren: function(node) {\n        while (node.firstChild)\n            node.removeChild(node.firstChild);\n    },\n    scrapeText: function(node) {\n        if (typeof node.textContent == 'string') return node.textContent;\n        if (typeof node.innerText == 'string') return node.innerText;\n        var rval = [];\n        (function (node) {\n            var cn = node.childNodes;\n            if (cn) {\n                for (var i = 0; i < cn.length; i++) {\n                    arguments.callee.call(this, cn[i]);\n                }\n            }\n            var nodeValue = node.nodeValue;\n            if (typeof(nodeValue) == 'string') {\n                rval.push(nodeValue);\n            }\n        })(node);\n        return rval.join('');\n    },\n    getSelectedText: function() {\n        if (window.getSelection)\n            return '' + (window.getSelection() || '');\n        else if (document.getSelection)\n            return document.getSelection();\n        else if (document.selection)\n            return document.selection.createRange().text;\n        else\n            return '';\n    },\n    clearSelection: function() {\n        if (window.getSelection) {\n            window.getSelection().collapse(document.body, 0);\n        } else if (document.getSelection) {\n            document.getSelection().collapse(document.body, 0);\n        } else {\n            var selection = document.selection.createRange();\n            selection.setEndPoint(\"EndToStart\", selection);\n            selection.select();\n        }\n    },\n    show: function(elem) {\n        elem.style.display = 'block';\n    },\n    hide: function(elem) {\n        elem.style.display = 'none';\n    },\n    addObserver: function() {\n        var c = Ten.DOM;\n        if (c.observer || c.loaded) return;\n        c.observer = new Ten.Observer(window,'onload',c,'finishLoad');\n        var ua = navigator.userAgent.toUpperCase();\n        if (window.opera || ua.indexOf('FIREFOX') >= 0) {\n            new Ten.Observer(window,'DOMContentLoaded',c,'finishLoad');\n        } else if ((ua.indexOf('MSIE') >= 0 || ua.toLowerCase().indexOf('webkit') >= 0) && window == top) {\n            var i = 0;\n            (function() {\n                if (i++ > 10000) return null;\n                try {\n                    if (document.readyState != 'loaded' &&\n                        document.readyState != 'complete') {\n                            document.documentElement.doScroll('left');\n                        }\n                } catch(error) {\n                    return setTimeout(arguments.callee, 13);\n                }\n                return c.finishLoad();\n            })();\n        }\n    },\n    finishLoad: function() {\n        var c = Ten.DOM;\n        if (!c.loaded) {\n            c.dispatchEvent('DOMContentLoaded');\n            c.dispatchEvent('onload'); // for backward compatibility\n            c.loaded = true;\n            c.observer.stop();\n            c.observer = null;\n        }\n    },\n    observer: null,\n    loaded: false\n});\nTen.EventDispatcher.implementEventDispatcher(Ten.DOM);\nTen.DOM.addObserver();\n\n/* Ten.Element */\nTen.Element = new Ten.Class({\n    initialize: function(tagName, attributes) {\n        var elem = document.createElement(tagName);\n        for (var a in attributes) {\n            if (a == 'style') {\n                Ten.Style.applyStyle(elem, attributes[a])\n            } else if (a == 'value' && tagName.toLowerCase() == 'input') {\n                elem.setAttribute('value', attributes[a]);\n            } else if (a.indexOf('on') == 0) {\n                new Ten.Observer(elem, a, attributes[a]);\n            } else {\n                elem[a] = attributes[a];\n            }\n        }\n        var children = Array.prototype.slice.call(arguments, 2);\n        for (var i = 0; i < children.length; i++) {\n            var child = children[i];\n            if (typeof child == 'string')\n                child = document.createTextNode(child);\n            if (!child)\n                continue;\n            elem.appendChild(child);\n        }\n        Ten.Element.dispatchEvent('create',elem);\n        return elem;\n   }\n});\nTen.EventDispatcher.implementEventDispatcher(Ten.Element);\n\n/* Ten.Cookie */\nTen.Cookie = new Ten.Class({\n    initialize: function(string) {\n        this.cookies = this.constructor.parse(string);\n    },\n    parse: function(string) {\n        var cookies = { };\n\n        var segments = (string || document.cookie).split(/;\\s*/);\n        while (segments.length) {\n            try {\n                var segment = segments.shift().replace(/^\\s*|\\s*$/g, '');\n                if (!segment.match(/^([^=]*)=(.*)$/))\n                    continue;\n                var key = RegExp.$1, value = RegExp.$2;\n                if (value.indexOf('&') != -1) {\n                    value = value.split(/&/);\n                    for (var i = 0; i < value.length; i++)\n                        value[i] = decodeURIComponent(value[i]);\n                } else {\n                    value = decodeURIComponent(value);\n                }\n                key = decodeURIComponent(key);\n\n                cookies[key] = value;\n            } catch (e) {\n            }\n        }\n\n        return cookies;\n    }\n}, {\n    set: function(key, value, option) {\n        this.cookies[key] = value;\n\n        if (value instanceof Array) {\n            for (var i = 0; i < value.length; i++)\n                value[i] = encodeURIComponent(value[i]);\n            value = value.join('&');\n        } else {\n            value = encodeURIComponent(value);\n        }\n        var cookie = encodeURIComponent(key) + '=' + value;\n\n        option = option || { };\n        if (typeof option == 'string' || option instanceof Date) {\n            // deprecated\n            option = {\n                expires: option\n            };\n        }\n\n        if (!option.expires) {\n            option.expires = this.defaultExpires;\n        }\n        if (/^\\+?(\\d+)([ymdh])$/.exec(option.expires)) {\n            var count = parseInt(RegExp.$1);\n            var field = ({ y: 'FullYear', m: 'Month', d: 'Date', h: 'Hours' })[RegExp.$2];\n\n            var date = new Date;\n            date['set' + field](date['get' + field]() + count);\n            option.expires = date;\n        }\n\n        if (option.expires) {\n            if (option.expires.toUTCString)\n                option.expires = option.expires.toUTCString();\n            cookie += '; expires=' + option.expires;\n        }\n        if (option.domain) {\n            cookie += '; domain=' + option.domain;\n        }\n        if (option.path) {\n            cookie += '; path=' + option.path;\n        } else {\n            cookie += '; path=/';\n        }\n\n        return document.cookie = cookie;\n    },\n    get: function(key) {\n        return this.cookies[key];\n    },\n    has: function(key) {\n        return (key in this.cookies) && !(key in Object.prototype);\n    },\n    clear: function(key) {\n        this.set(key, '', new Date(0));\n        delete this.cookies[key];\n    }\n});\n\n/* Ten.Selector */\nTen.Selector = new Ten.Class({\n    initialize: function(selector) {\n        this.selectorText = selector;\n        var sels = selector.split(/\\s+/);\n        var child = null;\n        var separator = null;\n        for (var i = sels.length - 1; i >= 0; i--) {\n            if (sels[i] == '>') {\n                continue;\n            } else if ((i > 0) && sels[i-1] == '>') {\n                separator = sels[i-1];\n            }\n            var opt = separator ? {separator: separator} : null;\n            separator = null;\n            var node = new Ten.SelectorNode(sels[i],child,opt);\n            child = node;\n        }\n        this.childNode = child;\n    },\n    getElementsBySelector: function(selector, parent) {\n        var sels = selector.split(/\\s*,\\s*/);\n        var ret = [];\n        for (var i = 0; i < sels.length; i++) {\n            var sel = new Ten.Selector(sels[i]);\n            ret = ret.concat(sel.getElements(parent));\n        }\n        ret = Ten.Array.flatten(ret);\n        return ret;\n    }\n},{\n    getElements: function(parent) {\n        if (typeof(parent) == 'undefined') {\n            parent = document;\n        }\n        return this.childNode.getElements(parent);\n    }\n});\n\n/* Ten.SelectorNode */\nTen.SelectorNode = new Ten.Class({\n    initialize: function(selector, child, opt) {\n        if (selector) {\n            selector = selector.replace(/\\s/g,'');\n        }\n        this.option = opt;\n        this.selectorText = selector;\n        this.childNode = child;\n        this.parseSelector();\n    }\n},{\n    getElementsBySelector: null, // will be overridden by parser\n    parseSelector: function() {\n        var f = 'getElementsBySelector';\n        var t = this.selectorText;\n        var match;\n        if ((match = t.match(/^(.+)\\:([\\w\\-+()]+)$/))) {\n            t = match[1];\n            this.pseudoClass = match[2];\n        }\n        if (t.match(/^[\\w-]+$/)) {\n            this[f] = function(parent) {\n                return parent.getElementsByTagName(t);\n            };\n        } else if ((match = t.match(/^([\\w-]+)?#([\\w-]+)$/))) {\n            var tname = match[1];\n            var idname = match[2];\n            this[f] = function(parent) {\n                var e = document.getElementById(idname);\n                if (!tname ||\n                    e.tagName.toLowerCase() == tname.toLowerCase()) {\n                        return [e];\n                    } else {\n                        return [];\n                    }\n            };\n        } else if ((match = t.match(/^([\\w-]+)?\\.([\\w-]+)/))) {\n            var tname = match[1];\n            var cname = match[2];\n            this[f] = function(parent) {\n                return Ten.DOM.getElementsByTagAndClassName(tname,cname,parent);\n            };\n        }\n        if (this.option && this.option.separator) this.parseSeparator();\n        if (this.pseudoClass) this.parsePseudoClass();\n    },\n    parsePseudoClass: function() {\n        if (!this.pseudoClass) return;\n        var pseudo = this.pseudoClass;\n        var f = 'getElementsBySelector';\n        var func = this[f];\n        var match;\n        if ((match = pseudo.match(/^(.+)-child(\\((\\d+)\\))?$/))) {\n            var type = match[1];\n            var n = match[3];\n            var index;\n            if (type == 'first') {\n                index = 0;\n            } else if (type == 'last') {\n                index = -1;\n            } else if (type == 'nth' && n) {\n                index = n - 1;\n            }\n            if (typeof index == 'number') {\n                this[f] = function(parent) {\n                    var elems = func(parent);\n                    if (index < 0) index = elems.length + index;\n                    if (elems[index]) {\n                        return [elems[index]];\n                    } else {\n                        return [];\n                    }\n                }\n            }\n        } else if ((match = pseudo.match(/^nth-child\\((\\d+)n\\+(\\d+)\\)$/))) {\n            var a = new Number(match[1]);\n            var b = new Number(match[2]);\n            this[f] = function(parent) {\n                var elems = func(parent);\n                var ret = [];\n                for (var n = 0; n < 1000; n++) {\n                    var i = a * n + b - 1;\n                    if (i < 0) continue;\n                    if (typeof elems[i] == 'undefined') break;\n                    ret.push(elems[i]);\n                }\n                return ret;\n            };\n        }\n    },\n    parseSeparator: function() {\n        if (!this.option) return;\n        var sep = this.option.separator;\n        if (!sep) return;\n        var f = 'getElementsBySelector';\n        var func = this[f];\n        if (sep == '>') {\n            this[f] = function(parent) {\n                var elems = func(parent);\n                var ret = [];\n                for (var i = 0; i < elems.length; i++) {\n                    if (elems[i].parentNode == parent) ret.push(elems[i]);\n                }\n                return ret;\n            }\n        }\n    },\n    getElements: function(parent) {\n        if (typeof this.getElementsBySelector != 'function') return null;\n        var ret = [];\n        var elems = this.getElementsBySelector(parent);\n        if (elems && this.childNode) {\n            for (var i = 0; i < elems.length; i++) {\n                ret.push(this.childNode.getElements(elems[i]));\n            }\n            return ret;\n        } else {\n            return elems;\n        }\n    }\n});\n\n/* Ten._Selector */\nTen._Selector = new Ten.Class({\n    base : [Ten.Selector],\n    initialize: function(selector) {\n        this.selectorText = selector;\n        var sels = selector.split(/\\s+/);\n        var child = null;\n        var separator = null;\n        for (var i = sels.length - 1; i >= 0; i--) {\n            if (sels[i] == '>') {\n                continue;\n            } else if ((i > 0) && sels[i-1] == '>') {\n                separator = sels[i-1];\n            }\n            var opt = separator ? {separator: separator} : null;\n            separator = null;\n            var node = new Ten._SelectorNode(sels[i],child,opt);\n            child = node;\n        }\n        this.childNode = child;\n    },\n    getElementsBySelector: function(selector, parent) {\n        var sels = selector.split(/\\s*,\\s*/);\n        var ret = [];\n        for (var i = 0; i < sels.length; i++) {\n            var sel = new Ten._Selector(sels[i]);\n            ret = ret.concat(sel.getElements(parent));\n        }\n        ret = Ten._Selector._elementArrayFlatten(ret);\n        if (selector.indexOf(',') >= 0) ret.sort(Ten._Selector._sortByElementOrder);\n        return ret;\n    },\n    _sortByElementOrder: function(a, b) {\n        var depthA = Ten._Selector._getNodeDepth(a);\n        var depthB = Ten._Selector._getNodeDepth(b);\n        if (depthA > depthB) for (var i = 0; i < (depthA - depthB) ; i++ ) a = a.parentNode;\n        else if (depthA < depthB) for (var i = 0; i < (depthB - depthA) ; i++ ) b = b.parentNode;\n        return Ten._Selector._getSiblingDepth(b) - Ten._Selector._getSiblingDepth(a);\n    },\n    _getNodeDepth: function(elem) {\n        var i = 0;\n        for (var n = elem ; n ; n = n.parentNode, i++){}\n        return i;\n    },\n    _getSiblingDepth: function(elem) {\n        var i = 0;\n        for (var n = elem; n ; n = n.nextSibling, i++){}\n        return i;\n    },\n    _elementArrayFlatten : function(arr) {\n        var ret = [];\n        (function(arr) {\n            for (var i = 0; i < arr.length; i++) {\n                var o = arr[i];\n                if ((o && o instanceof Array) ||\n                    (o && typeof(o.length) === 'number' \n                       && typeof(o) != 'string'\n                       && !o.tagName)){\n                    arguments.callee(o);\n                } else {\n                    ret.push(o);\n                }\n            }\n        })(arr);\n        return ret;\n    }\n},{\n});\n\n/* Ten._SelectorNode */\nTen._SelectorNode = new Ten.Class({\n    base : [Ten.SelectorNode]\n},{\n    parsePseudoClass: function() {\n        if (!this.pseudoClass) return;\n        var pseudo = this.pseudoClass;\n        var f = 'getElementsBySelector';\n        var func = this[f];\n        var match;\n        if ((match = pseudo.match(/^(.+)-child(\\((\\d+)\\))?$/))) {\n            var type = match[1];\n            var n = match[3];\n            var index;\n            if (type == 'first') {\n                index = 0;\n            } else if (type == 'last') {\n                index = -1;\n            } else if (type == 'nth' && n) {\n                index = n - 1;\n            }\n            if (typeof index == 'number') {\n                this[f] = function(parent) {\n                    var elems = func(parent);\n                    var ret = [];\n                    for (var i = 0, len = elems.length ; i < len ; i++ ) {\n                        var children =  elems[i].parentNode.childNodes;\n                        if((index >= 0 && children[index] == elems[i]) \n                            || (index < 0 && children[children.length - 1] == elems[i]))\n                                 ret.push(elems[i]);\n                    }\n                    return ret;\n                }\n            }\n        } else if ((match = pseudo.match(/^nth-child\\((\\d+)n\\+(\\d+)\\)$/))) {\n            var a = new Number(match[1]);\n            var b = new Number(match[2]);\n            this[f] = function(parent) {\n                var elems = func(parent);\n                var tagName = elems[0].tagName;\n                var parents = [];\n                var checkArray = function (array , e) {\n                    for (var i = 0 , len = array.length; i < len ; i++) {\n                        if (array[i] == e) return;\n                    }\n                    array.push(e);\n                }\n                for (var i = 0, len = elems.length ; i < len ; i++ ){\n                   checkArray(parents, elems[i].parentNode); \n                }\n                var ret = [];\n                for (var j = 0, len = parents.length ; j < len ; j++) {\n                    var children = parents[j].childNodes;\n                    for (var n = 0; n < children.length; n++) {\n                        var i = a * n + b - 1;\n                        if (i < 0) continue;\n                        if (children[i] && children[i].tagName == tagName) ret.push(children[i]);\n                    }\n                }\n                return ret;\n            };\n        }\n    }\n});\n\n/* Ten.querySelector */\nif (document.querySelector) {\n    Ten.querySelector = function (selector, elem) {\n        if (elem) return (elem.querySelector) ? elem.querySelector(selector) : null;\n        return document.querySelector(selector);\n    }\n} else {\n    Ten.querySelector = function (selector, elem) {\n        return Ten._Selector.getElementsBySelector(selector, elem)[0] || null;\n    }\n}\n\nif (document.querySelectorAll) {\n    Ten.querySelectorAll = function (selector, elem) {\n        var elems ;\n        try {\n            if (elem) elems = (elem.querySelectorAll) ? elem.querySelectorAll(selector) : [];\n            else  elems = document.querySelectorAll(selector);\n        } catch (e) {\n            return (elem) ? Ten._Selector.getElementsBySelector(selector, elem) : Ten._Selector.getElementsBySelector(selector);\n        }\n       // return Array.prototype.slice.apply(elems);\n        var ret = [];\n        for (var i = 0 , len = elems.length ; i < len ; i++ ) ret.push(elems[i]);\n        return ret;\n    }\n    Ten.DOM.orig_getElementsByTagAndClassName = Ten.DOM.getElementsByTagAndClassName;\n    Ten.DOM.getElementsByTagAndClassName = function(tag,klass,parent) {\n        var selector = tag || '';\n        if (klass) selector += '.' + klass;\n        if (!tag && !klass) return [];\n        try {\n            return Ten.querySelectorAll(selector, parent);\n        } catch(e) {\n            return Ten.DOM.orig_getElementsByTagAndClassName(tag, klass, parent);\n        }\n    }\n} else {\n    Ten.querySelectorAll = Ten._Selector.getElementsBySelector;\n}\n\n/* Ten.Color */\nTen.Color = new Ten.Class({\n    initialize: function(r,g,b,a) {\n        if (typeof(a) == 'undefined' || a === null) a = 1;\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    },\n    parseFromString: function(str) {\n        var match;\n        if ((match = str.match(/^#([0-9a-f]{6}|[0-9a-f]{3})$/i))) {\n            var hexstr = match[1];\n            var w = hexstr.length / 3;\n            var rgb = [];\n            for (var i = 0; i < 3; i++) {\n                var hex = hexstr.substr(w * i, w);\n                if (hex.length == 1) hex += hex;\n                rgb.push(parseInt(hex,16));\n            }\n            return new Ten.Color(rgb[0],rgb[1],rgb[2]);\n        } else if ((match = str.match(/^rgb\\(([\\d.,\\s]+)\\)/))) {\n            var rdba = match[1].split(/[\\s,]+/);\n            return new Ten.Color(rdba[0],rdba[1],rdba[2],rdba[3]);\n        }\n        return null;\n    },\n    parseFromElementColor: function(elem,prop) {\n        var ret;\n        for (var color; elem; elem = elem.parentNode) {\n            color = Ten.Style.getElementStyle(elem, prop);\n            if (typeof(color) != 'undefined' && color != 'transparent') {\n                ret = color;\n                break;\n            }\n        }\n        return ret ? Ten.Color.parseFromString(ret) : null;\n    }\n},{\n    asRGBString: function() {\n        if (this.a < 1) {\n            return 'rgba(' + this.r + ',' + this.g + ',' + this.b +\n                ',' + this.a + ')';\n        } else {\n            return 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n        }\n    },\n    asHexString: function() {\n        var str = '#';\n        var cls = ['r','g','b'];\n        for (var i = 0; i < 3; i ++) {\n            var c = Math.round(this[cls[i]]);\n            var s = c.toString(16);\n            if (c < 16) s = '0' + s;\n            str += s;\n        }\n        return str;\n    },\n    overlay: function(color) {\n        if (color.a == 1) return color;\n        r = Math.round(color.r * color.a + this.r * this.a * (1 - color.a));\n        g = Math.round(color.g * color.a + this.g * this.a * (1 - color.a));\n        b = Math.round(color.b * color.a + this.b * this.a * (1 - color.a));\n        return new Ten.Color(r,g,b);\n    }\n});\n\n/* Ten.Style */\nTen.Style = new Ten.Class({\n    applyStyle: function(elem, style) {\n        var cssText = elem.style.cssText;\n        var estyle = elem.style;\n        for (var prop in style) {\n            var value = style[prop];\n            if (typeof value == 'function') {\n                estyle[prop] = value.call(elem);\n            } else {\n                estyle[prop] = value;\n            }\n        }\n        return function() {\n            elem.style.cssText = cssText;\n        };\n    },\n    getGlobalRule: function(selector) {\n        selector = selector.toLowerCase();\n        if (Ten.Style._cache[selector]) {\n            return Ten.Style._cache[selector];\n        } else if (Ten.Style._cache[selector] === null) {\n            return null;\n        } else {\n            for (var i = document.styleSheets.length - 1; i >= 0; i--) {\n                var ss = document.styleSheets[i];\n                try {\n                    var cssRules = ss.cssRules || ss.rules;\n                } catch(e) {\n                    continue;\n                }\n                if (cssRules) {\n                    for (var j = cssRules.length - 1; j >= 0; j--) {\n                        var rule = cssRules[j];\n                        if (rule.selectorText &&\n                            rule.selectorText.toLowerCase() == selector) {\n                                Ten.Style._cache[selector] = rule;\n                                return rule;\n                            }\n                    }\n                }\n            }\n        }\n        Ten.Style._cache[selector] = null;\n        return null;\n    },\n    getGlobalStyle: function(selector, prop) {\n        var rule = Ten.Style.getGlobalRule(selector);\n        if (rule && rule.style[prop]) {\n            return rule.style[prop];\n        } else {\n            return null;\n        }\n    },\n    getElementStyle: function(elem, prop) {\n        var style = elem.style ? elem.style[prop] : null;\n        if (!style) {\n            var dv = document.defaultView;\n            if (dv && dv.getComputedStyle) {\n                try {\n                    var styles = dv.getComputedStyle(elem, null);\n                } catch(e) {\n                    return null;\n                }\n                prop = prop.replace(/([A-Z])/g, '-$1').toLowerCase();\n                style = styles ? styles.getPropertyValue(prop) : null;\n            } else if (elem.currentStyle) {\n                style = elem.currentStyle[prop];\n            }\n        }\n        return style;\n    },\n    scrapeURL: function(url) {\n        if (url.match(/url\\((.+)\\)/)) {\n            url = RegExp.$1;\n            url = url.replace(/[\\'\\\"<>]/g, '');\n            return url;\n        }\n        return null;\n    },\n    _cache: {}\n});\n\n/* Ten.Geometry */\nTen.Geometry = new Ten.Class({\n    initialize: function() {\n        if (Ten.Geometry._initialized) return;\n        var func = Ten.Geometry._functions;\n        var de = document.documentElement;\n        if (window.innerWidth) {\n            func.getXScroll = function() { return window.pageXOffset; }\n            func.getYScroll = function() { return window.pageYOffset; }\n        } else if (de && de.clientWidth) {\n            func.getXScroll = function() { return de.scrollLeft; }\n            func.getYScroll = function() { return de.scrollTop; }\n        } else if (document.body.clientWidth) {\n            func.getXScroll = function() { return document.body.scrollLeft; }\n            func.getYScroll = function() { return document.body.scrollTop; }\n        }\n\n        func.getWindowHeight = function(w) { return Ten.Geometry._getRoot(w).clientHeight; }\n        func.getWindowWidth  = function(w) { return Ten.Geometry._getRoot(w).clientWidth; }\n\n        func.getDocumentHeight = function(w) { return Ten.Geometry._getRoot(w).scrollHeight; }\n        func.getDocumentWidth  = function(w) { return Ten.Geometry._getRoot(w).scrollWidth; }\n\n        Ten.Geometry._initialized = true;\n    },\n    _getRoot : function(w) {\n        if (!w) w = window;\n        var root = /BackCompat/i.test(w.document.compatMode) ? document.body : document.documentElement;\n        return root;\n    },\n    _initialized: false,\n    _functions: {},\n    getScroll: function() {\n        if (!Ten.Geometry._initialized) new Ten.Geometry;\n        return {\n            x: Ten.Geometry._functions.getXScroll(),\n            y: Ten.Geometry._functions.getYScroll()\n        };\n    },\n    getMousePosition: function(pos) {\n        // pos should have clientX, clientY same as mouse event\n        if (!Ten.Browser.isChrome && (navigator.userAgent.indexOf('Safari') > -1) &&\n            (navigator.userAgent.indexOf('Version/') < 0)) {\n            return {\n                x: pos.clientX,\n                y: pos.clientY\n            };\n        } else {\n            var scroll = Ten.Geometry.getScroll();\n            return {\n                x: pos.clientX + scroll.x,\n                y: pos.clientY + scroll.y\n            };\n        }\n    },\n    getElementPosition: function(e) {\n        var pos = {x:0, y:0};\n        if (document.documentElement.getBoundingClientRect) { // IE \n            var box = e.getBoundingClientRect();\n            var owner = e.ownerDocument;\n            pos.x = box.left + Math.max(owner.documentElement.scrollLeft, owner.body.scrollLeft) - 2;\n            pos.y = box.top  + Math.max(owner.documentElement.scrollTop,  owner.body.scrollTop) - 2\n        } else if(document.getBoxObjectFor) { //Firefox\n            pos.x = document.getBoxObjectFor(e).x;\n            pos.y = document.getBoxObjectFor(e).y;\n        } else {\n            do {\n                pos.x += e.offsetLeft;\n                pos.y += e.offsetTop;\n            } while ((e = e.offsetParent));\n        }\n        return pos;\n    },\n    getWindowSize: function() {\n        if (!Ten.Geometry._initialized) new Ten.Geometry;\n        return {\n            w: Ten.Geometry._functions.getWindowWidth(),\n            h: Ten.Geometry._functions.getWindowHeight()\n        };\n    },\n    getDocumentSize: function(w) {\n        if (!Ten.Geometry._initialized) new Ten.Geometry;\n        w = w || window;\n        return {\n            w: Ten.Geometry._functions.getDocumentWidth(w),\n            h: Ten.Geometry._functions.getDocumentHeight(w)\n        };\n    }\n});\n\n/* Ten.Position */\nTen.Position = new Ten.Class({\n    initialize: function(x,y) {\n        this.x = x;\n        this.y = y;\n    },\n    add: function(a,b) {\n        return new Ten.Position(a.x + b.x, a.y + b.y);\n    },\n    subtract: function(a,b) {\n        return new Ten.Position(a.x - b.x, a.y - b.y);\n    }\n});\n\n/* Ten.Logger */\nTen.Logger = new Ten.Class({\n    initialize: function(level, fallbackElement) {\n        this.level = level || 'info';\n        this.fallbackElement = fallbackElement;\n        this.logFunction = this.constructor.logFunction;\n        this.logs = [];\n    },\n    LEVEL: {\n        error: 0,\n        warn:  1,\n        info:  2,\n        debug: 3\n    },\n    logFunction: function(level, args) {\n        if (typeof console == 'undefined') {\n            try {\n                if (window.opera) {\n                    // Opera\n                    opera.postError(args.join(', '));\n                } else {\n                    // fub\n                    external.consoleLog(args.join(', '));\n                }\n            } catch (e) {\n                if (this.fallbackElement && this.fallbackElement.appendChild) {\n                    this.fallbackElement.appendChild(document.createTextNode(level + ': ' + args.join(', ')));\n                    this.fallbackElement.appendChild(document.createElement('br'));\n                }\n            }\n        } else if (typeof console[level] == 'function') {\n            if (navigator.userAgent.indexOf('Safari') >= 0) {\n                // Safari\n                console[level](args.join(', '));\n            } else {\n                // Firefox (with Firebug)\n                console[level].apply(console, args);\n            }\n        } else if (typeof console.log == 'function') {\n            console.log(args.join(', '));\n        }\n    }\n}, {\n    logs: null,\n    log: function(level) {\n        var LEVEL = this.constructor.LEVEL;\n        if (!(level in LEVEL) || LEVEL[level] > LEVEL[this.level])\n            return;\n\n        var args = [];\n        for (var i = 1; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n\n        this.logs.push([level, args]);\n\n        this.logFunction(level, args);\n    },\n    error: function() {\n        return this._log('error', arguments);\n    },\n    warn: function() {\n        return this._log('warn', arguments);\n    },\n    info: function() {\n        return this._log('info', arguments);\n    },\n    debug: function() {\n        return this._log('debug', arguments);\n    },\n    _log: function(level, _arguments) {\n        var args = [level];\n        for (var i = 0; i < _arguments.length; i++)\n            args.push(_arguments[i]);\n        return this.log.apply(this, args);\n    }\n});\n\n/* DEPRECATED: Ten.Browser */\nTen.Browser = {\n    isIE: navigator.userAgent.indexOf('MSIE') != -1,\n    isIE6 : navigator.userAgent.indexOf('MSIE 6.') != -1,\n    isIE7 : navigator.userAgent.indexOf('MSIE 7.') != -1,\n    isIE8 : navigator.userAgent.indexOf('MSIE 8.') != -1,\n    isIE9 : navigator.userAgent.indexOf('MSIE 9.') != -1,\n    geIE10 : /MSIE [0-9]{2,}\\./.test(navigator.userAgent),\n    /* Gecko */\n    isMozilla: navigator.userAgent.indexOf('Mozilla') != -1 && !/compatible|WebKit/.test(navigator.userAgent),\n    /* Presto */\n    isOpera: !!window.opera,\n    isWebKit: navigator.userAgent.indexOf('WebKit') != -1,\n    isSafari: navigator.userAgent.indexOf('WebKit') != -1 && navigator.userAgent.indexOf('Chrome/') == -1,\n    isChrome : navigator.userAgent.indexOf('Chrome/') != -1,\n    isFirefox : navigator.userAgent.indexOf('Firefox/') != -1,\n    isDSi : navigator.userAgent.indexOf('Nintendo DSi') != -1,\n    is3DS : navigator.userAgent.indexOf('Nintendo 3DS') != -1,\n    isWii : navigator.userAgent.indexOf('Nintendo Wii') != -1 && !navigator.userAgent.indexOf('Nintendo WiiU'),\n    isWiiU: navigator.userAgent.indexOf('Nintendo WiiU'),\n    /* Android smartphones */\n    isAndroid : navigator.userAgent.indexOf('Android') != -1 && navigator.userAgent.indexOf('Mobile') != -1,\n    /* iPhone and iPod touch */\n    isIPhone : (navigator.userAgent.indexOf('iPod;') != -1 || navigator.userAgent.indexOf('iPhone;') != -1 || navigator.userAgent.indexOf('iPhone Simulator;') != -1),\n    isIPad : navigator.userAgent.indexOf('iPad') != -1,\n    isBB: navigator.userAgent.indexOf('BlackBerry') == 0,\n    isWM: navigator.userAgent.indexOf('IEMobile') != -1 || navigator.userAgent.indexOf('Windows Phone') != -1,\n    isOSX: navigator.userAgent.indexOf('OS X ') != -1,\n    isSupportsXPath : !!document.evaluate,\n    noQuirks: document.compatMode == 'CSS1Compat',\n    version: {\n        string: (/(?:Firefox\\/|MSIE |Opera\\/|Chrome\\/|Version\\/)([\\d.]+)/.exec(navigator.userAgent) || []).pop(),\n        valueOf: function() { return parseFloat(this.string) },\n        toString: function() { return this.string }\n    }\n};\n/* Touch small devices */\nTen.Browser.isTouch = Ten.Browser.isIPhone || Ten.Browser.isAndroid || Ten.Browser.isDSi || Ten.Browser.is3DS;\nTen.Browser.isSmartPhone = Ten.Browser.isIPhone || Ten.Browser.isAndroid;\nTen.Browser.leIE7 = Ten.Browser.isIE6 || Ten.Browser.isIE7;\n\nif (!Ten.Browser.isIE) Ten.JSONP.MaxBytes = 7000;\n\nif (!Ten.Browser.CSS) Ten.Browser.CSS = {};\nTen.Browser.CSS.noFixed = Ten.Browser.isIE6 || (Ten.Browser.isIE && !Ten.Browser.noQuirks);\n\nTen.Event.onKeyDown = ((Ten.Browser.isFirefox && Ten.Browser.isOSX) || Ten.Browser.isOpera) ? 'onkeypress' : 'onkeydown';\n\n\nTen.Deferred = (function () {\n    function Deferred () { return (this instanceof Deferred) ? this.init() : new Deferred() }\n    Deferred.ok = function (x) { return x };\n    Deferred.ng = function (x) { throw  x };\n    Deferred.prototype = {\n        \n        init : function () {\n            this._next    = null;\n            this.callback = {\n                ok: Deferred.ok,\n                ng: Deferred.ng\n            };\n            return this;\n        },\n    \n        \n        next  : function (fun) { return this._post(\"ok\", fun) },\n    \n        \n        error : function (fun) { return this._post(\"ng\", fun) },\n    \n        \n        call  : function (val) { return this._fire(\"ok\", val) },\n    \n        \n        fail  : function (err) { return this._fire(\"ng\", err) },\n    \n        \n        cancel : function () {\n            (this.canceller || function () {})();\n            return this.init();\n        },\n    \n        _post : function (okng, fun) {\n            this._next =  new Deferred();\n            this._next.callback[okng] = fun;\n            return this._next;\n        },\n    \n        _fire : function (okng, value) {\n            var next = \"ok\";\n            try {\n                value = this.callback[okng].call(this, value);\n            } catch (e) {\n                next  = \"ng\";\n                value = e;\n                if (Deferred.onerror) Deferred.onerror(e);\n            }\n            if (value instanceof Deferred) {\n                value._next = this._next;\n            } else {\n                if (this._next) this._next._fire(next, value);\n            }\n            return this;\n        }\n    };\n    \n    Deferred.next_default = function (fun) {\n        var d = new Deferred();\n        var id = setTimeout(function () { d.call() }, 0);\n        d.canceller = function () { clearTimeout(id) };\n        if (fun) d.callback.ok = fun;\n        return d;\n    };\n    Deferred.next_faster_way_readystatechange = ((typeof window === 'object') && (location.protocol == \"http:\") && !window.opera && /\\bMSIE\\b/.test(navigator.userAgent)) && function (fun) {\n        var d = new Deferred();\n        var t = new Date().getTime();\n        if (t - arguments.callee._prev_timeout_called < 150) {\n            var cancel = false;\n            var script = document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.src  = \"data:text/javascript,\";\n            script.onreadystatechange = function () {\n                if (!cancel) {\n                    d.canceller();\n                    d.call();\n                }\n            };\n            d.canceller = function () {\n                if (!cancel) {\n                    cancel = true;\n                    script.onreadystatechange = null;\n                    document.body.removeChild(script);\n                }\n            };\n            document.body.appendChild(script);\n        } else {\n            arguments.callee._prev_timeout_called = t;\n            var id = setTimeout(function () { d.call() }, 0);\n            d.canceller = function () { clearTimeout(id) };\n        }\n        if (fun) d.callback.ok = fun;\n        return d;\n    };\n    Deferred.next_faster_way_Image = ((typeof window === 'object') && (typeof(Image) != \"undefined\") && !window.opera && document.addEventListener) && function (fun) {\n        var d = new Deferred();\n        var img = new Image();\n        var handler = function () {\n            d.canceller();\n            d.call();\n        };\n        img.addEventListener(\"load\", handler, false);\n        img.addEventListener(\"error\", handler, false);\n        d.canceller = function () {\n            img.removeEventListener(\"load\", handler, false);\n            img.removeEventListener(\"error\", handler, false);\n        };\n        img.src = \"data:image/png,\" + Math.random();\n        if (fun) d.callback.ok = fun;\n        return d;\n    };\n    Deferred.next_tick = (typeof process === 'object' && typeof process.nextTick === 'function') && function (fun) {\n        var d = new Deferred();\n        process.nextTick(function() { d.call() });\n        if (fun) d.callback.ok = fun;\n        return d;\n    }\n    Deferred.next = Deferred.next_faster_way_readystatechange ||\n                    Deferred.next_faster_way_Image ||\n                    Deferred.next_tick ||\n                    Deferred.next_default;\n    \n    Deferred.chain = function () {\n        var chain = Deferred.next();\n        for (var i = 0, len = arguments.length; i < len; i++) (function (obj) {\n            switch (typeof obj) {\n                case \"function\":\n                    var name = null;\n                    try {\n                        name = obj.toString().match(/^\\s*function\\s+([^\\s()]+)/)[1];\n                    } catch (e) { }\n                    if (name != \"error\") {\n                        chain = chain.next(obj);\n                    } else {\n                        chain = chain.error(obj);\n                    }\n                    break;\n                case \"object\":\n                    chain = chain.next(function() { return Deferred.parallel(obj) });\n                    break;\n                default:\n                    throw \"unknown type in process chains\";\n            }\n        })(arguments[i]);\n        return chain;\n    }\n    \n    Deferred.wait = function (n) {\n        var d = new Deferred(), t = new Date();\n        var id = setTimeout(function () {\n            d.call((new Date).getTime() - t.getTime());\n        }, n * 1000);\n        d.canceller = function () { clearTimeout(id) };\n        return d;\n    };\n    \n    Deferred.call = function (fun) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return Deferred.next(function () {\n            return fun.apply(this, args);\n        });\n    };\n    \n    Deferred.parallel = function (dl) {\n        if (arguments.length > 1) dl = Array.prototype.slice.call(arguments);\n        var ret = new Deferred(), values = {}, num = 0;\n        for (var i in dl) if (dl.hasOwnProperty(i)) (function (d, i) {\n            if (typeof d == \"function\") d = Deferred.next(d);\n            d.next(function (v) {\n                values[i] = v;\n                if (--num <= 0) {\n                    if (dl instanceof Array) {\n                        values.length = dl.length;\n                        values = Array.prototype.slice.call(values, 0);\n                    }\n                    ret.call(values);\n                }\n            }).error(function (e) {\n                ret.fail(e);\n            });\n            num++;\n        })(dl[i], i);\n    \n        if (!num) Deferred.next(function () { ret.call() });\n        ret.canceller = function () {\n            for (var i in dl) if (dl.hasOwnProperty(i)) {\n                dl[i].cancel();\n            }\n        };\n        return ret;\n    };\n    \n    Deferred.earlier = function (dl) {\n        if (arguments.length > 1) dl = Array.prototype.slice.call(arguments);\n        var ret = new Deferred(), values = {}, num = 0;\n        for (var i in dl) if (dl.hasOwnProperty(i)) (function (d, i) {\n            d.next(function (v) {\n                values[i] = v;\n                if (dl instanceof Array) {\n                    values.length = dl.length;\n                    values = Array.prototype.slice.call(values, 0);\n                }\n                ret.canceller();\n                ret.call(values);\n            }).error(function (e) {\n                ret.fail(e);\n            });\n            num++;\n        })(dl[i], i);\n    \n        if (!num) Deferred.next(function () { ret.call() });\n        ret.canceller = function () {\n            for (var i in dl) if (dl.hasOwnProperty(i)) {\n                dl[i].cancel();\n            }\n        };\n        return ret;\n    };\n    \n    \n    Deferred.loop = function (n, fun) {\n        var o = {\n            begin : n.begin || 0,\n            end   : (typeof n.end == \"number\") ? n.end : n - 1,\n            step  : n.step  || 1,\n            last  : false,\n            prev  : null\n        };\n        var ret, step = o.step;\n        return Deferred.next(function () {\n            function _loop (i) {\n                if (i <= o.end) {\n                    if ((i + step) > o.end) {\n                        o.last = true;\n                        o.step = o.end - i + 1;\n                    }\n                    o.prev = ret;\n                    ret = fun.call(this, i, o);\n                    if (ret instanceof Deferred) {\n                        return ret.next(function (r) {\n                            ret = r;\n                            return Deferred.call(_loop, i + step);\n                        });\n                    } else {\n                        return Deferred.call(_loop, i + step);\n                    }\n                } else {\n                    return ret;\n                }\n            }\n            return (o.begin <= o.end) ? Deferred.call(_loop, o.begin) : null;\n        });\n    };\n    \n    \n    Deferred.repeat = function (n, fun) {\n        var i = 0, end = {}, ret = null;\n        return Deferred.next(function () {\n            var t = (new Date()).getTime();\n            divide: {\n                do {\n                    if (i >= n) break divide;\n                    ret = fun(i++);\n                } while ((new Date()).getTime() - t < 20);\n                return Deferred.call(arguments.callee);\n            }\n            return null;\n        });\n    };\n    \n    Deferred.register = function (name, fun) {\n        this.prototype[name] = function () {\n            var a = arguments;\n            return this.next(function () {\n                return fun.apply(this, a);\n            });\n        };\n    };\n    \n    Deferred.register(\"loop\", Deferred.loop);\n    Deferred.register(\"wait\", Deferred.wait);\n    \n    Deferred.connect = function (funo, options) {\n        var target, func, obj;\n        if (typeof arguments[1] == \"string\") {\n            target = arguments[0];\n            func   = target[arguments[1]];\n            obj    = arguments[2] || {};\n        } else {\n            func   = arguments[0];\n            obj    = arguments[1] || {};\n            target = obj.target;\n        }\n    \n        var partialArgs       = obj.args ? Array.prototype.slice.call(obj.args, 0) : [];\n        var callbackArgIndex  = isFinite(obj.ok) ? obj.ok : obj.args ? obj.args.length : undefined;\n        var errorbackArgIndex = obj.ng;\n    \n        return function () {\n            var d = new Deferred().next(function (args) {\n                var next = this._next.callback.ok;\n                this._next.callback.ok = function () {\n                    return next.apply(this, args.args);\n                };\n            });\n    \n            var args = partialArgs.concat(Array.prototype.slice.call(arguments, 0));\n            if (!(isFinite(callbackArgIndex) && callbackArgIndex !== null)) {\n                callbackArgIndex = args.length;\n            }\n            var callback = function () { d.call(new Deferred.Arguments(arguments)) };\n            args.splice(callbackArgIndex, 0, callback);\n            if (isFinite(errorbackArgIndex) && errorbackArgIndex !== null) {\n                var errorback = function () { d.fail(arguments) };\n                args.splice(errorbackArgIndex, 0, errorback);\n            }\n            Deferred.next(function () { func.apply(target, args) });\n            return d;\n        }\n    }\n    Deferred.Arguments = function (args) { this.args = Array.prototype.slice.call(args, 0) }\n    \n    Deferred.retry = function (retryCount, funcDeferred, options) {\n        if (!options) options = {};\n    \n        var wait = options.wait || 0;\n        var d = new Deferred();\n        var retry = function () {\n            var m = funcDeferred(retryCount);\n            m.\n                next(function (mes) {\n                    d.call(mes);\n                }).\n                error(function (e) {\n                    if (--retryCount <= 0) {\n                        d.fail(['retry failed', e]);\n                    } else {\n                        setTimeout(retry, wait * 1000);\n                    }\n                });\n        };\n        setTimeout(retry, 0);\n        return d;\n    }\n    \n    Deferred.methods = [\"parallel\", \"wait\", \"next\", \"call\", \"loop\", \"repeat\", \"chain\"];\n    Deferred.define = function (obj, list) {\n        if (!list) list = Deferred.methods;\n        if (!obj)  obj  = (function getGlobal () { return this })();\n        for (var i = 0; i < list.length; i++) {\n            var n = list[i];\n            obj[n] = Deferred[n];\n        }\n        return Deferred;\n    };\n    \n    \n    return Deferred;\n})();\n\n\n} // if (typeof(Ten) == undefined)\n/*\n// require Ten.js\n*/\n\n/* Ten.SubWindow */\nTen.SubWindow = new Ten.Class({\n    initialize: function(args) {\n        var c = this.constructor;\n        if (c.singleton && c._cache) {\n            return c._cache;\n        }\n        if (args) {\n            for (var k in args) {\n                this[k] = args[k];\n            }\n        }\n        var div = document.createElement('div');\n        Ten.Style.applyStyle(div, Ten.SubWindow._baseStyle);\n        Ten.Style.applyStyle(div, c.style);\n        this.window = div;\n        this.addContainerAndCloseButton();\n        document.body.appendChild(div);\n        if (c.draggable) {\n            this._draggable = new Ten.Draggable(div, this.handle);\n        }\n        if (c.singleton) c._cache = this;\n        return this;\n    },\n    _baseStyle: {\n        color: '#000',\n        position: 'absolute',\n        display: 'none',\n        zIndex: 10002,\n        left: 0,\n        top: 0,\n        backgroundColor: '#fff',\n        border: '1px solid #bbb'\n    },\n    style: {\n        padding: '2px',\n        textAlign: 'center',\n        borderRadius: '6px',\n        MozBorderRadius: '6px',\n        width: '100px',\n        height: '100px'\n    },\n    handleStyle: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        backgroundColor: '#f3f3f3',\n        borderBottom: '1px solid #bbb',\n        width: '100%',\n        height: '30px'\n    },\n    containerStyle: {\n        margin: '32px 0 0 0',\n        padding: '0 10px'\n    },\n    // closeButton: 'close.gif',\n    closeButton: 'http://s.hatena.com/images/close.gif',\n    closeButtonStyle: {\n        position: 'absolute',\n        top: '8px',\n        right: '10px',\n        cursor: 'pointer'\n    },\n    _baseScreenStyle: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        display: 'none',\n        zIndex: 10001,\n        overflow: 'hidden',\n        width: '100%',\n        height: '100%'\n    },\n    screenStyle: {},\n    showScreen: true,\n    singleton: true,\n    draggable: true,\n    _cache: null\n},{\n    screen: null,\n    windowObserver: null,\n    visible: false,\n    addContainerAndCloseButton: function() {\n        var win = this.window;\n        var c = this.constructor;\n        var div = document.createElement('div');\n        win.appendChild(div);\n        Ten.Style.applyStyle(div, c.containerStyle);\n        this.container = div;\n        if (c.handleStyle) {\n            var handle = document.createElement('div');\n            Ten.Style.applyStyle(handle, c.handleStyle);\n            win.appendChild(handle);\n            this.handle = handle;\n        }\n        if (c.closeButton) {\n\t    var btn = document.createElement('img');\n            btn.src = c.closeButton;\n            btn.alt = 'close';\n            Ten.Style.applyStyle(btn, c.closeButtonStyle);\n            win.appendChild(btn);\n            new Ten.Observer(btn, 'onclick', this, 'hide');\n            this.closeButton = btn;\n        }\n        if (c.showScreen) {\n            var screen = document.createElement('div');\n            Ten.Style.applyStyle(screen, Ten.SubWindow._baseScreenStyle);\n            Ten.Style.applyStyle(screen, c.screenStyle);\n            document.body.appendChild(screen);\n            this.screen = screen;\n            new Ten.Observer(screen, 'onclick', this, 'hide');\n        }\n    },\n    show: function(pos) {\n        pos = (pos.x && pos.y) ? pos : {x:0, y:0};\n        var s = this.window.style;\n        s.display = 'block';\n        s.left = pos.x + 'px';\n        s.top = pos.y + 'px';\n        if (this.screen) {\n            var ss = this.screen.style;\n            ss.display = 'block';\n            ss.left = Ten.Geometry.getScroll().x + 'px';\n            ss.top = Ten.Geometry.getScroll().y + 'px';\n        }\n        this.windowObserver = new Ten.Observer(document.body, 'onkeypress', this, 'handleEscape');\n        this.visible = true;\n    },\n    handleEscape: function(e) {\n        if (!e.isKey('escape')) return;\n        this.hide();\n        e.stop();\n    },\n    hide: function() {\n        if (this._draggable) this._draggable.endDrag();\n        this.window.style.display = 'none';\n        if (this.screen) this.screen.style.display = 'none';\n        if (this.windowObserver) this.windowObserver.stop();\n        this.visible = false;\n        this.window.blur();\n    }\n});\n\n/* Ten.Draggable */\nTen.Draggable = new Ten.Class({\n    initialize: function(element,handle) {\n        this.element = element;\n        this.handle = handle || element;\n        this.startObserver = new Ten.Observer(this.handle, 'onmousedown', this, 'startDrag');\n        this.handlers = [];\n    }\n},{\n    startDrag: function(e) {\n        if (e.targetIsFormElements()) return;\n        this.delta = Ten.Position.subtract(\n            e.mousePosition(),\n            Ten.Geometry.getElementPosition(this.element)\n        );\n        this.handlers = [\n            new Ten.Observer(document, 'onmousemove', this, 'drag'),\n            new Ten.Observer(document, 'onmouseup', this, 'endDrag'),\n            new Ten.Observer(this.element, 'onlosecapture', this, 'endDrag')\n        ];\n        e.stop();\n    },\n    drag: function(e) {\n        var pos = Ten.Position.subtract(e.mousePosition(), this.delta);\n        Ten.Style.applyStyle(this.element, {\n            left: pos.x + 'px',\n            top: pos.y + 'px'\n        });\n        e.stop();\n    },\n    endDrag: function(e) {\n        for (var i = 0; i < this.handlers.length; i++) {\n            this.handlers[i].stop();\n        }\n        if(e) e.stop();\n    }\n});\n/*\n// require Ten.js\n*/\n\n/* Ten.Highlight */\nTen.Highlight = new Ten.Class({\n    initialize: function(quote) {\n        if (!quote) return;\n        this.quote = quote;\n        var c = this.constructor;\n        if (!c._cache) c._cache = {};\n        if (c._cache[quote]) return c._cache[quote];\n        c._cache[quote] = this;\n        c.makeTextNodes(c);\n    },\n    makeTextNodes: function(c) {\n        if (c.textNodes || c.textNodePositions || c.documentText) return;\n        if (Ten.Highlight.highlighted) Ten.Highlight.highlighted.hide();\n        c.textNodes = [];\n        c.textNodePositions = [];\n        var isIE = navigator.userAgent.indexOf('MSIE') != -1;\n        var texts = [];\n        var pos = 0;\n        (function(node, parent) {\n            if (isIE && parent && parent != node.parentNode) return;\n            if (node.nodeType == 3) {\n                c.textNodes.push(node);\n                texts.push(node.nodeValue);\n                c.textNodePositions.push(pos);\n                pos += node.nodeValue.length;\n            } else {\n                var childNodes = node.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                    arguments.callee(childNodes[i], node);\n                }\n            }\n        })(document.body);\n        c.documentText = texts.join('');\n        c.loaded = true;\n    },\n    loaded: false,\n    bgColors: null,\n    textNodes: null,\n    textNodePositions: null,\n    documentText: null,\n    highlighted: null,\n    _cache: null,\n    _lock: {},\n    Color: new Ten.Color(255,255,0,0.4),\n    ClassName: null\n},{\n    makeMatchedNodes: function() {\n        if (this.matchedNodes) return;\n        var matched = {};\n        var c = this.constructor;\n        var quote = this.quote;\n        var nodes = c.textNodes, positions = c.textNodePositions, text = c.documentText;\n        var i = 0;\n        for (var start = text.indexOf(quote); start != -1;\n             start = text.indexOf(quote, start + quote.length)) {\n             var end = start + quote.length - 1;\n             for (; i < positions.length; i++) {\n                 if (end < positions[i]) {\n                     break;\n                 }\n                 var last = positions[i+1] ? positions[i+1] - 1\n                     : c.documentText.length;\n                 if (last < start) {\n                     continue;\n                 } else if (start <= last) {\n                     if (!matched[i]) matched[i] = {ranges: []};\n                     var range = [];\n                     range[0] = start - positions[i];\n                     range[1] = end < last ? end - positions[i] + 1\n                         : last - positions[i] + 1;\n                     matched[i].ranges.push(range);\n                 }\n             }\n             i--;\n        }\n        this.matchedNodes = matched;\n    },\n    show: function() {\n        var c = this.constructor;\n        if (!c.loaded) return;\n        this.makeMatchedNodes();\n        var matched = this.matchedNodes;\n        if (!matched) return;\n        if (Ten.Highlight.highlighted) Ten.Highlight.highlighted.hide();\n        var nodes = c.textNodes;\n        if (!this.containers) this.containers = {};\n        var containers = this.containers;\n        for (var i in matched) {\n            if (!i.match(/^\\d+$/)) continue;\n            if (!this.containers[i]) {\n                var node = nodes[i];\n                if (!node) continue;\n                var text = nodes[i].nodeValue;\n                var container = document.createElement('span');\n                container.style.padding = '0';\n                container.style.margin = '0';\n                var pos = 0;\n                var ranges = matched[i].ranges;\n                for (var j = 0; j < ranges.length; j++) {\n                    var range = ranges[j];\n                    if (pos < range[0]) {\n                        container.appendChild(document.createTextNode(text.substring(pos,range[0])));\n                    }\n                    var span = this.createSpan(i);\n                    if (!span) continue;\n                    span.appendChild(document.createTextNode(text.substring(range[0],range[1])));\n                    container.appendChild(span);\n                    pos = range[1];\n                }\n                if (pos < text.length) container.appendChild(document.createTextNode(text.substring(pos)));\n                this.containers[i] = container;\n            }\n            this.replaceNode(i,true);\n        }\n        Ten.Highlight.highlighted = this;\n    },\n    createSpan: function(i) {\n        var c = this.constructor;\n        if (!c.bgColors) c.bgColors = {};\n        if (!c.bgColors[i]) {\n            if (!c.textNodes[i]) return;\n            var node = c.textNodes[i].parentNode;\n            var back = Ten.Color.parseFromElementColor(node,'backgroundColor')\n                || new Ten.Color(255,255,255);\n            c.bgColors[i] = back.overlay(c.Color).asHexString();\n        }\n        var span = document.createElement('span');\n        span.style.backgroundColor = c.bgColors[i];\n        if (c.ClassName) span.className = c.ClassName;\n        return span;\n    },\n    hide: function() {\n        var matched = this.matchedNodes;\n        if (!matched) return;\n        Ten.Highlight.highlighted = null;\n        var c = this.constructor;\n        for (var i in matched) {\n            if (!i.match(/^\\d+$/)) continue;\n            this.replaceNode(i,false);\n        }\n    },\n    replaceNode: function(i, show) {\n        var c = this.constructor;\n        if (c._lock[i]) return;\n        if (c.textNodes[i].parentNode && c.textNodes[i].parentNode.tagName.toLowerCase() == 'textarea') {\n            return;\n        }\n        c._lock[i] = true;\n        var newNode, oldNode;\n        if (show) {\n            newNode = this.containers[i], oldNode = c.textNodes[i];\n        } else {\n            newNode = c.textNodes[i], oldNode = this.containers[i];\n        }\n        if (newNode) Ten.DOM.replaceNode(newNode, oldNode);        \n        c._lock[i] = false;\n    },\n    containers: null,\n    matchedNodes: null\n});\n/*\n// require Ten.js\n*/\n\n/* Hatena */\nif (typeof(Hatena) == 'undefined') {\n    Hatena = {};\n}\n\n/* Hatena.User */\nHatena.User = new Ten.Class({\n    initialize: function(args) {\n        if (typeof(args) == 'string') {\n            this.name = args;\n        } else {\n            for (var key in args) {\n                this[key] = args[key];\n            }\n        }\n    },\n    getProfileIcon: function(name) {\n        if (!name) name = 'user';\n        var pre = name.match(/^[\\w-]{2}/)[0];\n        var img = document.createElement('img');\n        img.src = 'http://www.hatena.ne.jp/users/' + pre + '/' + name + '/profile_s.gif';\n        img.setAttribute('alt', name);\n        img.setAttribute('title', name);\n        img.setAttribute('width','16px');\n        img.setAttribute('height','16px');\n        img.className =  'profile-icon';\n        with (img.style) {\n            margin = '0 3px';\n            border = 'none';\n            verticalAlign = 'middle';\n        }\n        return img;\n    }\n}, {\n    profileIcon: function() {\n        return Hatena.User.getProfileIcon(this.name);\n    }\n});\n/*\n// require Ten.js\n// require Ten/SubWindow.js\n// require Ten/Highlight.js\n// require Hatena.js\n*/\n\n/* Hatena.Star */\nif (typeof(Hatena.Star) == 'undefined') {\n    Hatena.Star = {};\n}\nHatena.Star.VERSION = 1.95;\n\n/*\n// Hatena.Star.* classes //\n*/\nHatena.Star.BaseURL = 'http://s.hatena.ne.jp/';\nif (!Hatena.Star.BaseURLProtocol) {\n    Hatena.Star.BaseURLProtocol = ( location.protocol === \"http:\" ? \"http:\" : \"https:\" );\n}\nHatena.Star.PortalURL = 'http://www.hatena.ne.jp/';\nHatena.Star.UgoMemoURL = 'http://ugomemo.hatena.ne.jp/';\nHatena.Star.HaikuURL   = 'http://h.hatena.ne.jp/';\nHatena.Star.HatenaHostRegexp = /(\\.hatena\\.ne\\.jp|\\.hatelabo.jp|\\.hatena\\.com)$/;\nHatena.Star.Token = null;\nHatena.Star.UseAnimation = false;\n\nHatena.Star.isTouchUA = Ten.Browser.isTouch || Ten.Browser.isIPad;\n\n// ---- user setting ----\nHatena.Star.Config = {\n    isColorPalletAvailable: true,\n    isStarDeletable: true,\n    isCommentButtonAvailable: true\n}\n\nHatena.Star.Delayed = new Ten.Class({\n    initialize: function () {\n        this.waiting = [];\n    }\n}, {\n    isReady : false,\n    ready : function (value) {\n        this.value = value;\n        while (this.waiting.length) {\n            this.waiting.shift()(value);\n        }\n        this.isReady = true;\n    },\n    required : function (fun) {\n        var self = this;\n        if (typeof(this.value) == \"undefined\") {\n            this.waiting.push(fun);\n        } else {\n            fun(this.value);\n        }\n    }\n});\n\n/* Hatena.Star.User */\nHatena.Star.User = new Ten.Class({\n    base: [Hatena.User],\n    initialize: function(name) {\n        if (Hatena.Star.User._cache[name]) {\n            return Hatena.Star.User._cache[name];\n        } else {\n            this.name = name;\n            Hatena.Star.User._cache[name] = this;\n            return this;\n        }\n    },\n    profileIconType: 'icon',\n    getProfileIcon: function(name,src) {\n        if (!name) name = 'user';\n        var img = document.createElement('img');\n        if (src) {\n            img.src = src;\n        } else {\n            if (this.profileIconType == 'icon' &&\n                !/\\@/.test(name)) {\n                var pre = name.match(/^[\\w-]{2}/)[0];\n                var pp = pre + '/' + name + '/profile_s.gif';\n                if ( location.protocol == 'https:' ) {\n                    img.src = 'https://www.hatena.com/users/' + pp;\n                } else {\n                    img.src = 'http://cdn1.www.st-hatena.com/users/' + pp;\n                }\n            } else {\n                img.src = 'http://n.hatena.com/' + name + '/profile/image?size=16&type=' + encodeURIComponent(this.profileIconType);\n            }\n        }\n        img.setAttribute('alt', name);\n        img.setAttribute('title', name);\n        img.setAttribute('width','16px');\n        img.setAttribute('height','16px');\n        img.className =  'profile-icon';\n        var s = img.style;\n        s.margin = '0 3px';\n        s.border = 'none';\n        s.verticalAlign = 'middle';\n        s.width = '16px';\n        s.height = '16px';\n        return img;\n    },\n    RKS : new Hatena.Star.Delayed(),\n    _cache: {},\n    _nicknames: {},\n    useHatenaUserNickname: false,\n    withNickname: function (urlName, nextCode) {\n        var cached = urlName ? Hatena.Star.User._nicknames[urlName] : null;\n        if (!urlName) {\n            cached = null;\n        } else if (!Hatena.Star.User.useHatenaUserNickname &&\n                   urlName &&\n                   !/\\@/.test(urlName)) {\n            cached = urlName;\n        }\n        if (cached !== undefined) {\n            setTimeout(function () {\n                nextCode.apply(Hatena.Star.User, [cached]);\n            }, 10);\n            return;\n        }\n        this._getNickname(urlName, nextCode);\n    },\n    _getNicknames: {},\n    _getNickname: function (urlName, nextCode) {\n      this._getNicknames[urlName] = this._getNicknames[urlName] || [];\n      this._getNicknames[urlName].push(nextCode);\n      clearTimeout(this._getNicknameTimer);\n      this._getNicknameTimer = setTimeout(function () {\n        var names = Hatena.Star.User._getNicknames;\n        Hatena.Star.User._getNicknames = {};\n        var url = 'http://h1beta.hatena.com/api/friendships/show.json?url_name=sample';\n        for (var n in names) {\n          url += '&url_name=' + encodeURIComponent(n);\n        }\n        new Ten.JSONP(url, function (users) {\n          for (var n in users) {\n            var user = users[n];\n            var codes = names[n] || [];\n            for (var i = 0; i < codes.length; i++) {\n              Hatena.Star.User._nicknames[n] = user.name || null;\n              var nickname = user.name;\n              if (nickname) nickname += ' (id:' + n + ')';\n              codes[i].apply(Hatena.Star.User, [nickname]);\n            }\n          }\n        });\n      }, 500);\n    }\n},{\n    userPage: function() {\n        var hostname = location.hostname || '';\n        if (this.name.match(/@(.*)/)) {\n            if (RegExp.$1 == \"DSi\") {\n                return Hatena.Star.PortalURL + this.name + '/';\n            } else if (RegExp.$1 == \"facebook\") {\n                return Hatena.Star.HaikuURL + this.name + '/';\n            } else {\n                return Hatena.Star.BaseURL + this.name + '/';\n            }\n        } else {\n            if (Hatena.Star.HatenaHostRegexp.test(hostname)) {\n                return 'http://' + location.host + '/' + this.name + '/';\n            } else {\n                return Hatena.Star.PortalURL + this.name + '/';\n            }\n        }\n    }\n});\n\n/* Hatena.Star.Entry */\nHatena.Star.Entry = new Ten.Class({\n    initialize: function(e) {\n        this.entry = e;\n        this.uri = e.uri;\n        this.title = e.title;\n        this.star_container = e.star_container;\n        this.comment_container = e.comment_container;\n        this.entryNode = e.entryNode;\n        this.stars = [];\n        this.colored_stars = [];\n        this.comments = [];\n        this._hasBoundToStarEntry = false;\n    },\n    maxStarCount: 11\n},{\n    flushStars: function() {\n        this.stars = [];\n        this.star_container.innerHTML = '';\n    },\n    hasBoundToStarEntry: function () {\n        return this._hasBoundToStarEntry;\n    },\n    bindStarEntry: function(se) {\n        this._hasBoundToStarEntry = true;\n        if (se.colored_stars) {\n            var colored_star_hash = {};\n            for (var i = 0, len = se.colored_stars.length; i < len ; i++){\n                colored_star_hash[se.colored_stars[i].color] = se.colored_stars[i].stars;\n            }\n            var cs = [ \"purple\", \"blue\", \"red\", \"green\" ];\n            for (var i = 0, len = cs.length; i < len ; i++){\n                var csh = colored_star_hash[cs[i]];\n                if (csh) this.pushStars(csh,cs[i]);\n            }\n        }\n        this.pushStars(se.stars);\n        if (se.comments && !this.comments.length) {\n            for (var i = 0; i < se.comments.length; i++) {\n                this.comments.push(new Hatena.Star.Comment(se.comments[i]));\n            }\n        }\n        this.can_comment = se.can_comment;\n    },\n    pushStars: function(s,c) {\n        for (var i = 0; i < s.length; i++) {\n            if (typeof(s[i]) == 'number') {\n                this.stars.push(new Hatena.Star.InnerCount(s[i],this,c));\n            } else if(s[i]) {\n                var args = s[i];\n                args.entry = this.entry;\n                args.container = this.star_container;\n                args.color = c;\n                this.stars.push(new Hatena.Star.Star(args));\n            }\n        }\n    },\n    setCanComment: function(v) {\n        this.can_comment = v;\n    },\n    showButtons: function() {\n        this.addAddButton();\n        this.addCommentButton();\n    },\n    addAddButton: function() {\n        var addButtonClass =\n            this.constructor.AddButtonClass || (\n                (Hatena.Star.useSmartPhoneStar && Hatena.Star.isTouchUA)\n                    ? Hatena.Star.AddButton.SmartPhone\n                    : Hatena.Star.AddButton\n            );\n\n        var sc = this.star_container;\n        if (sc) {\n            this.addButton = new addButtonClass(this,sc);\n            sc.appendChild(this.addButton);\n        }\n    },\n    addCommentButton: function() {\n        var cc = this.comment_container;\n        if (cc) {\n            this.commentButton = new Hatena.Star.CommentButton(this,cc);\n            cc.appendChild(this.commentButton.img);\n        }\n    },\n    showStars: function() {\n        var sc = this.star_container;\n        for (var i = 0; i < this.stars.length; i++) {\n            sc.appendChild(this.stars[i].asElement());\n        }\n    },\n    showCommentButton: function() {\n        if ( this.can_comment && Hatena.Star.Config.isCommentButtonAvailable ) {\n            this.commentButton.show();\n            if (this.comments.length) this.commentButton.activate();\n        } else {\n            // this.commentButton.hide();\n        }\n    },\n    addTemporaryStar: function(args) {\n        if (!this.temporaryStars) this.temporaryStars = [];\n        var star = new Hatena.Star.Star({\n            color: 'temp',\n            name: '',\n            entry: this,\n            container: this.star_container\n        }).asElement();\n        this.temporaryStars.push(star);\n        this.star_container.appendChild(star);\n    },\n    removeTemporaryStar: function() {\n        if (this.temporaryStars) {\n            var star = this.temporaryStars.shift();\n            if (star) this.star_container.removeChild(star);\n            return star;\n        }\n        return null;\n    },\n    addStar: function(args) {\n        var star = new Hatena.Star.Star({\n            color: args.color,\n            name: args.name,\n            quote: args.quote,\n            entry: this,\n            container: this.star_container\n        });\n        this.stars.push(star);\n        if (this.temporaryStars && this.temporaryStars.length) {\n            this.star_container.insertBefore(star.asElement(), this.temporaryStars[0]);\n        } else {\n            this.star_container.appendChild(star.asElement());\n        }\n        this.constructor.dispatchEvent('starAdded', this);\n    },\n    addComment: function(com) {\n        if (!this.comments) this.comments = [];\n        if (this.comments.length == 0) {\n            this.commentButton.activate();\n        }\n        this.comments.push(com);\n    },\n    showCommentCount: function() {\n        this.comment_container.innerHTML += this.comments.length;\n    }\n});\nTen.EventDispatcher.implementEventDispatcher(Hatena.Star.Entry);\n\n/* Hatena.Star.Button */\nHatena.Star.Button = new Ten.Class({\n    createButton: function(args) {\n        var img = document.createElement('img');\n        for (var attr in args) {\n            img.setAttribute(attr, args[attr]);\n        }\n        var s = img.style;\n        s.cursor = 'pointer';\n        s.margin = '0 3px';\n        s.padding = '0';\n        s.border = 'none';\n        s.verticalAlign = 'middle';\n        return img;\n    },\n    getImgSrc: function(c,container) {\n        var sel = c.ImgSrcSelector;\n        if (container) {\n            var cname = sel.replace(/\\./,'');\n            var span = new Ten.Element('span',{\n                className: cname\n            });\n            container.appendChild(span);\n            var bgimage = Ten.Style.getElementStyle(span,'backgroundImage');\n            container.removeChild(span);\n            if (bgimage) {\n                var url = Ten.Style.scrapeURL(bgimage);\n                if (url) return url;\n            }\n        }\n        if (sel) {\n            var prop = Ten.Style.getGlobalStyle(sel,'backgroundImage');\n            if (prop) {\n                var url = Ten.Style.scrapeURL(prop);\n                if (url) return url;\n            }\n        }\n        return c.ImgSrc;\n    }\n});\n\n/* Hatena.Star.AddButton */\nHatena.Star.AddButton = new Ten.Class({\n    base: [Hatena.Star.Button],\n    initialize: function(entry,container) {\n        this.entry = entry;\n        this.lastPosition = null;\n        this.selectedText = null;\n        this.showSelectedColorTimerId = null;\n        this.hideSelectedColorTimerId = null;\n        var src = Hatena.Star.Button.getImgSrc(this.constructor,container);\n        var img = this.constructor.createButton({\n            src: src,\n            tabIndex: 0,\n            alt: 'Add Star',\n            title: 'Add Star'\n        });\n        if (!img.className) {\n            img.className = 'hatena-star-add-button';\n        }\n        this.img = img;\n        this.setupObservers();\n        return img;\n    },\n    ImgSrcSelector: '.hatena-star-add-button-image',\n    ImgSrc: Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/add.gif',\n    AddStarPath: 'star.add.json'\n},{\n    setupObservers: function () {\n        new Ten.Observer(this.img,'onclick',this,'addStar');\n        new Ten.Observer(this.img,'onkeyup',this,'handleKeyUp');\n        new Ten.Observer(this.img,'onmouseover',this,'copySelectedText');\n        if ( Hatena.Star.Config.isColorPalletAvailable ) {\n            new Ten.Observer(this.img,'onclick',this,'hideColorPallet');\n            new Ten.Observer(this.img,'onmouseover',this,'showColorPalletDelay');\n//          new Ten.Observer(this.img,'onmouseover',this,'showSelectedColor');\n//          new Ten.Observer(this.img,'onmouseout',this,'hideSelectedColor');\n            new Ten.Observer(this.img,'onmouseout',this,'clearSelectedColorTimer');\n        }\n    },\n    handleKeyUp: function(e) {\n        if (!e.isKey('enter')) return;\n        this.addStar(e);\n    },\n    clearSelectedColorTimer : function() {\n        try{ clearTimeout(this.showSelectedColorTimerId); }catch(e){};\n        try{ clearTimeout(this.hideSelectedColorTimerId); }catch(e){};\n    },\n    showSelectedColor : function(e) {\n        var self = this;\n        this.clearSelectedColorTimer();\n        this.showSelectedColorTimerId = setTimeout(function(){\n            //if (!self.pallet || (self.pallet && self.pallet.isColorPallet()) ) self._showSelectedColor();\n            self._showSelectedColor();\n        },300);\n    },\n    _showSelectedColor : function(e) {\n        if (this.pallet) {\n        } else {\n            this.pallet = new Hatena.Star.Pallet();\n        }\n        if (this.pallet.isNowLoading) return;\n        var pos = Ten.Geometry.getElementPosition(this.img);\n        if (Ten.Browser.isFirefox || Ten.Browser.isOpera) {\n            pos.y += 15;\n            pos.x += 2;\n        } else {\n            pos.y += 13;\n        }\n        this.pallet.showSelectedColor(pos, this);\n    },\n    hideColorPallet : function(e) {\n        try {\n            this.pallet.hide();\n        } catch(e) {}\n    },\n    hideSelectedColor : function(e) {\n        var self = this;\n        this.clearSelectedColorTimer();\n        this.hideSelectedColorTimerId = setTimeout(function(){\n            if (self.pallet.isSelectedColor) {\n                //if (!self.pallet || (self.pallet && self.pallet.isSelectedColor()) ) self._showSelectedColor();\n                self.pallet.hide();\n            }\n        },2000);\n    },\n    showColorPalletDelay : function(e) {\n        var self = this;\n        this.clearSelectedColorTimer();\n        this.showSelectedColorTimerId = setTimeout(function(){\n            //if (!self.pallet || (self.pallet && self.pallet.isColorPallet()) ) self._showSelectedColor();\n            self.showColorPallet();\n        },800);\n    },\n    showColorPallet : function(e) {\n        this.clearSelectedColorTimer();\n        if (!this.pallet) this.pallet = new Hatena.Star.Pallet();\n        var pos = Ten.Geometry.getElementPosition(this.img);\n        if (Ten.Browser.isFirefox || Ten.Browser.isOpera) {\n            pos.y += 15;\n            pos.x += 2;\n        } else {\n            pos.y += 13;\n        }\n        this.pallet.showPallet(pos, this);\n    },\n    copySelectedText: function(e) {\n        try {\n        this.selectedText = Ten.DOM.getSelectedText().substr(0,200);\n        } catch (e) {  }\n    },\n    addStar: function(e) {\n        this.clearSelectedColorTimer();\n        this.color = (this.color) ? this.color : 'yellow';\n        this.entry.addTemporaryStar({color: this.color});\n        this.lastPosition = e.mousePosition();\n        var quote = this.selectedText || '';\n        var uri = Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + this.constructor.AddStarPath + '?uri=' + encodeURIComponent(this.entry.uri) +\n            '&title=' + encodeURIComponent(this.entry.title) +\n            '&quote=' + encodeURIComponent(quote) +\n            '&location=' + encodeURIComponent(document.location.href);\n        if (Hatena.Star.Token) {\n            uri += '&token=' + Hatena.Star.Token;\n        }\n\n        if (Hatena.Visitor) {\n            if (Hatena.Visitor.RKS) {\n                Hatena.Star.User.RKS.ready(Hatena.Visitor.RKS);\n            }\n            if (Hatena.Visitor.sessionParams) {\n                var params = Hatena.Visitor.sessionParams;\n                for (var key in params) {\n                    uri += '&' + key + '=' + encodeURIComponent(params[key]);\n                }\n            }\n        }\n\n        var self = this;\n        Hatena.Star.User.RKS.required(function (rks) {\n            uri += '&rks=' + rks;\n            new Ten.JSONP(uri, self, 'receiveResult');\n        });\n    },\n    receiveResult: function(args) {\n        this.entry.removeTemporaryStar();\n        var name = args ? args.name : null;\n        var color = args ? args.color : '';\n        var pos = this.lastPosition;\n        pos = (pos) ? pos : Ten.Geometry.getElementPosition(this.img);\n        pos.x -= 10;\n        pos.y += 25;\n        if (name) {\n            this.entry.addStar({\n                color: color,\n                name: name,\n                quote: args.quote\n            });\n            //alert('Succeeded in Adding Star ' + args);\n        } else if (args.is_guest && args.html) {\n            var win = new Hatena.LoginWindow();\n            win.addLoginForm(args.html);\n            win.show(pos);\n        } else if (args.errors) {\n            var scroll = Ten.Geometry.getScroll();\n            var scr = new Hatena.Star.AlertScreen();\n            var alert = args.errors[0];\n            scr.showAlert(alert, pos);\n        }\n    }\n});\n\n/* Hatena.Star.Pallet */\nHatena.Star.Pallet = new Ten.Class({\n    base: [Ten.SubWindow],\n    style: {\n        padding: '0px',\n        textAlign: 'center',\n        border: '0px'\n    },\n    containerStyle: {\n        textAlign: 'left',\n        margin: 0,\n        padding: 0\n    },\n    handleStyle: null,\n    showScreen: false,\n    closeButton: null,\n    draggable: false,\n    SELECTED_COLOR_ELEMENT_ID: 'hatena-star-selected-color',\n    PALLET_ELEMENT_ID: 'hatena-star-color-pallet',\n    PALLET_PATH: 'colorpalette',\n    PALLET_STYLE: 'width:16px;height:51px;overflow:hidden;'\n},{\n    isSelectedColor : function() {\n        return (this.container && this.container.getElementById && this.container.getElementById(Hatena.Star.Pallet.SELECTED_COLOR_ELEMENT_ID)) ? true : false;\n    },\n    isColorPallet : function() {\n        return (this.container && this.container.getElenentById && this.container.getElementById(Hatena.Star.Pallet.PALLET_ELEMENT_ID)) ? true : false;\n    },\n    showSelectedColor: function(pos, addButton) {\n        this.hide();\n        this.container.innerHTML = '';\n        if (addButton) this.addButton = addButton;\n        if (pos) this.selected_color_pos = pos;\n        var iframeStyle;\n        if (Ten.Browser.isIE) iframeStyle = \"width:16px;height:5px;border:1px solid #bbbbbb;\";\n        else iframeStyle = \"width:14px;height:3px;border:1px solid #bbbbbb;\";\n        this.container.innerHTML = '<iframe id=\"' + Hatena.Star.Pallet.SELECTED_COLOR_ELEMENT_ID + '\" src=\"' + \n        Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'colorpalette.selected_color?uri=' + encodeURIComponent(this.addButton.entry.uri) +\n            '\" frameborder=\"0\" border=\"0\" scrolling=\"no\" style=\"' + iframeStyle + 'position:absolute;margin:0;padding:0;overflow:hidden;\"/>';\n        var clickhandlerStyle = {\n            position: \"absolute\",\n            top: \"0px\",\n            left: \"0px\",\n            width: \"16px\",\n            height: \"5px\",\n            margin: \"0\",\n            padding: \"0\",\n            display: \"block\",\n            cursor: \"pointer\"\n        }; \n        var E = Ten.Element;\n        var div = E('div',{\n                title : 'select color',\n                alt   : 'select color',\n                style : clickhandlerStyle\n            });\n        this.container.appendChild(div);\n        this.selectedColor =this.container.childNodes[0];\n        this.isNowLoading = true;\n        new Ten.Observer(this.selectedColor,'onload',this , 'showSelectedColorDelay');\n        new Ten.Observer(this.container.childNodes[1],'onclick',this.addButton,'showColorPallet');\n        //this.show(this.selected_color_pos);\n    },\n    showSelectedColorDelay: function() {\n        this.show(this.selected_color_pos);\n        this.isNowLoading = false;\n        this.screen.style.display = 'none';\n    },\n    getPalletFrameURL: function () {\n        return Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + this.constructor.PALLET_PATH + '?uri=' + encodeURIComponent(this.addButton.entry.uri) + '&location=' + encodeURIComponent(document.location.href);\n    },\n    showPallet: function(pos, addButton) {\n        this.hide();\n        this.container.innerHTML = '';\n        if (addButton) this.addButton = addButton;\n        if (pos) this.pallet_pos = pos;\n        this.addButton.clearSelectedColorTimer();\n        this.container.innerHTML = '<iframe id=\"' + Hatena.Star.Pallet.PALLET_ELEMENT_ID + '\" src=\"' + this.getPalletFrameURL() + '\" frameborder=\"0\" border=\"0\" scrolling=\"no\" style=\"' + this.constructor.PALLET_STYLE +'\"/>';\n        this.pallet =this.container.childNodes[0];\n        this.isNowLoading = true;\n        this._pallet_onloaded = 0;\n        new Ten.Observer(this.pallet,'onload',this , 'observerSelectColor');\n//        new Ten.Observer(this.pallet,'onmouseout',this , 'hidePallet');\n//        this.show(this.pallet_pos);\n    },\n    hidePallet: function() {\n        var self = this;\n        setTimeout(function() {\n            if( self.isColorPallet) self.showSelectedColor();\n        },2000);\n    },\n    selectColor: function(e){\n        this.addButton.color = e.target.className.split('-')[2];\n        this.showSelectedColor();\n//        this.hide();\n    },\n    observerSelectedColor: function(){\n        this.show(this.pallet_pos);\n    },\n    observerSelectColor: function(e){\n        this._pallet_onloaded = (this._pallet_onloaded) ? this._pallet_onloaded : 0;\n        this._pallet_onloaded ++;\n        if (this._pallet_onloaded == 1){\n            this.show(this.pallet_pos);\n            this.isNowLoading = false;\n        } else if (this._pallet_onloaded > 1) {\n            this._pallet_onloaded = 0;\n            this.hide();\n            this.addButton.addStar(e);\n            this._pallet_onloaded = 0;\n//            this.hide();\n//            this.showSelectedColor();\n//            this.isNowLoading = true;\n//            this.addButton.hideSelectedColor();\n        }\n    }\n});\n\n/* Hatena.Star.AddButton.SmartPhone */\nHatena.Star.AddButton.SmartPhone = new Ten.Class({\n    base: [Hatena.Star.AddButton],\n    AddStarPath: 'star.add_multi.json',\n    createButton: function (args) {\n        var a = document.createElement('a');\n        var img = this.SUPER.createButton(args);\n        img.className = 'hatena-star-add-button';\n        a.className = 'hatena-star-add-button-link-smartphone';\n        a.href = 'javascript:void(0)';\n        a.appendChild(img);\n        return a;\n    }\n}, {\n    setupObservers: function () {\n        if ( Hatena.Star.Config.isColorPalletAvailable ) {\n            new Ten.Observer(this.img, 'onclick', this, 'showColorPallet');\n            //new Ten.Observer(this.img, 'onclick', this, 'hideColorPallet');\n        }\n    },\n    receiveResult: function (args) {\n        if (args.silent_error) {\n            this.entry.removeTemporaryStar();\n            return;\n        }\n\n        if (args.stars instanceof Array) {\n            this.entry.removeTemporaryStar();\n            var stars = args.stars;\n            for (var i = 0, len = stars.length; i < len; i++) {\n                var star = stars[i];\n                for (var j = 0; j < (star.count || 1); j++) {\n                    this.entry.addStar({\n                        color: star.color,\n                        name:  star.name,\n                        quote: star.quote\n                    });\n                }\n            }\n        } else {\n            this.constructor.SUPER.prototype.receiveResult.apply(this, arguments);\n        }\n    },\n    showColorPallet: function (e) {\n        this.clearSelectedColorTimer();\n\n        if (!this.pallet) {\n            this.pallet = new Hatena.Star.Pallet.SmartPhone();\n        }\n\n        var pos = Ten.Geometry.getElementPosition(this.img);\n        pos.x = Ten.Browser.isDSi ? 5 : 15;\n        pos.y += 18;\n        this.pallet.showPallet(pos, this);\n        this.pallet.show(Hatena.Star.UseAnimation ? { x: 0, y: 0 } : pos);\n    },\n    getPalletFrameURL: function () {\n        return Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + this.constructor.PALLET_PATH + '?uri=' + encodeURIComponent(this.addButton.entry.uri) + '&location=' + encodeURIComponent(document.location.href) + '&colorscheme=' + this.constructor.getColorScheme();\n    }\n});\n\n/* Hatena.Star.Pallet.SmartPhone */\nHatena.Star.Pallet.SmartPhone_BASE_WIDTH = Ten.Browser.isDSi ? 230 : 45 * 6 + 5 * 2;\nHatena.Star.Pallet.SmartPhone = new Ten.Class({\n    base: [Hatena.Star.Pallet],\n    PALLET_PATH: 'colorpalette.smartphone',\n    PALLET_STYLE: 'top: 0px; left: 0px; width:100px; height:80px; overflow:hidden;' + (!Ten.Browser.isDSi ? 'background:transparent;' : ''),\n    closeButton: null,\n    style: {\n        padding: '0px',\n        textAlign: 'center',\n        border: '0px',\n        background: (!Ten.Browser.isDSi ? 'transparent' : '')\n    },\n    containerStyle: {\n        color: function () { return Hatena.Star.Pallet.SmartPhone.getColorSchemeItem('color') },\n        textAlign: 'left',\n        margin: 0,\n        padding: 0,\n        width: Hatena.Star.Pallet.SmartPhone_BASE_WIDTH + 'px',\n        height: '125px',\n        background: (!Ten.Browser.isDSi ? 'transparent' : '')\n    },\n    backgroundContainerStyle: {\n        margin: 0,\n        padding: 0,\n        width: Hatena.Star.Pallet.SmartPhone_BASE_WIDTH + 'px',\n        height: '125px',\n        background: function () { return Hatena.Star.Pallet.SmartPhone.getColorSchemeItem('backgroundContainerBackground') },\n        border: function () { return Hatena.Star.Pallet.SmartPhone.getColorSchemeItem('backgroundContainerBorder') },\n        borderRadius: function () { return Hatena.Star.Pallet.SmartPhone.getColorSchemeItem('backgroundContainerBorderRadius') },\n        MozBorderRadius: function () { return Hatena.Star.Pallet.SmartPhone.getColorSchemeItem('backgroundContainerBorderRadius') },\n        WebkitBorderRadius: function () { return Hatena.Star.Pallet.SmartPhone.getColorSchemeItem('backgroundContainerBorderRadius') },\n        position: 'absolute',\n        display: 'inline',\n        zIndex: 10000\n    },\n    closeIframeStyle: {\n        position: 'absolute',\n        zIndex: 5,\n        width: '19px',\n        height: '19px',\n        background: 'rgba(0, 0, 0, 0)',\n        border: '0px'\n    },\n    closeButtonStyle: {\n        position: 'absolute',\n        margin: 0,\n        padding: 0,\n        top: '0px',\n        left: '0px',\n        cursor: 'pointer'\n    },\n\n    // Color schems\n    // Hatena.Star.Pallet.SmartPhone.ColorScheme = 'dark';\n    COLOR_SCHEME_DEFINITIONS: {\n        dark: {\n            backgroundContainerBackground: (!Ten.Browser.isDSi ? 'rgba(10, 10, 10, 0.7)' : '#505050'),\n            color: 'white',\n            closeButtonColor: 'white',\n            closeButtonImagePadding: '0 3px 0 0',\n            closeButtonTop: '8px',\n            closeButtonRight: '10px',\n            getCloseButtonImage: function () { return Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/close_wh.png' }\n        },\n        light: {\n            backgroundContainerBackground: '#FFF',\n            backgroundContainerBorder: '1px solid #BBB',\n            backgroundContainerBorderRadius: '6px',\n            color: 'black',\n            closeButtonColor: 'rgb(187,187,187)',\n            closeButtonImagePadding: '0 1px 3px 0',\n            closeButtonTop: '5px',\n            closeButtonRight: (Ten.Browser.isDSi ? '5px' : '15px'),\n            getCloseButtonImage: function () { return Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/close.gif' }\n        }\n    },\n    DEFAULT_COLOR_SCHEME: 'light',\n    getColorScheme: function () {\n        return this.ColorScheme || this.DEFAULT_COLOR_SCHEME;\n    },\n    getColorSchemeItem: function (name) {\n        var schemeName = this.getColorScheme();\n        var scheme = this.COLOR_SCHEME_DEFINITIONS[schemeName] || this.COLOR_SCHEME_DEFINITIONS[this.DEFAULT_COLOR_SCHEME];\n        return scheme[name];\n    }\n}, {\n    showPallet: function (pos, addButton) {\n        if (Hatena.Star.UseAnimation) {\n            this.container.style.width = Ten.Geometry.getDocumentSize().w + 'px';\n            this.container.style.height = Ten.Geometry.getDocumentSize().h + 'px';\n        }\n\n        this.hide();\n        this.container.innerHTML = '';\n        if (addButton) this.addButton = addButton;\n        if (pos) this.pallet_pos = pos;\n        this.addButton.clearSelectedColorTimer();\n        this.container.innerHTML =\n            '<div id=\"hatena-star-pallet-container\">' + \n                '<div id=\"touch-instruction\" class=\"message\">' + Hatena.Star.Text.colorstar_for_smartphone + '</div>' +\n                '<div id=\"sending-message\" class=\"message\" style=\"display: none\">' + Hatena.Star.Text.sending + '</div>' +\n                '<div class=\"pallet-container\">' +\n                    '<div class=\"pallet\">' +\n                        '<a href=\"#\"><img src=\"' + Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + '/images/spacer.gif\" id=\"hatena-star-yellow\" class=\"star yellow post\" alt=\"Add Yellow Star\" title=\"Add Yellow Star\" /></a>' +\n                        '<div class=\"star\"><span class=\"star yellow unlimited\">' + Hatena.Star.Text.unlimited + '</span></div>' +\n                    '</div>' +\n                    '<div class=\"iframe-loading-message\">' + Hatena.Star.Text.loading + '</div>' +\n                    '<iframe id=\"' + Hatena.Star.Pallet.PALLET_ELEMENT_ID + '\" src=\"' + this.getPalletFrameURL() + '\" frameborder=\"0\" border=\"0\" scrolling=\"no\"></iframe>' +\n                '</div>' + \n                '<a href=\"' + Hatena.Star.PortalURL.replace(/http/, 'https') + '/shop/star?location=' + encodeURIComponent(location.href) + '\" id=\"buy\" target=\"' + (Ten.Browser.isDSi ? '_top' : '_blank' ) + '\"><img src=\"' + Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/buy_star_cart_purple.gif\" class=\"cart\">' + Hatena.Star.Text.for_colorstar_shop + '</a>' +\n            '</div>' + \n            '<style type=\"text/css\">' +\n                '#hatena-star-pallet-container {' +\n                    'color: ' + (Hatena.Star.Pallet.SmartPhone.ColorScheme == 'dark' ? 'white' : 'black') + ';' +\n                '}' +\n                '#hatena-star-pallet-container .message {' +\n                    'padding: 7px 10px;' +\n                    'font-size: 14px;' +\n                '}' +\n                '#hatena-star-pallet-container .pallet-container {' +\n                    'position: relative;' + \n                    'margin: 0 5px 0 45px;' + \n                    'height: 65px;' +\n                    (Ten.Browser.isDSi ? 'margin: 0 10px 0 10px;' : '') +\n                '}' +\n                '#hatena-star-pallet-container .pallet {' +\n                    'position: absolute;' +\n                    'top: 0;' +\n                    'left: 0;' +\n                    'width: 39px;' +\n                    'height: 60px;' +\n                    'text-align: center;' +\n                    'color: #FECD69;' + \n                    'font-weight: bold;' + \n                '}' +\n                '#hatena-star-pallet-container #hatena-star-yellow {' +\n                    'background: url(' + Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + (Hatena.Star.Pallet.SmartPhone.ColorScheme == 'dark' ? '/images/add_star_for_smartphone_bk.gif' : '/images/add_star_for_smartphone_wh.gif') + ') 0 0;' +\n                    'width: 39px;' +\n                    'height: 39px;' +\n                    'border: 0;' +\n                '}' +\n                '#hatena-star-pallet-container a.active #hatena-star-yellow {' +\n                    'background: url(' + Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + (Hatena.Star.Pallet.SmartPhone.ColorScheme == 'dark' ? '/images/add_star_for_smartphone_bk.gif' : '/images/add_star_for_smartphone_wh.gif') + ') 0 39px;' +\n                    'width: 39px;' +\n                    'height: 39px;' +\n                    'border: 0;' +\n                '}' +\n                '#hatena-star-pallet-container iframe ,' +\n                '#hatena-star-pallet-container .iframe-loading-message {' +\n                    'position: absolute;' +\n                    'top: 0;' +\n                    'left: 42px;' +\n                    'width: 173px;' +\n                    'height: 65px;' +\n                '}' +\n                '#hatena-star-pallet-container .iframe-loading-message {' +\n                    'text-align: left;' +\n                    'padding: 12px 40px 12px 40px;' +\n                '}' +\n                '#hatena-star-pallet-container #buy {' +\n                    'text-align: right;' +\n                    'float: right;' +\n                    'color: #ff7000;' +\n                    'text-decoration:none;' +\n                    'margin-top: 5px;' +\n                    'margin-right: 12px;' +\n                '}' +\n            '</style>'\n        ;\n        this.pallet =this.container.getElementsByTagName('iframe')[0];\n        this.pallet.style.visibility = 'hidden';\n        this.isNowLoading = true;\n        this._pallet_onloaded = 0;\n        this.loadingMessage = Ten.querySelector('div.iframe-loading-message', this.container);\n\n        var star_yellow = document.getElementById('hatena-star-yellow');\n        new Ten.Observer(star_yellow, 'onclick', function (e) {\n            e.stop();\n            Hatena.Star.AddButton.SmartPhone.AddStarPath = 'star.add.json';\n            addButton.addStar(e);\n            Hatena.Star.AddButton.SmartPhone.AddStarPath = 'star.add_multi.json';\n        });\n        if (Ten.Browser.isDSi) {\n            var img = star_yellow;\n            new Ten.Observer(star_yellow, 'onmousedown', function (e) {\n                if (img._activeTimer) {\n                    clearTimeout(img._activeTimer);\n                }\n                img.parentNode.className = 'active';\n            });\n            new Ten.Observer(star_yellow, 'onmouseup', function (e) {\n                img._activeTimer = setTimeout(\n                    function () { img.parentNode.className = '' },\n                    100\n                );\n            });\n        }\n\n        new Ten.Observer(this.pallet, 'onload', this, 'observerSelectColor');\n\n        var self = this;\n        window.addEventListener(\"message\", function (e) { if (e.data == 'sending') self.sending() }, false);\n\n        this.showBackgroundContainer(this.pallet_pos);\n        this.showCloseButton();\n        if (Ten.Browser.isAndroid) {\n            var self = this;\n//            var listener = function (e) {\n//                e.preventDefault();\n//                e.stopPropagation();\n//                self.hide();\n//                document.body.removeEventListener('click', listener, true);\n//            };\n//            document.body.addEventListener('click', listener, true);\n        } else {\n            this.showScreen();\n        }\n\n        if (Ten.Browser.isAndroid) {\n            var self = this;\n            setTimeout(function () { try {\n\n            // var time = new Date().getTime();\n\n            var xs = self.pallet_pos.x - document.body.scrollLeft;\n            var ys = self.pallet_pos.y - document.body.scrollTop;\n            var xe = xs + (self.container.offsetWidth  || 500);\n            var ye = ys + (self.container.offsetHeight || 300);\n\n            // alert([xs, ys, xe, ye, self.container.offsetWidth, self.container.offsetHeight, document.elementFromPoint(0, 0)]);\n\n            self._checkedElements = [];\n\n            self.backgroundContainer.style.display = 'none';\n            self.container.style.display = 'none';\n            for (var y = ys; y < ye; y += 5) {\n                for (var x = xs; x < xe; x += 5) {\n                    var e = document.elementFromPoint(x, y);\n                    if (!e) continue;\n                    if (e._checked) continue;\n\n                    if (e.nodeName == 'INPUT' || e.nodeName == 'TEXTAREA') {\n                        e._orig_disabled = e.disabled;\n                        e.disabled = true;\n                    } else\n                    if ((a = ancestor(e, 'A', 3))) {\n                        if (a._checked) continue; a._checked = true; self._checkedElements.push(a);\n                        a._orig_style = a.getAttribute('style');\n                        a.setAttribute('style', document.defaultView.getComputedStyle(a, \"\").cssText);\n                        // a.style.outline = \"1px solid red\";\n\n                        a.setAttribute('xhref', a.getAttribute('href'));\n                        a.removeAttribute('href');\n                    }\n\n                    e._checked = true; self._checkedElements.push(e);\n                }\n            }\n            self.backgroundContainer.style.display = 'block';\n            self.container.style.display = 'block';\n\n            function ancestor(e, name, deep) {\n                if (e.nodeName == name) return e;\n                if (e.parentNode) {\n                    if (deep < 0) return null;\n                    return ancestor(e.parentNode, name, deep - 1);\n                } else {\n                    return null;\n                }\n            }\n\n            // console.log((new Date()).getTime() - time + 'msec');\n            } catch (e) { alert(e) } }, 10);\n        }\n\n    },\n    hide: function (e) {\n        if (e && e.stop) {\n            e.stop();\n        }\n\n        if (Ten.Browser.isAndroid) {\n            try {\n            var links  = document.querySelectorAll('a[xhref]');\n            for (var i = 0, len = links.length; i < len; i++) {\n                var a = links[i];\n                a.setAttribute('href', a.getAttribute('xhref'));\n                a.removeAttribute('xhref');\n\n                a.setAttribute('style', a._orig_style);\n            }\n            var inputs = document.querySelectorAll('input, textarea');\n            for (var i = 0, len = inputs.length; i < len; i++) {\n                inputs[i].disabled = inputs[i]._orig_disabled;\n            }\n\n            if (this._checkedElements) for (var i = 0, len = this._checkedElements.length; i < len; i++) {\n                this._checkedElements[i]._checked = false;\n            }\n            } catch (e) { alert(e) }\n        }\n\n\n        this.hideBackgroundContainer();\n        this.hideCloseIframe();\n        this.constructor.SUPER.prototype.hide.apply(this, arguments);\n\n    },\n    showScreen: function() {\n        if (!this.screen) {\n            var c = this.constructor;\n            var screen = document.createElement('div');\n            Ten.Style.applyStyle(screen, Ten.SubWindow._baseScreenStyle);\n            Ten.Style.applyStyle(screen, c.screenStyle);\n            document.body.appendChild(screen);\n            screen.style.position = 'fixed';\n            screen.style.height = document.body.scrollHeight + 'px';\n            this.screen = screen;\n            new Ten.Observer(screen, 'click', this, 'hide');\n        } else {\n            Ten.DOM.show(this.screen);\n        }\n    },\n    hideScreen: function () {\n        if (this.screen) {\n            Ten.DOM.hide(this.screen);\n        }\n    },\n    showBackgroundContainer: function(pos) {\n        if (!this.backgroundContainer) {\n            var div = document.createElement('div');\n            Ten.Style.applyStyle(div, this.constructor.backgroundContainerStyle);\n            this.backgroundContainer = div;\n            document.body.appendChild(div);\n        }\n        this.backgroundContainer.style.left = pos.x + 'px';\n        this.backgroundContainer.style.top  = pos.y + 'px';\n        Ten.DOM.show(this.backgroundContainer);\n    },\n    hideBackgroundContainer: function() {\n        if (this.backgroundContainer) {\n            Ten.DOM.hide(this.backgroundContainer);\n        }\n    },\n    showCloseButton: function () {\n        if (!this.closeButton) {\n            var closeButton = Ten.Element(\n                'a', { href: 'javascript:void(0)' },\n                Ten.Element('img', { src: this.constructor.getColorSchemeItem('getCloseButtonImage')(), style: { verticalAlign: 'middle', padding: this.constructor.getColorSchemeItem('closeButtonImagePadding') } }),\n                Hatena.Star.Text.close || 'Close'\n            );\n            new Ten.Observer(closeButton, 'onclick', this, 'hide');\n            with (closeButton.style) {\n                overflow      = 'hidden';\n                position      = 'absolute';\n                top           = this.constructor.getColorSchemeItem('closeButtonTop');\n                right         = this.constructor.getColorSchemeItem('closeButtonRight');\n                color         = this.constructor.getColorSchemeItem('closeButtonColor');\n                verticalAlign = 'middle';\n                lineHeight    = '19px';\n                fontSize      = '12px';\n            }\n            this.window.appendChild(closeButton);\n            this.closeButton = closeButton;\n        }\n    },\n    showCloseIframe: function(pos) {\n        if (!this.closeIframes) {\n            var iframes = {  };\n            var setupIframe = function(callback) {\n                var iframe = document.createElement('iframe');\n                document.body.appendChild(iframe);\n                var doc = frames[frames.length-1].window.document;\n                doc.open();\n                doc.write('<h1>dummy</h1>');\n                Ten.DOM.removeAllChildren(doc.body);\n                if (callback) { callback(doc); };\n                doc.close();\n                return iframe;\n            };\n            var self = this;\n            // var iframe = setupIframe(function(doc) {\n            //     var btn = doc.createElement('img');\n            //     btn.src = self.constructor.getColorSchemeItem('getCloseButtonImage')();\n            //     btn.alt = 'close';\n            //     //Ten.Style.applyStyle(btn, self.constructor.closeButtonStyle);\n            //     btn.style.cursor = 'pointer';\n            //     new Ten.Observer(doc.body, 'onclick', self, 'hide');\n            //     doc.body.style.color = self.constructor.getColorSchemeItem('color');\n            //     doc.body.appendChild(btn);\n            //     doc.body.appendChild(\n            //         document.createTextNode(Hatena.Star.Text.close || 'Close')\n            //     );\n            // });\n            // iframes.button = iframe;\n            this.showCloseButton();\n            this.closeButton.style.right = Ten.Geometry.getWindowSize().w - (pos.x + Hatena.Star.Pallet.SmartPhone_BASE_WIDTH) + 'px';\n            this.closeButton.style.top = pos.y + 12 + 'px';\n            for(var i = 0;i < 4 && Hatena.Star.UseAnimation; i++) {\n                iframes[i] = setupIframe(function(doc) {\n                    new Ten.Observer(doc, 'onclick', self, 'hide');\n                });\n            }\n            this.closeIframes = iframes;\n        } else {\n            var iframes = this.closeIframes;\n        }\n        var max = function(a, b) {\n            return a > b ? a : b;\n        };\n        var docSize = {\n            w: max(Ten.Geometry.getDocumentSize().w, Ten.Geometry.getWindowSize().w),\n            h: max(Ten.Geometry.getDocumentSize().h, Ten.Geometry.getWindowSize().h)\n        };\n        var styles = [{\n            // k\n            top: '0px',\n            left: '0px',\n            width: docSize.w + 'px',\n            height: pos.y + 'px'\n        },{\n            // l\n            top: '0px',\n            left: pos.x + Hatena.Star.Pallet.SmartPhone_BASE_WIDTH + 'px',\n            width: docSize.w - Hatena.Star.Pallet.SmartPhone_BASE_WIDTH - pos.x + 'px',\n            height: docSize.h + 'px'\n        },{\n            // h\n            top: '0px',\n            left: '0px',\n            width: (Ten.Browser.isDSi ? 5 : 15 ) + 'px',\n            height: docSize.h + 'px'\n        },{\n            // j\n            top: pos.y + 140 + 'px',\n            left: '0px',\n            width: docSize.w + 'px',\n            height: docSize.h - pos.y - 140 + 'px'\n        }];\n        for (var key in iframes) if (iframes.hasOwnProperty(key)) {\n            var iframe = iframes[key];\n            if (key == 'button') {\n                Ten.Style.applyStyle(iframe, this.constructor.closeIframeStyle);\n                Ten.Style.applyStyle(iframe, {\n                    left: pos.x + Hatena.Star.Pallet.SmartPhone_BASE_WIDTH - 19 - 12 + 'px',\n                    top: pos.y + 12 + 'px'\n                });\n            } else {\n                Ten.Style.applyStyle(iframe, styles[key]);\n                Ten.Style.applyStyle(iframe, {\n                    position: 'absolute',\n                    margin: '0px',\n                    padding: '0px',\n                    border: '0px',\n                    zIndex: 100\n                });\n            }\n            Ten.DOM.show(iframe);\n        }\n        this.closeIframes = iframes;\n    },\n    hideCloseIframe: function() {\n        if (this.closeIframes) {\n            var iframes = this.closeIframes;\n            for (key in iframes) if (iframes.hasOwnProperty(key)) {\n                var iframe = iframes[key];\n                Ten.DOM.hide(iframe);\n            }\n        }\n    },\n    getPalletFrameURL: function () {\n        var pos = this.pallet_pos;\n        return this.constructor.SUPER.prototype.getPalletFrameURL.apply(this, arguments) + (Hatena.Star.UseAnimation ? '&left=' + pos.x + '&top=' + pos.y + '&anime=1' : '') + '&colorscheme=' + this.constructor.getColorScheme();\n    },\n    observerSelectColor: function (e) {\n        this.pallet.style.visibility = 'visible';\n        this.loadingMessage.style.display = 'none';\n        this._pallet_onloaded = this._pallet_onloaded ? this._pallet_onloaded : 0;\n        this._pallet_onloaded++;\n\n        this.isNowLoading = false;\n        if (this._pallet_onloaded > 1) {\n            this.addButton.addStar(e);\n        }\n\n        Ten.DOM.show(document.getElementById('touch-instruction'));\n        Ten.DOM.hide(document.getElementById('sending-message'));\n    },\n    sending : function () {\n        Ten.DOM.hide(document.getElementById('touch-instruction'));\n        Ten.DOM.show(document.getElementById('sending-message'));\n    }\n});\n\n/* Hatena.Star.CommentButton */\nHatena.Star.CommentButton = new Ten.Class({\n    base: [Hatena.Star.Button],\n    initialize: function(entry,container) {\n        this.entry = entry;\n        this.lastPosition = null;\n        this.container = container;\n        var src = Hatena.Star.Button.getImgSrc(this.constructor,container);\n        var img = Hatena.Star.Button.createButton({\n            src: src,\n            tabIndex: 0,\n            alt: 'Comments',\n            title: 'Comments'\n        });\n        img.className = 'hatena-star-comment-button';\n        new Ten.Observer(img,'onclick',this,'showComments');\n        new Ten.Observer(img,'onkeyup',this,'handleKeyUp');\n        this.img = img;\n        this.hide();\n    },\n    ImgSrcSelector: '.hatena-star-comment-button-image',\n    ImgSrc: Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/comment.gif'\n}, {\n    handleKeyUp: function(e) {\n        if (!e.isKey('enter')) return;\n        var pos = Ten.Geometry.getElementPosition(this.img);\n        e.mousePosition = function() {return pos};\n        this.showComments(e);\n    },\n    showComments: function(e) {\n        if (!this.screen) this.screen = new Hatena.Star.CommentScreen();\n        this.screen.bindEntry(this.entry);\n        var pos = e.mousePosition();\n        pos.y += 25;\n        this.screen.showComments(this.entry, pos);\n    },\n    hide: function() {\n        this.img.style.margin = '0';\n        this.img.style.display = 'none';\n    },\n    show: function() {\n        this.img.style.margin = '0 3px';\n        this.img.style.display = 'inline';\n    },\n    activate: function() {\n        this.show();\n        this.constructor = Hatena.Star.CommentButtonActive;\n        this.img.src = Hatena.Star.Button.getImgSrc(this.constructor,this.container);\n        Ten.DOM.addClassName(this.container, 'hatena-star-comment-active');\n    }\n});\n\n/* Hatena.Star.CommentButtonActive */\nHatena.Star.CommentButtonActive = new Ten.Class({\n    base: [Hatena.Star.CommentButton],\n    ImgSrcSelector: '.hatena-star-comment-button-image-active',\n    ImgSrc: Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/comment_active.gif'\n});\n\n/* Hatena.Star.Star */\nHatena.Star.Star = new Ten.Class({\n    initialize: function(args) {\n        if (args.img) {\n            this.img = args.img;\n            this.name = this.img.getAttribute('alt');\n        } else {\n            this.name = args.name;\n            this.screen_name = args.screen_name || args.name;\n            this.profile_icon = args.profile_icon;\n            this.container = args.container;\n            this.container._starColor = args.color;\n            this.color = args.color;\n            this.generateImg();\n        }\n        this.quote = args.quote;\n        this.entry = args.entry;\n        this.setImgObservers();\n\n        this.user = new Hatena.Star.User(this.name);\n        if (!this.screen_name || this.screen_name == this.name) {\n            var self = this;\n            Hatena.Star.User.withNickname(this.name, function (name) {\n                self.screen_name = name;\n            });\n        }\n        this.anchor = document.createElement('a');\n        this.anchor.href = this.getAnchor();\n        this.anchor.appendChild(this.img);\n\n        this.count = args.count;\n\n        if (this.quote && this.quote.length >= 3) {\n            this.highlight = new Hatena.Star.Highlight(this.quote);\n        }\n    },\n    gotImage: {},\n    getImage: function(container) {\n        var color = this.ColorPallet[container._starColor];\n        color = (color) ? color : this.ColorPallet['yellow'];\n        if (!this.gotImage[color.ImgSrc]) {\n            var img = document.createElement('img');\n            img.src = Hatena.Star.Button.getImgSrc(color,container);\n            img.setAttribute('tabIndex', 0);\n            img.className = 'hatena-star-star';\n            var s = img.style;\n            s.padding = '0';\n            s.border = 'none';\n            this.gotImage[color.ImgSrc] = img;\n        }\n        return this.gotImage[color.ImgSrc].cloneNode(false);\n    },\n//    ImgSrcSelector: '.hatena-star-star-image',\n//    ImgSrc: Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/star.gif',\n    ColorPallet : {\n        'yellow' : {\n            ImgSrcSelector: '.hatena-star-star-image',\n            ImgSrc: Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/star.gif'\n        },\n        'green' : {\n            ImgSrcSelector: '.hatena-star-green-star-image',\n            ImgSrc: Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/star-green.gif'\n        },\n        'red' : {\n            ImgSrcSelector: '.hatena-star-red-star-image',\n            ImgSrc: Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/star-red.gif'\n        },\n        'blue' : {\n            ImgSrcSelector: '.hatena-star-blue-star-image',\n            ImgSrc: Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/star-blue.gif'\n        },\n        'purple' : {\n            ImgSrcSelector: '.hatena-star-purple-star-image',\n            ImgSrc: Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/star-purple.gif'\n        },\n        'temp' : {\n            ImgSrcSelector: '.hatena-star-temp-star-image',\n            ImgSrc: Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/star-temp.gif'\n        }\n    }\n},{\n    generateImg: function () {\n        var img = Hatena.Star.Star.getImage(this.container);\n        img.alt = this.screen_name;\n        img.title = '';\n        if (this.color && this.color != 'yellow' && this.color != 'temp') {\n            img.alt = img.alt + ' (' + this.color  + ')';\n        }\n        this.img = img;\n    },\n    setImgObservers: function () {\n        new Ten.Observer(this.img,'onmouseover',this,'showName');\n        new Ten.Observer(this.img,'onmouseout',this,'hideName');\n        if ( Hatena.Star.Config.isStarDeletable ) {\n            new Ten.Observer(this.img,'onmouseover',this,'setTimerStarDeletion');\n            new Ten.Observer(this.img,'onmouseout',this,'clearTimerStarDeletion');\n        }\n    },\n    asElement: function() {\n        if (this.count && this.count > 1) {\n            var c = document.createElement('span');\n            c.className = 'hatena-star-inner-count';\n            var style = Hatena.Star.InnerCount.getStyle();\n            if (style) Ten.Style.applyStyle(c, style);\n            c.innerHTML = this.count;\n            var s = document.createElement('span');\n            s.appendChild(this.anchor);\n            s.appendChild(c);\n            return s;\n        } else {\n            return this.anchor;\n        }\n    },\n    setTimerStarDeletion: function(e) {\n        var self = this;\n        if (this.deleteTimer) return;\n        if (!this.name || !this.entry) return;\n        if (!Hatena.Visitor) return;\n        if (!Hatena.Visitor.RKS) return;\n        this.deleteTimer = setTimeout(function() {\n            self.deleteTimer = null;\n            var uri = Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'star.deletable.json?name='\n                + self.name + '&uri=' + encodeURIComponent(self.entry.uri);\n            if (self.color) uri += '&color=' + self.color;\n            if (self.quote) {\n                uri += '&quote=' + encodeURIComponent(self.quote);\n            }\n            new Ten.JSONP(uri, self, 'confirmDeletable');\n        }, 4000);\n    },\n    clearTimerStarDeletion: function() {\n        if (this.deleteTimer) {\n            clearTimeout(this.deleteTimer);\n            this.deleteTimer = null;\n        }\n    },\n    confirmDeletable: function(res) {\n        if (res.result && res.confirm_html) {\n          var pos = Ten.Geometry.getElementPosition(this.anchor);\n          var scr = new Hatena.Star.DeleteConfirmScreen();\n          scr.showConfirm(res.confirm_html, this, pos);\n        } else if (res.result && res.message && confirm(res.message)) {\n            this.deleteStar();\n        }\n    },\n    deleteStar: function() {\n        var uri = Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'star.delete.json?name='\n            + this.name + '&uri=' + encodeURIComponent(this.entry.uri)\n            + '&rks=' + Hatena.Visitor.RKS;\n        if (this.color) uri += '&color=' + this.color;\n        if (this.quote) {\n            uri += '&quote=' + encodeURIComponent(this.quote);\n        }\n        new Ten.JSONP(uri, this, 'receiveDeleteResult');\n    },\n    receiveDeleteResult: function(res) {\n        if (res && res.result) {\n            this.anchor.style.display = 'none';\n        }\n    },\n    showName: function(e) {\n        if (!this.screen) this.screen = new Hatena.Star.NameScreen();\n        var pos = e.mousePosition();\n        pos.x += 10;\n        pos.y += 25;\n        if (this.highlight) this.highlight.show();\n        this.screen.showName(this.screen_name, this.quote, pos, this.profile_icon, this.name);\n    },\n    hideName: function() {\n        if (!this.screen) return;\n        if (this.highlight) this.highlight.hide();\n        this.screen.hide();\n    },\n    getAnchor: function () {\n        if (Hatena.Star.isTouchUA) {\n            if (Hatena.Star.getSmartPhoneDetailURL) {\n                var url = Hatena.Star.getSmartPhoneDetailURL(this);\n                if (url) {\n                    return url;\n                }\n            }\n            return Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + '/mobile/entry?uri=' + encodeURIComponent(this.entry.uri);\n        } else {\n            return this.user.userPage();\n        }\n    }\n});\n\n/* Hatena.Star.Highlight */\nHatena.Star.Highlight = new Ten.Class({\n    base: [Ten.Highlight],\n    ClassName: 'hatena-star-highlight'\n});\n\n/* from Hatena::Bookmark */\n/* thx id:amachang / id:Yuichirou / id:os0x */\nHatena.Star.Highlight._show = Hatena.Star.Highlight.show;\nHatena.Star.Highlight.show = function() {\n    setTimeout(function() {\n        if (Hatena.Star.Highlight.asyncMakeTextNode) \n            Hatena.Star.Highlight.asyncMakeTextNode();\n        Hatena.Star.Highlight._show();\n    }, 10);\n};\n\nHatena.Star.Highlight._makeTextNodes = Hatena.Star.Highlight.makeTextNodes;\nHatena.Star.Highlight.makeTextNodes = function(c) {\n    if (c.asyncMakeTextNode || c.textNodes || c.textNodePositions || c.documentText) return;\n    if (Ten.Highlight.highlighted) Ten.Highlight.highlighted.hide();\n    \n    if (!c.loaded && !c.prototype._show) {\n        c.prototype._show = c.prototype.show;\n        c.prototype.show = function() {\n            c.prototype.show = c.prototype._show;\n            var _self = this;\n            var exec = function() {\n                if (c.asyncMakeTextNode) {\n                    c.asyncMakeTextNode();\n                }\n                _self.show();\n            };\n            exec();\n        }\n    }\n    c.asyncMakeTextNode = function() {\n        var textNodes = c.textNodes = [];\n        var textNodePositions = c.textNodePositions = [];\n\n        var pos = 0; \n\n        if (Ten.Browser.isSupportsXPath) {\n            var result = document.evaluate('descendant::text()', document.body, null, 7, null);\n\n            for (var i = 0, len = result.snapshotLength; i < len ; i ++) {\n                var node = result.snapshotItem(i);\n                textNodes.push(node);\n                textNodePositions.push(pos);\n                pos += node.length;\n            }\n\n            c.documentText = document.body.textContent || document.body.innerText;\n\n        } else {\n            var isIE = Ten.Browser.isIE;\n            var texts = [];\n\n            var fn = function(node, parent) {\n                if (isIE && parent && parent != node.parentNode) return;\n                if (node.nodeType == 3) {\n                    textNodes.push(node);\n                    texts.push(node.nodeValue);\n                    textNodePositions.push(pos);\n                    pos += node.nodeValue.length;\n                } else {\n                    var childNodes = node.childNodes;\n                    for (var i = 0, len = childNodes.length; i < len; ++i) {\n                        fn(childNodes[i], node);\n                    }\n                }\n            };\n            fn(document.body);\n\n            c.documentText = texts.join('');\n        }\n        c.loaded = true;\n        c.asyncMakeTextNode = null;\n    };\n    return;\n}\n\n/* Hatena.Star.InnerCount */\nHatena.Star.InnerCount = new Ten.Class({\n    initialize: function(count, e, color) {\n        this.count = count;\n        this.entry = e;\n        this.color = (color) ? color : '';\n        var c = document.createElement('span');\n        c.className = Hatena.Star.InnerCount.className(this.color);\n        c.setAttribute('tabIndex', 0);\n        var style = Hatena.Star.InnerCount.getStyle(color);\n        if (style) Ten.Style.applyStyle(c, style);\n        c.style.cursor = 'pointer';\n        c.innerHTML = count;\n        new Ten.Observer(c,'onclick',this,'showInnerStars');\n        new Ten.Observer(c,'onkeyup',this,'handleKeyUp');\n        this.container = c;\n    },\n    selectorName: function(color) {\n        color = (color) ? color : '';\n        var base = '.hatena-star-inner-count';\n        if (color) base += '-';\n        return base + color;\n    },\n    getStyle: function(color) {\n        color = (color) ? color : '';\n        var c = Hatena.Star.InnerCount;\n        if (Ten.Style.getGlobalRule(c.selectorName(color))) {\n            return null;\n        } else {\n            color = (color) ? color : 'yellow';\n            var fontColor = Hatena.Star.InnerCount.fontColor[color];\n            if (fontColor) c.style.color = fontColor;\n            return c.style;\n        }\n    },\n    className: function(color){\n        return Hatena.Star.InnerCount.selectorName(color).substr(1);\n    },\n    style: {\n        fontWeight: 'bold',\n        fontSize: '80%',\n        fontFamily: '\"arial\", sans-serif',\n        margin: '0 2px'\n    },\n    fontColor: {\n        yellow: '#f4b128',\n        green: '#8ed701',\n        red: '#ea475c',\n        purple: '#cd34e3',\n        blue: '#57b1ff'\n    }\n},{\n    asElement: function() {\n        return this.container;\n    },\n    handleKeyUp: function(e) {\n        if (!e.isKey('enter')) return;\n        this.showInnerStars(e);\n    },\n    showInnerStars: function() {\n        var url = Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'entry.json?uri=' +\n        encodeURIComponent(this.entry.uri);\n        new Ten.JSONP(url, this, 'receiveStarEntry');\n    },\n    receiveStarEntry: function(res) {\n        var se = res.entries[0];\n        var e = this.entry;\n        if (encodeURIComponent(se.uri) != encodeURIComponent(e.uri)) return;\n        e.flushStars();\n        e.bindStarEntry(se);\n        e.addAddButton();\n        e.showStars();\n    }\n});\n\n/* Hatena.Star.Comment */\nHatena.Star.Comment = new Ten.Class({\n    initialize: function(args) {\n        this.name = args.name;\n        this.body = args.body;\n        this.id = args.id;\n    }\n},{\n    asElement: function() {\n        var div = new Ten.Element('div', {\n            style: {\n                margin: '0px 0',\n                padding: '5px 0 5px 22px',\n                lineHeight: '1.3',\n                borderBottom: '1px solid #ddd'\n            }\n        });\n        var ico = Hatena.Star.User.getProfileIcon(this.name);\n        ico.style.marginLeft = '-22px';\n        Hatena.Star.User.withNickname(this.name, function (name) {\n            ico.title = name;\n        });\n        div.appendChild(ico);\n        var span = document.createElement('span');\n        span.style.fontSize = '90%';\n        span.innerHTML = this.body;\n        div.appendChild(span);\n        if (this.deletable()) {\n            new Hatena.Star.CommentDeleteButton(div, this);\n        }\n        return div;\n    },\n    deletable: function() {\n        if (typeof(Hatena.Visitor) != 'undefined' &&\n            typeof(Hatena.Visitor.name) != 'undefined' &&\n            Hatena.Visitor.name == this.name) {\n                return true;\n            }\n        return false;\n    },\n    deleteComment: function(callback) {\n        if (!this.deletable()) return;\n        if (!this.id) return;\n        if (!Hatena.Visitor.RKS) return;\n        var uri = Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'comment.delete.json?comment_id=' + this.id\n            + '&rks=' + Hatena.Visitor.RKS;\n        new Ten.JSONP(uri, callback);\n    }\n});\n\n/* Hatena.Star.CommentDeleteButton */\nHatena.Star.CommentDeleteButton = new Ten.Class({\n    initialize: function(parent, comment) {\n        this.parent = parent;\n        this.comment = comment;\n        this.button = new Ten.Element('img', {\n            src: Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/delete2.gif',\n            alt: 'Delete',\n            title: 'Delete',\n            style: {\n                margin: '0 3px',\n                verticalAlign: 'middle',\n                cursor: 'pointer',\n                display: 'none'\n            }\n        });\n        new Ten.Observer(this.parent, 'onmouseover', this, 'showButton');\n        new Ten.Observer(this.button, 'onclick', this, 'deleteComment');\n        this.parent.appendChild(this.button);\n    }\n}, {\n    showButton: function() {\n        this.button.style.display = 'inline';\n        if (!this.hideObserver) {\n            this.hideObserver = new Ten.Observer(this.parent, 'onmouseout', this, 'hideButton');\n        }\n    },\n    hideButton: function() {\n        this.button.style.display = 'none';\n    },\n    deleteComment: function() {\n        var self = this;\n        this.comment.deleteComment(function(res) {\n            if (res.result) self.parent.style.display = 'none';\n        });\n    }\n});\n\n/* Hatena.Star.NameScreen */\nHatena.Star.NameScreen = new Ten.Class({\n    base: [Ten.SubWindow],\n    style: {\n        padding: '2px',\n        textAlign: 'center'\n    },\n    containerStyle: {\n        textAlign: 'left',\n        margin: 0,\n        padding: 0\n    },\n    quoteStyle: {\n        margin: '.3em .2em',\n        padding: '.5em 0 0 0',\n        fontSize: '80%',\n        borderTop: '1px solid #bbb',\n        color: '#777'\n    },\n    handleStyle: null,\n    showScreen: false,\n    closeButton: null,\n    draggable: false\n},{\n    showName: function(name, quote, pos, src, urlName) {\n        this.container.innerHTML = '';\n        this.container.appendChild(Hatena.Star.User.getProfileIcon(urlName || name, src));\n        this.container.appendChild(document.createTextNode(name || urlName));\n        if (quote) {\n            var blockquote = document.createElement('blockquote');\n            Ten.Style.applyStyle(blockquote, this.constructor.quoteStyle);\n            blockquote.innerHTML = '&quot; ' + quote + ' &quot;';\n            this.container.appendChild(blockquote);\n        }\n        this.show(pos);\n    }\n});\n\n/* Hatena.LoginWindow */\nHatena.LoginWindow = new Ten.Class({\n    base: [Ten.SubWindow],\n    style: {\n        padding: '2px',\n        textAlign: 'left',\n        borderRadius: '6px',\n        MozBorderRadius: '6px'\n    },\n    handleStyle: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        backgroundColor: '#f3f3f3',\n        borderBottom: '1px solid #bbb',\n        width: '100%',\n        height: '30px',\n        borderRadius: '6px 6px 0 0',\n        MozBorderRadius: '6px 6px 0 0'\n    }\n},{\n    addLoginForm: function(html) {\n        this.container.innerHTML = html;\n        var form = this.container.getElementsByTagName('form')[0];\n        var input = new Ten.Element('input',{\n            type: 'hidden',\n            name: 'location',\n            value: document.location.href\n        });\n        form.appendChild(input);\n    },\n    hide: function () {\n        var script = document.createElement('script');\n        script.src = Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'js/HatenaStar.js';\n        Hatena.Star = undefined;\n        document.body.appendChild(script);\n        Ten.SubWindow.prototype.hide.apply(this, arguments);\n    }\n});\n\n/* Hatena.Star.AlertScreen */\nHatena.Star.AlertScreen = new Ten.Class({\n    base: [Ten.SubWindow],\n    style: {\n        padding: '2px',\n        textAlign: 'center',\n        borderRadius: '6px',\n        MozBorderRadius: '6px',\n        width: '240px',\n        height: '120px'\n    },\n    handleStyle: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        backgroundColor: '#f3f3f3',\n        borderBottom: '1px solid #bbb',\n        width: '100%',\n        height: '30px',\n        borderRadius: '6px 6px 0 0',\n        MozBorderRadius: '6px 6px 0 0'\n    }\n},{\n    showAlert: function(msg, pos) {\n        this.container.innerHTML = msg;\n        var win = Ten.Geometry.getWindowSize();\n        var scr = Ten.Geometry.getScroll();\n        var w = parseInt(this.constructor.style.width) + 20;\n        if (pos.x + w > scr.x + win.w) pos.x = win.w + scr.x - w;\n        this.show(pos);\n    }\n});\n\n/* Hatena.Star.DeleteConfirmScreen */\nHatena.Star.DeleteConfirmScreen = new Ten.Class({\n    base: [Ten.SubWindow],\n    style: {\n        padding: '2px',\n        textAlign: 'center',\n        borderRadius: '6px',\n        MozBorderRadius: '6px',\n        width: '320px',\n        height: '170px'\n    },\n    handleStyle: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        backgroundColor: '#f3f3f3',\n        borderBottom: '1px solid #bbb',\n        width: '100%',\n        height: '30px',\n        borderRadius: '6px 6px 0 0',\n        MozBorderRadius: '6px 6px 0 0'\n    }\n},{\n  showConfirm: function(msg, star, pos) {\n        this.container.innerHTML = msg;\n        var win = Ten.Geometry.getWindowSize();\n        var scr = Ten.Geometry.getScroll();\n        var w = parseInt(this.constructor.style.width) + 20;\n        if (pos.x + w > scr.x + win.w) pos.x = win.w + scr.x - w;\n        this.show(pos);\n    }\n\n    // XXX star.receiveDeleteResult({result: 1})\n});\n\n/* Hatena.Star.CommentScreen */\nHatena.Star.CommentScreen = new Ten.Class({\n    base: [Ten.SubWindow],\n    initialize: function() {\n        var self = this.constructor.SUPER.call(this);\n        if (!self.commentsContainer) self.addCommentsContainer();\n        return self;\n    },\n    style: {\n        width: '280px',\n        height: '280px',\n        // overflow: 'auto',\n        // overflowX: 'hidden',\n        backgroundColor: '#f3f3f3',\n        padding: '0',\n        textAlign: 'center',\n        borderRadius: '6px',\n        MozBorderRadius: '6px'\n    },\n    handleStyle: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        backgroundColor: '#f3f3f3',\n        borderBottom: '1px solid #bbb',\n        width: '100%',\n        height: '30px',\n        borderRadius: '6px 6px 0 0',\n        MozBorderRadius: '6px 6px 0 0'\n    },\n    containerStyle: {\n        backgroundColor: '#fff',\n        overflow: 'auto',\n        overflowX: 'hidden',\n        height: '248px',\n        margin: '32px 0 0 0',\n        textAlign: 'left',\n        padding: '0 10px'\n    },\n    getLoadImage: function() {\n        var img = document.createElement('img');\n        img.src = Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'images/load.gif';\n        img.setAttribute('alt', 'Loading');\n        var s = img.style;\n        s.verticalAlign = 'middle';\n        s.margin = '0 2px';\n        return img;\n    }\n},{\n    addCommentsContainer: function() {\n        var div = document.createElement('div');\n        Ten.Style.applyStyle(div, {\n            margin: '0'\n        });\n        this.container.appendChild(div);\n        this.commentsContainer = div;\n    },\n    showComments: function(e, pos) {\n        var comments = e.comments;\n        if (!comments) comments = [];\n        this.commentsContainer.innerHTML = '';\n        var cc = this.commentsContainer;\n        for (var i=0; i<comments.length; i++) {\n            cc.appendChild(comments[i].asElement());\n        }\n        if ( e.hasBoundToStarEntry() && !e.can_comment ) {\n            this.hideCommentForm();\n        } else {\n            this.addCommentForm();\n        }\n        var win = Ten.Geometry.getWindowSize();\n        var scr = Ten.Geometry.getScroll();\n        var w = parseInt(this.constructor.style.width) + 20;\n        var h = parseInt(this.constructor.style.height) + 20;\n        if (pos.x + w > scr.x + win.w) pos.x = win.w + scr.x - w;\n        if (pos.y + h > scr.y + win.h) pos.y = win.h + scr.y - h;\n        this.show(pos);\n    },\n    bindEntry: function(e) {\n        this.entry = e;\n    },\n    resizeCommentInput: function(e) {\n        var ci = this.commentInput;\n        if (ci.scrollHeight && (ci.clientHeight < ci.scrollHeight) && (ci.scrollHeight < 100)) {\n            var h = ci.scrollHeight + 10;\n            ci.style.height = h + 'px';\n        }\n    },\n    sendComment: function(e) {\n        var ci = this.commentInput;\n        var body = ci.value;\n        if (!body) return;\n        ci.disabled = 'true';\n        this.showLoadImage();\n        var url = Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'comment.add.json?body=' + encodeURIComponent(body) +\n            '&uri=' + encodeURIComponent(this.entry.uri) +\n            '&title=' + encodeURIComponent(this.entry.title);\n        if (Hatena.Visitor && Hatena.Visitor.RKS) {\n            url += '&rks=' + Hatena.Visitor.RKS;\n        }\n        new Ten.JSONP(url, this, 'receiveResult');\n    },\n    handleKeyPress: function(e) {\n        if (e.isKey('enter') && e.ctrlKey) {\n            this.sendComment();\n        }\n    },\n    receiveResult: function(args) {\n        if (!args.name || !args.body) return;\n        this.commentInput.value = ''; \n        this.commentInput.disabled = '';\n        this.commentInput.style.height = '3em';\n        this.commentInput.focus();\n        this.hideLoadImage();\n        var com = new Hatena.Star.Comment(args);\n        this.entry.addComment(com);\n        this.commentsContainer.appendChild(com.asElement());\n    },\n    showLoadImage: function() {\n        if (!this.loadImage) return; \n        this.loadImage.style.display = 'inline';\n    },\n    hideLoadImage: function() {\n        if (!this.loadImage) return; \n        this.loadImage.style.display = 'none';\n    },\n    hideCommentForm: function() {\n        if (!this.commentForm) return;\n        this.commentForm.style.display = 'none';\n    },\n    addCommentForm: function() {\n        if (this.commentForm) {\n            this.commentForm.style.display = 'block';\n            return;\n        }\n        var form = new Ten.Element('div', {\n            style : {\n                margin: '0px 0',\n                padding: '5px 0'\n            }\n        });\n        this.container.appendChild(form);\n        this.commentForm = form;\n        var input = new Ten.Element('textarea', {\n            style: {\n                width: '220px',\n                height: '3em',\n                border: '1px solid #bbb',\n                padding: '3px',\n                overflow: 'auto'\n            }\n        });\n        form.appendChild(input);\n        this.commentInput = input;\n        this.commentInputHeight = input.scrollHeight;\n        form.appendChild(new Ten.Element('br'));\n        var submit = new Ten.Element('input', {\n            type: 'button',\n            value: 'send'\n        });\n        form.appendChild(submit);\n        this.submit = submit;\n        var img = this.constructor.getLoadImage();\n        this.loadImage = img;\n        this.hideLoadImage();\n        form.appendChild(img);\n        new Ten.Observer(submit,'onclick',this,'sendComment');\n        new Ten.Observer(input,'onkeypress',this,'handleKeyPress');\n        new Ten.Observer(input,'onkeyup',this,'resizeCommentInput');\n    }\n});\n\n/* Hatena.Star.EntryLoader */\nHatena.Star.EntryLoader = new Ten.Class({\n    initialize: function() {\n        var c = Hatena.Star.EntryLoader;\n        c.loadNewEntries();\n        c.finishLoad();\n    },\n    loadNewEntries: function(node) {\n        var c = Hatena.Star.EntryLoader;\n        if (!node) node = document.body;\n        var entries_org = c.entries;\n        c.entries = null;\n        var entries;\n        if (c.headerTagAndClassName) {\n            entries = c.loadEntriesByHeader(node);\n        } else if (c.loadEntries) {\n            entries = c.loadEntries(node);\n        } else {\n            entries = c.loadEntriesByConfig(node);\n        }\n        c.entries = [];\n        if (entries && typeof(entries.length) == 'number') {\n            for (var i = 0; i < entries.length; i++) {\n                var e = new Hatena.Star.Entry(entries[i]);\n                e.showButtons();\n                c.entries.push(e);\n            }\n        }\n        c.getStarEntries();\n        if (entries_org) {\n            c.entries.push(entries_org);\n            c.entries = Ten.Array.flatten(c.entries);\n        }\n    },\n    createStarContainer: function() {\n        var sc = document.createElement('span');\n        sc.className = 'hatena-star-star-container';\n        return sc;\n    },\n    createCommentContainer: function() {\n        var cc = document.createElement('span');\n        cc.className = 'hatena-star-comment-container';\n        return cc;\n    },\n    scrapeTitle: function(node) {\n        var rval = [];\n        (function (node) {\n            if (node.className == 'sanchor' || node.className == 'timestamp' ||\n                node.className == 'edit') {\n                    return;\n            } else if (node.nodeType == 3 && !/\\S/.test(node.nodeValue)) {\n                return;\n            }\n            var cn = node.childNodes;\n            if (cn) {\n                for (var i = 0; i < cn.length; i++) {\n                    arguments.callee.call(this, cn[i]);\n                }\n            }\n            var nodeValue = node.nodeValue;\n            if (typeof(nodeValue) == 'string') {\n                rval.push(nodeValue);\n            }\n        })(node);\n        var title = rval.join('');\n        title = title.replace(/^[\\s\\n\\r]+/, '');\n        title = title.replace(/[\\s\\n\\r]+$/, '');\n        title = title.replace(/[\\n\\r]/g, '');\n        return title;\n    },\n    getHeaders: function(node) {\n        var t = Hatena.Star.EntryLoader.headerTagAndClassName;\n        if (typeof(t[0]) == 'string') {\n            return Ten.DOM.getElementsByTagAndClassName(t[0],t[1],node || document);\n        } else {\n            var elements = [];\n            for (var i = 0; i < t.length; i++) {\n                var elems = Ten.DOM.getElementsByTagAndClassName(t[i][0],t[i][1],node || document);\n                for (var j = 0; j < elems.length; j++) {\n                    elements.push(elems[j]);\n                }\n            }\n            return elements;\n        }\n    },\n    loadEntriesByHeader: function(node) {\n        var c = Hatena.Star.EntryLoader;\n        if (c.entries) return c.entries;\n        var entries = [];\n        var headers = c.getHeaders(node);\n        for (var i = 0; i < headers.length; i++) {\n            var header = headers[i];\n            var a = header.getElementsByTagName('a')[0];\n            if (!a) continue;\n            var uri = a.href;\n            var title = '';\n            // Ten.DOM.removeEmptyTextNodes(header);\n            var cns = header.childNodes;\n            title = c.scrapeTitle(header);\n            var cc = c.createCommentContainer();\n            header.appendChild(cc);\n            var sc = c.createStarContainer();\n            header.appendChild(sc);\n            entries.push({\n                uri: uri,\n                title: title,\n                star_container: sc,\n                comment_container: cc\n            });\n        }\n        c.entries = entries;\n        return entries;\n    },\n    loadEntriesByConfig: function(node) {\n        var c = Hatena.Star.EntryLoader;\n        if (c.entries) return c.entries;\n        var entries = [];\n        if (!Hatena.Star.SiteConfig) return null;\n        var conf = Hatena.Star.SiteConfig.entryNodes;\n        if (!conf) return null;\n        for (var eselector in conf) {\n            var enodes = Ten.Selector.getElementsBySelector(eselector,node);\n            if (!enodes) continue;\n            var sels = conf[eselector];\n            if (!Ten.Array.isArray(sels)) sels = [sels];\n            for (var i = 0; i < sels.length; i++) {\n                var selectors = sels[i];\n                for (var j = 0; j < enodes.length; j++) {\n                    var enode = enodes[j];\n                    var e = c.getEntryByENodeAndSelectors(enode, selectors);\n                    if (e) entries.push(e);\n                }\n            }\n        }\n        c.entries = entries;\n        return entries;\n    },\n    getEntryByENodeAndSelectors: function(enode,selectors) {\n        var c = Hatena.Star.EntryLoader;\n        var e = {entryNode: enode};\n        var a = c.getElementByConfigSelector(selectors.uri, enode);\n        if (!a) return null;\n        e.uri = a.href;\n        if (!e.uri) return null;\n        var title = c.getElementByConfigSelector(selectors.title, enode);\n        if (!title) return null;\n        if (typeof(title) == 'string') {\n            e.title = title;\n        } else {\n            e.title = c.scrapeTitle(title) || title.title || title.alt || '';\n        }\n        var cont = c.getElementByConfigSelector(selectors.container, enode);\n        if (!cont) return null;\n        e.comment_container = c.createCommentContainer();\n        cont.appendChild(e.comment_container);\n        e.star_container = c.createStarContainer();\n        cont.appendChild(e.star_container);\n        return e;\n    },\n    getElementByConfigSelector: function(selector,parent) {\n        var truncate = false;\n        selector = selector.replace(/::-ten-truncate$/, function () {\n            truncate = true; return '';\n        });\n\n        var result = null;\n        if (selector.match(/^document\\.(location|title)$/)) {\n            result = document[RegExp.$1];\n        } else if (selector == 'window.location') {\n            result = window.location;\n        } else if (selector == 'parent') {\n            result = parent;\n        } else if (selector.match(/^link\\[rel~?=\"?canonical\"?\\]$/)) {\n            result = Ten.querySelector(selector);\n        } else {\n            result = Ten.Selector.getElementsBySelector(selector,parent)[0];\n        }\n\n        if (truncate && result && result.nodeType == 1) {\n            result = Hatena.Star.EntryLoader.scrapeTitle(result) || result.title || result.alt || '';\n            if (result.length > 30) {\n                result = result.substring(0, 30) + '...';\n            }\n        }\n\n        return result;\n    },\n    finishLoad: function() {\n        var c = Hatena.Star.EntryLoader;\n        c.dispatchEvent('load');\n        c.loaded = true;\n    },\n    getStarEntries: function() {\n        var c = Hatena.Star.EntryLoader;\n        var entries = c.entries;\n        if (!entries.length) return;\n        var url = Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'entries.json?';\n        for (var i = 0; i < entries.length; i++) {\n            if (url.length > Ten.JSONP.MaxBytes) {\n                new Ten.JSONP(url, c, 'receiveStarEntries');\n                url = Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'entries.json?';\n            }\n            url += 'uri=' + encodeURIComponent(entries[i].uri) + '&';\n        }\n        if (!Hatena.Visitor) url += 'timestamp=1';\n        new Ten.JSONP(url, c, 'receiveStarEntries');\n    },\n    receiveStarEntries: function(res) {\n        var c = Hatena.Star.EntryLoader;\n        var entries = res.entries;\n        var encodedUriToEntryInfoMap = {};\n        if (!entries) entries = [];\n        for ( var i = 0, len = entries.length; i < len; ++i ) {\n            var entryInfo = entries[i];\n            if ( !entryInfo.uri ) continue;\n            var eURI = entryInfo.eURI;\n            if ( !eURI ) eURI = entryInfo.eURI = encodeURIComponent( entryInfo.uri );\n            encodedUriToEntryInfoMap[eURI] = entryInfo;\n        }\n        for ( var i = 0, len = c.entries.length; i < len; ++i ) {\n            var e = c.entries[i];\n            var entryInfo;\n            if ( e.hasBoundToStarEntry() ) continue;\n            if ( !e.eURI ) e.eURI = encodeURIComponent(e.uri);\n            if ( entryInfo = encodedUriToEntryInfoMap[e.eURI] ) {\n                e.bindStarEntry( entryInfo );\n            }\n            if (typeof(e.can_comment) == 'undefined') {\n                e.setCanComment(res.can_comment);\n            }\n            e.showStars();\n            e.showCommentButton();\n        }\n        if (res.rks) {\n            if (!Hatena.Visitor || typeof(Hatena.Visitor) == 'undefined') {\n                Hatena.Visitor = {};\n            }\n            if (!Hatena.Visitor.RKS) {\n                Hatena.Visitor.RKS = res.rks;\n            }\n        }\n        Hatena.Star.User.RKS.ready(res.rks);\n    },\n    loaded: false,\n    entries: null\n});\nTen.EventDispatcher.implementEventDispatcher(Hatena.Star.EntryLoader);\n\n/* Hatena.Star.ConfigLoader */\nHatena.Star.ConfigLoader = new Ten.Class({\n    initialize: function() {\n        var c = Hatena.Star.ConfigLoader;\n        if (c.loaded) return true;\n        if (Hatena.Star.SiteConfig ||\n            Hatena.Star.EntryLoader.headerTagAndClassName ||\n            Hatena.Star.EntryLoader.loadEntries) {\n                c.finishLoad();\n                return true;\n            } else {\n                c.loadConfig();\n                return null;\n            }\n    },\n    loadConfig: function() {\n        var uri = Hatena.Star.BaseURL.replace(/^http:/, Hatena.Star.BaseURLProtocol) + 'siteconfig.json?host=' + location.hostname;\n        new Ten.JSONP(uri, Hatena.Star.ConfigLoader, 'setConfig');\n    },\n    setConfig: function(data) {\n        var host = location.hostname;\n        var conf = data[host];\n        if (!conf && host.match(/^[\\w-]+(\\..+)$/)) {\n            var host = '*' + RegExp.$1;\n            conf = data[host] || [];\n        }\n        var path = location.pathname;\n        for (var i = 0; i < conf.length; i++) {\n            var c = conf[i];\n            if (path.match(new RegExp(c.path))) {\n                Hatena.Star.SiteConfig = c;\n                Hatena.Star.ConfigLoader.finishLoad();\n                return true;\n            }\n        }\n        Hatena.Star.ConfigLoader.finishLoad();\n        return null;\n    },\n    finishLoad: function() {\n        var c = Hatena.Star.ConfigLoader;\n        c.dispatchEvent('load');\n        c.loaded = true;\n    },\n    loaded: false\n});\nTen.EventDispatcher.implementEventDispatcher(Hatena.Star.ConfigLoader);\n\n/* Hatena.Star.WindowObserver */\nHatena.Star.WindowObserver = new Ten.Class({\n    initialize: function() {\n        var c = Hatena.Star.WindowObserver;\n        if (c.observer) return;\n        Hatena.Star.loaded = true;\n        if (Hatena.Star.onLoadFunctions) {\n            for (var i = 0; i < Hatena.Star.onLoadFunctions.length; i++) {\n                Hatena.Star.onLoadFunctions[i]();\n            }\n            Hatena.Star.onLoadFunctions = [];\n        }\n        c.observer = Ten.DOM.addEventListener('onload', function() {\n            c.finishLoad();\n            if (!Ten.Browser.isFirefox || parseInt(Ten.Browser.version) > 2) {\n                new Ten.Observer(document.body, 'onclick', function(event){\n                    try{\n                        var pallet = new Hatena.Star.Pallet();\n                        pallet.hide();\n                    } catch(e) {}\n                });\n            }\n            Hatena.Star.ConfigLoader.addEventListener('load', function() {\n                new Hatena.Star.EntryLoader();\n            });\n            new Hatena.Star.ConfigLoader();\n        });\n    },\n    finishLoad: function() {\n        var c = Hatena.Star.WindowObserver;\n        c.dispatchEvent('load');\n        c.loaded = true;\n    },\n    observer: null\n});\nTen.EventDispatcher.implementEventDispatcher(Hatena.Star.WindowObserver);\n\n/* Hatena.Star.Text */\nHatena.Star.Text = {};\n\nHatena.Star.useSmartPhoneStar = true;\n\n\n/* start */\nnew Hatena.Star.WindowObserver();\n\n/* Hatena.Star.SiteConfig */\n/* sample configuration for Hatena Diary */\n/*\n// Hatena.Star.SiteConfig = {\n//     entryNodes: {\n//         'div.section': {\n//             uri: 'h3 a',\n//             title: 'h3',\n//             container: 'h3'\n//         }\n//     }\n// };\n*/\n\n/*\n=head1 NAME\n\nHatenaStar.js - Make your blog more fun!\n\n=head1 SYNOPSIS\n\nIn your blog header or body,\n\n  <script type=\"text/javascript\" src=\"http://s.hatena.com/js/HatenaStar.js\"></script>\n\nYou may have to configure these settings for your blog if you don't use\nmajor  blog hosting service.\n\n  <script type=\"text/javascript\" src=\"http://s.hatena.com/js/HatenaStar.js\"></script>\n  <script type=\"text/javascript>\n    Hatena.Star.SiteConfig = {\n      entryNodes: {\n        'div.entry': {\n          uri: 'a.permalink',\n          title: 'h3.title',\n          container: 'h3.title'\n        }\n      }\n    };\n  </script>\n\nYou can also register your Hatena ID by adding your blog's url at\n\n  http://s.hatena.com/ (English)\n  http://s.hatena.ne.jp/ (Japanese)\n\nYou can receive comments from your favorite users if you register your ID.\n\n=head1 SITE CONFIGURATION\n\nSite configuration style changed in Sep. 2007. To configure Hatena Star\nfor your site, please specify your html element structure as below.\n\n  <script type=\"text/javascript>\n    Hatena.Star.SiteConfig = {\n      entryNodes: {\n        'div.entry': {\n          uri: 'a.permalink',\n          title: 'h3.title',\n          container: 'h3.title'\n        }\n      }\n    };\n  </script>\n\n(to be continued..)\n\n=head1 CUTOMIZE IMAGES\n\nYou can customize the default image settings for your page if you want.\n\n  // change the images of stars, buttons by editing your style sheets\n  .hatena-star-add-button-image {\n    background-image: url(http://exapmle.com/add.gif);\n  }\n  .hatena-star-comment-button-image {\n    background-image: url(http://exapmle.com/comment.gif);\n  }\n  .hatena-star-star-image {\n    background-image: url(http://exapmle.com/star.gif);\n  }\n\n=head1 CHANGES\n\nPlease see E<lt>http://s.hatena.com/js/Hatena/Star/HatenaStar.ChangesE<gt>.\n\n=head1 AUTHOR\n\nJunya Kondo, E<lt>http://d.hatena.ne.jp/jkondo/E<gt>\nYuichi Tateno, motemen, nagayama\n\n=head1 COPYRIGHT AND LICENSE\n\nCopyright (C) Hatena Inc. All Rights Reserved.\n\nThis library is free software; you may redistribute it and/or modify\nit under the same terms as the Perl programming language.\n\n=cut\n*/\nHatena.Star.BaseURL = 'http://s.hatena.ne.jp/';\nHatena.Star.PortalURL = 'http://www.hatena.ne.jp/';\nHatena.Star.Text.loading = '\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D\\u2026';\nHatena.Star.Text.close   = '\\u9589\\u3058\\u308B';\nHatena.Star.Text.colorstar_for_smartphone = \"\\u4ED8\\u3051\\u305F\\u3044\\u8272\\u306E\\u30B9\\u30BF\\u30FC\\u3092\\u30BF\\u30C3\\u30C1\";\nHatena.Star.Text.for_colorstar_shop = \"\\u30AB\\u30E9\\u30FC\\u30B9\\u30BF\\u30FC\\u30B7\\u30E7\\u30C3\\u30D7\\u3078\";\nHatena.Star.Text.unlimited = \"\\u7121\\u9650\";\nHatena.Star.Text.sending   = \"\\u9001\\u4FE1\\u4E2D...\";\nHatena.Star.UgoMemoURL = 'http://ugomemo.hatena.ne.jp/';\nHatena.Star.HaikuURL   = 'http://h.hatena.ne.jp/';\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 34814
        },
        "cache": {},
        "timings": {
          "blocked": 1.77400000393391,
          "dns": -1,
          "connect": -1,
          "send": 0.08899997919797986,
          "wait": 2161.5760000422583,
          "receive": 82209.60599998944,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.065Z",
        "time": 13306.004000129178,
        "request": {
          "method": "GET",
          "url": "https://platform.twitter.com/widgets.js",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/widgets.js"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": ":authority",
              "value": "platform.twitter.com"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 404,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "date",
              "value": "Fri, 17 Feb 2017 18:59:52 GMT"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "status",
              "value": "404"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "20"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "text/plain",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 152,
          "_error": ""
        },
        "cache": {},
        "timings": {
          "blocked": 9954.48000007309,
          "dns": -1,
          "connect": 1399.3309999350095,
          "send": 0.146999955200954,
          "wait": 1951.4050001744,
          "receive": 0.6409999914776563,
          "ssl": 1399.0350000094204
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "10223",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.066Z",
        "time": 2.4049999192357063,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/apis.google.com/js/platform.js",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 14:56:17 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f5411-a467\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "application/javascript"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 42087,
            "mimeType": "application/javascript",
            "text": "var gapi=window.gapi=window.gapi||{};gapi._bs=new Date().getTime();(function(){var aa=function(a,b,c){return a.call.apply(a.bind,arguments)},ba=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}},ca=function(a,b,c){ca=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?aa:ba;return ca.apply(null,arguments)};/*\n gapi.loader.OBJECT_CREATE_TEST_OVERRIDE &&*/\nvar n=window,p=document,q=n.location,da=function(){},ea=/\\[native code\\]/,u=function(a,b,c){return a[b]=a[b]||c},fa=function(a){for(var b=0;b<this.length;b++)if(this[b]===a)return b;return-1},ga=function(a){a=a.sort();for(var b=[],c=void 0,d=0;d<a.length;d++){var e=a[d];e!=c&&b.push(e);c=e}return b},ha=/&/g,ia=/</g,ja=/>/g,ka=/\"/g,la=/'/g,ma=function(a){return String(a).replace(ha,\"&amp;\").replace(ia,\"&lt;\").replace(ja,\"&gt;\").replace(ka,\"&quot;\").replace(la,\"&#39;\")},v=function(){var a;if((a=Object.create)&&\nea.test(a))a=a(null);else{a={};for(var b in a)a[b]=void 0}return a},x=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},z=function(a){if(ea.test(Object.keys))return Object.keys(a);var b=[],c;for(c in a)x(a,c)&&b.push(c);return b},A=function(a,b){a=a||{};for(var c in a)x(a,c)&&(b[c]=a[c])},na=function(a){return function(){n.setTimeout(a,0)}},B=function(a,b){if(!a)throw Error(b||\"\");},C=u(n,\"gapi\",{});var D=function(a,b,c){var d=new RegExp(\"([#].*&|[#])\"+b+\"=([^&#]*)\",\"g\");b=new RegExp(\"([?#].*&|[?#])\"+b+\"=([^&#]*)\",\"g\");if(a=a&&(d.exec(a)||b.exec(a)))try{c=decodeURIComponent(a[2])}catch(e){}return c},oa=new RegExp(/^/.source+/([a-zA-Z][-+.a-zA-Z0-9]*:)?/.source+/(\\/\\/[^\\/?#]*)?/.source+/([^?#]*)?/.source+/(\\?([^#]*))?/.source+/(#((#|[^#])*))?/.source+/$/.source),pa=/[\\ud800-\\udbff][\\udc00-\\udfff]|[^!-~]/g,ra=new RegExp(/(%([^0-9a-fA-F%]|[0-9a-fA-F]([^0-9a-fA-F%])?)?)*/.source+/%($|[^0-9a-fA-F]|[0-9a-fA-F]($|[^0-9a-fA-F]))/.source,\n\"g\"),sa=/%([a-f]|[0-9a-fA-F][a-f])/g,ta=/^(https?|ftp|file|chrome-extension):$/i,E=function(a){a=String(a);a=a.replace(pa,function(a){try{return encodeURIComponent(a)}catch(f){return encodeURIComponent(a.replace(/^[^%]+$/g,\"\\ufffd\"))}}).replace(ra,function(a){return a.replace(/%/g,\"%25\")}).replace(sa,function(a){return a.toUpperCase()});a=a.match(oa)||[];var b=v(),c=function(a){return a.replace(/\\\\/g,\"%5C\").replace(/\\^/g,\"%5E\").replace(/`/g,\"%60\").replace(/\\{/g,\"%7B\").replace(/\\|/g,\"%7C\").replace(/\\}/g,\n\"%7D\")},d=!!(a[1]||\"\").match(ta);b.v=c((a[1]||\"\")+(a[2]||\"\")+(a[3]||(a[2]&&d?\"/\":\"\")));d=function(a){return c(a.replace(/\\?/g,\"%3F\").replace(/\\#/g,\"%23\"))};b.query=a[5]?[d(a[5])]:[];b.c=a[7]?[d(a[7])]:[];return b},ua=function(a){return a.v+(0<a.query.length?\"?\"+a.query.join(\"&\"):\"\")+(0<a.c.length?\"#\"+a.c.join(\"&\"):\"\")},va=function(a,b){var c=[];if(a)for(var d in a)if(x(a,d)&&null!=a[d]){var e=b?b(a[d]):a[d];c.push(encodeURIComponent(d)+\"=\"+encodeURIComponent(e))}return c},wa=function(a,b,c,d){a=E(a);\na.query.push.apply(a.query,va(b,d));a.c.push.apply(a.c,va(c,d));return ua(a)},xa=new RegExp(/\\/?\\??#?/.source+\"(\"+/[\\/?#]/i.source+\"|\"+/[\\uD800-\\uDBFF]/i.source+\"|\"+/%[c-f][0-9a-f](%[89ab][0-9a-f]){0,2}(%[89ab]?)?/i.source+\"|\"+/%[0-9a-f]?/i.source+\")$\",\"i\"),ya=function(a,b){var c=E(b);b=c.v;c.query.length&&(b+=\"?\"+c.query.join(\"\"));c.c.length&&(b+=\"#\"+c.c.join(\"\"));var d=\"\";2E3<b.length&&(c=b,b=b.substr(0,2E3),b=b.replace(xa,\"\"),d=c.substr(b.length));var e=a.createElement(\"div\");a=a.createElement(\"a\");\nc=E(b);b=c.v;c.query.length&&(b+=\"?\"+c.query.join(\"\"));c.c.length&&(b+=\"#\"+c.c.join(\"\"));a.href=b;e.appendChild(a);e.innerHTML=e.innerHTML;b=String(e.firstChild.href);e.parentNode&&e.parentNode.removeChild(e);c=E(b+d);b=c.v;c.query.length&&(b+=\"?\"+c.query.join(\"\"));c.c.length&&(b+=\"#\"+c.c.join(\"\"));return b},za=/^https?:\\/\\/[^\\/%\\\\?#\\s]+\\/[^\\s]*$/i;var H=function(a,b,c,d){if(n[c+\"EventListener\"])n[c+\"EventListener\"](a,b,!1);else if(n[d+\"tachEvent\"])n[d+\"tachEvent\"](\"on\"+a,b)},Aa=function(){var a=p.readyState;return\"complete\"===a||\"interactive\"===a&&-1==navigator.userAgent.indexOf(\"MSIE\")},Da=function(a){var b=Ba;if(!Aa())try{b()}catch(c){}Ca(a)},Ca=function(a){if(Aa())a();else{var b=!1,c=function(){if(!b)return b=!0,a.apply(this,arguments)};n.addEventListener?(n.addEventListener(\"load\",c,!1),n.addEventListener(\"DOMContentLoaded\",c,!1)):n.attachEvent&&\n(n.attachEvent(\"onreadystatechange\",function(){Aa()&&c.apply(this,arguments)}),n.attachEvent(\"onload\",c))}},Ea=function(a){for(;a.firstChild;)a.removeChild(a.firstChild)},Fa={button:!0,div:!0,span:!0};var I;I=u(n,\"___jsl\",v());u(I,\"I\",0);u(I,\"hel\",10);var J=function(a){return I.dpo?I.h:D(a,\"jsh\",I.h)},Ga=function(a){var b=u(I,\"sws\",[]);b.push.apply(b,a)},Ha=function(a){return u(I,\"watt\",v())[a]},Ia=function(a){var b=u(I,\"PQ\",[]);I.PQ=[];var c=b.length;if(0===c)a();else for(var d=0,e=function(){++d===c&&a()},f=0;f<c;f++)b[f](e)},Ja=function(a){return u(u(I,\"H\",v()),a,v())};var K=u(I,\"perf\",v()),Ka=u(K,\"g\",v()),La=u(K,\"i\",v());u(K,\"r\",[]);v();v();var Ma=function(a,b,c){var d=K.r;\"function\"===typeof d?d(a,b,c):d.push([a,b,c])},L=function(a,b,c){Ka[a]=!b&&Ka[a]||c||(new Date).getTime();Ma(a)},Oa=function(a,b,c){b&&0<b.length&&(b=Na(b),c&&0<c.length&&(b+=\"___\"+Na(c)),28<b.length&&(b=b.substr(0,28)+(b.length-28)),c=b,b=u(La,\"_p\",v()),u(b,c,v())[a]=(new Date).getTime(),Ma(a,\"_p\",c))},Na=function(a){return a.join(\"__\").replace(/\\./g,\"_\").replace(/\\-/g,\"_\").replace(/\\,/g,\"_\")};var Pa=v(),M=[],N=function(a){throw Error(\"Bad hint\"+(a?\": \"+a:\"\"));};M.push([\"jsl\",function(a){for(var b in a)if(x(a,b)){var c=a[b];\"object\"==typeof c?I[b]=u(I,b,[]).concat(c):u(I,b,c)}if(b=a.u)a=u(I,\"us\",[]),a.push(b),(b=/^https:(.*)$/.exec(b))&&a.push(\"http:\"+b[1])}]);var Qa=/^(\\/[a-zA-Z0-9_\\-]+)+$/,Ra=[/\\/amp\\//,/\\/amp$/,/^\\/amp$/],Sa=/^[a-zA-Z0-9\\-_\\.,!]+$/,Ta=/^gapi\\.loaded_[0-9]+$/,Ua=/^[a-zA-Z0-9,._-]+$/,Ya=function(a,b,c,d){var e=a.split(\";\"),f=e.shift(),g=Pa[f],k=null;g?k=g(e,b,c,d):N(\"no hint processor for: \"+f);k||N(\"failed to generate load url\");b=k;c=b.match(Va);(d=b.match(Wa))&&1===d.length&&Xa.test(b)&&c&&1===c.length||N(\"failed sanity: \"+a);return k},ab=function(a,b,c,d){a=Za(a);Ta.test(c)||N(\"invalid_callback\");b=$a(b);d=d&&d.length?$a(d):null;var e=\nfunction(a){return encodeURIComponent(a).replace(/%2C/g,\",\")};return[encodeURIComponent(a.Z).replace(/%2C/g,\",\").replace(/%2F/g,\"/\"),\"/k=\",e(a.version),\"/m=\",e(b),d?\"/exm=\"+e(d):\"\",\"/rt=j/sv=1/d=1/ed=1\",a.J?\"/am=\"+e(a.J):\"\",a.S?\"/rs=\"+e(a.S):\"\",a.U?\"/t=\"+e(a.U):\"\",\"/cb=\",e(c)].join(\"\")},Za=function(a){\"/\"!==a.charAt(0)&&N(\"relative path\");for(var b=a.substring(1).split(\"/\"),c=[];b.length;){a=b.shift();if(!a.length||0==a.indexOf(\".\"))N(\"empty/relative directory\");else if(0<a.indexOf(\"=\")){b.unshift(a);\nbreak}c.push(a)}a={};for(var d=0,e=b.length;d<e;++d){var f=b[d].split(\"=\"),g=decodeURIComponent(f[0]),k=decodeURIComponent(f[1]);2==f.length&&g&&k&&(a[g]=a[g]||k)}b=\"/\"+c.join(\"/\");Qa.test(b)||N(\"invalid_prefix\");c=0;for(d=Ra.length;c<d;++c)Ra[c].test(b)&&N(\"invalid_prefix\");c=bb(a,\"k\",!0);d=bb(a,\"am\");e=bb(a,\"rs\");a=bb(a,\"t\");return{Z:b,version:c,J:d,S:e,U:a}},$a=function(a){for(var b=[],c=0,d=a.length;c<d;++c){var e=a[c].replace(/\\./g,\"_\").replace(/-/g,\"_\");Ua.test(e)&&b.push(e)}return b.join(\",\")},\nbb=function(a,b,c){a=a[b];!a&&c&&N(\"missing: \"+b);if(a){if(Sa.test(a))return a;N(\"invalid: \"+b)}return null},Xa=/^https?:\\/\\/[a-z0-9_.-]+\\.google\\.com(:\\d+)?\\/[a-zA-Z0-9_.,!=\\-\\/]+$/,Wa=/\\/cb=/g,Va=/\\/\\//g,cb=function(){var a=J(q.href);if(!a)throw Error(\"Bad hint\");return a};Pa.m=function(a,b,c,d){(a=a[0])||N(\"missing_hint\");return\"https://apis.google.com\"+ab(a,b,c,d)};var O=decodeURI(\"%73cript\"),db=/^[-+_0-9\\/A-Za-z]+={0,2}$/,eb=function(a,b){for(var c=[],d=0;d<a.length;++d){var e=a[d];e&&0>fa.call(b,e)&&c.push(e)}return c},fb=function(){var a=I.nonce;if(void 0!==a)return a&&a===String(a)&&a.match(db)?a:I.nonce=null;var b=u(I,\"us\",[]);if(!b||!b.length)return I.nonce=null;for(var c=p.getElementsByTagName(O),d=0,e=c.length;d<e;++d){var f=c[d];if(f.src&&(a=String(f.getAttribute(\"nonce\")||\"\")||null)){for(var g=0,k=b.length;g<k&&b[g]!==f.src;++g);if(g!==k&&a&&a===String(a)&&\na.match(db))return I.nonce=a}}return null},hb=function(a){if(\"loading\"!=p.readyState)gb(a);else{var b=fb(),c=\"\";null!==b&&(c=' nonce=\"'+b+'\"');p.write(\"<\"+O+' src=\"'+encodeURI(a)+'\"'+c+\"></\"+O+\">\")}},gb=function(a){var b=p.createElement(O);b.setAttribute(\"src\",a);a=fb();null!==a&&b.setAttribute(\"nonce\",a);b.async=\"true\";(a=p.getElementsByTagName(O)[0])?a.parentNode.insertBefore(b,a):(p.head||p.body||p.documentElement).appendChild(b)},ib=function(a,b){var c=b&&b._c;if(c)for(var d=0;d<M.length;d++){var e=\nM[d][0],f=M[d][1];f&&x(c,e)&&f(c[e],a,b)}},kb=function(a,b,c){jb(function(){var c;c=b===J(q.href)?u(C,\"_\",v()):v();c=u(Ja(b),\"_\",c);a(c)},c)},P=function(a,b){var c=b||{};\"function\"==typeof b&&(c={},c.callback=b);ib(a,c);b=a?a.split(\":\"):[];var d=c.h||cb(),e=u(I,\"ah\",v());if(e[\"::\"]&&b.length){a=[];for(var f=null;f=b.shift();){var g=f.split(\".\"),g=e[f]||e[g[1]&&\"ns:\"+g[0]||\"\"]||d,k=a.length&&a[a.length-1]||null,h=k;k&&k.hint==g||(h={hint:g,M:[]},a.push(h));h.M.push(f)}var l=a.length;if(1<l){var m=\nc.callback;m&&(c.callback=function(){0==--l&&m()})}for(;b=a.shift();)lb(b.M,c,b.hint)}else lb(b||[],c,d)},lb=function(a,b,c){a=ga(a)||[];var d=b.callback,e=b.config,f=b.timeout,g=b.ontimeout,k=b.onerror,h=void 0;\"function\"==typeof k&&(h=k);var l=null,m=!1;if(f&&!g||!f&&g)throw\"Timeout requires both the timeout parameter and ontimeout parameter to be set\";var k=u(Ja(c),\"r\",[]).sort(),r=u(Ja(c),\"L\",[]).sort(),w=[].concat(k),t=function(a,b){if(m)return 0;n.clearTimeout(l);r.push.apply(r,y);var d=((C||\n{}).config||{}).update;d?d(e):e&&u(I,\"cu\",[]).push(e);if(b){Oa(\"me0\",a,w);try{kb(b,c,h)}finally{Oa(\"me1\",a,w)}}return 1};0<f&&(l=n.setTimeout(function(){m=!0;g()},f));var y=eb(a,r);if(y.length){var y=eb(a,k),F=u(I,\"CP\",[]),G=F.length;F[G]=function(a){if(!a)return 0;Oa(\"ml1\",y,w);var b=function(b){F[G]=null;t(y,a)&&Ia(function(){d&&d();b()})},c=function(){var a=F[G+1];a&&a()};0<G&&F[G-1]?F[G]=function(){b(c)}:b(c)};if(y.length){var qa=\"loaded_\"+I.I++;C[qa]=function(a){F[G](a);C[qa]=null};a=Ya(c,y,\n\"gapi.\"+qa,k);k.push.apply(k,y);Oa(\"ml0\",y,w);b.sync||n.___gapisync?hb(a):gb(a)}else F[G](da)}else t(y)&&d&&d()};var jb=function(a,b){if(I.hee&&0<I.hel)try{return a()}catch(c){b&&b(c),I.hel--,P(\"debug_error\",function(){try{window.___jsl.hefn(c)}catch(d){throw c;}})}else try{return a()}catch(c){throw b&&b(c),c;}};C.load=function(a,b){return jb(function(){return P(a,b)})};var Q=function(a){var b=window.___jsl=window.___jsl||{};b[a]=b[a]||[];return b[a]},R=function(a){var b=window.___jsl=window.___jsl||{};b.cfg=!a&&b.cfg||{};return b.cfg},mb=function(a){return\"object\"===typeof a&&/\\[native code\\]/.test(a.push)},S=function(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&(a[c]&&b[c]&&\"object\"===typeof a[c]&&\"object\"===typeof b[c]&&!mb(a[c])&&!mb(b[c])?S(a[c],b[c]):b[c]&&\"object\"===typeof b[c]?(a[c]=mb(b[c])?[]:{},S(a[c],b[c])):a[c]=b[c])},nb=function(a){if(a&&!/^\\s+$/.test(a)){for(;0==\na.charCodeAt(a.length-1);)a=a.substring(0,a.length-1);var b;try{b=window.JSON.parse(a)}catch(c){}if(\"object\"===typeof b)return b;try{b=(new Function(\"return (\"+a+\"\\n)\"))()}catch(c){}if(\"object\"===typeof b)return b;try{b=(new Function(\"return ({\"+a+\"\\n})\"))()}catch(c){}return\"object\"===typeof b?b:{}}},ob=function(a){R(!0);var b=window.___gcfg,c=Q(\"cu\");if(b&&b!==window.___gu){var d={};S(d,b);c.push(d);window.___gu=b}var b=Q(\"cu\"),e=document.scripts||document.getElementsByTagName(\"script\")||[],d=[],\nf=[];f.push.apply(f,Q(\"us\"));for(var g=0;g<e.length;++g)for(var k=e[g],h=0;h<f.length;++h)k.src&&0==k.src.indexOf(f[h])&&d.push(k);0==d.length&&0<e.length&&e[e.length-1].src&&d.push(e[e.length-1]);for(e=0;e<d.length;++e)d[e].getAttribute(\"gapi_processed\")||(d[e].setAttribute(\"gapi_processed\",!0),(f=d[e])?(g=f.nodeType,f=3==g||4==g?f.nodeValue:f.textContent||f.innerText||f.innerHTML||\"\"):f=void 0,(f=nb(f))&&b.push(f));a&&(d={},S(d,a),c.push(d));d=Q(\"cd\");a=0;for(b=d.length;a<b;++a)S(R(),d[a]);d=Q(\"ci\");\na=0;for(b=d.length;a<b;++a)S(R(),d[a]);a=0;for(b=c.length;a<b;++a)S(R(),c[a])},T=function(a){if(!a)return R();a=a.split(\"/\");for(var b=R(),c=0,d=a.length;b&&\"object\"===typeof b&&c<d;++c)b=b[a[c]];return c===a.length&&void 0!==b?b:void 0},pb=function(a,b){var c=a;if(\"string\"===typeof a){var d=c={};a=a.split(\"/\");for(var e=0,f=a.length;e<f-1;++e)var g={},d=d[a[e]]=g;d[a[e]]=b}ob(c)};var qb=function(){var a=window.__GOOGLEAPIS;a&&(a.googleapis&&!a[\"googleapis.config\"]&&(a[\"googleapis.config\"]=a.googleapis),u(I,\"ci\",[]).push(a),window.__GOOGLEAPIS=void 0)};var rb={apppackagename:1,callback:1,clientid:1,cookiepolicy:1,openidrealm:-1,includegrantedscopes:-1,requestvisibleactions:1,scope:1},sb=!1,tb=v(),ub=function(){if(!sb){for(var a=document.getElementsByTagName(\"meta\"),b=0;b<a.length;++b){var c=a[b].name.toLowerCase();if(0==c.lastIndexOf(\"google-signin-\",0)){var c=c.substring(14),d=a[b].content;rb[c]&&d&&(tb[c]=d)}}if(window.self!==window.top){var a=document.location.toString(),e;for(e in rb)0<rb[e]&&(b=D(a,e,\"\"))&&(tb[e]=b)}sb=!0}e=v();A(tb,e);return e},\nvb=function(a){return!!(a.clientid&&a.scope&&a.callback)};var wb=window.console,xb=function(a){wb&&wb.log&&wb.log(a)};var yb=function(){return!!I.oa},zb=function(){};var U=u(I,\"rw\",v()),Ab=function(a){for(var b in U)a(U[b])},Bb=function(a,b){(a=U[a])&&a.state<b&&(a.state=b)};var Cb;var Db=/^https?:\\/\\/(?:\\w|[\\-\\.])+\\.google\\.(?:\\w|[\\-:\\.])+(?:\\/[^\\?\\#]*)?\\/u\\/(\\d)\\//,Eb=/^https?:\\/\\/(?:\\w|[\\-\\.])+\\.google\\.(?:\\w|[\\-:\\.])+(?:\\/[^\\?\\#]*)?\\/b\\/(\\d{10,21})\\//,Fb=function(a){var b=T(\"googleapis.config/sessionIndex\");\"string\"===typeof b&&254<b.length&&(b=null);null==b&&(b=window.__X_GOOG_AUTHUSER);\"string\"===typeof b&&254<b.length&&(b=null);if(null==b){var c=window.google;c&&(b=c.authuser)}\"string\"===typeof b&&254<b.length&&(b=null);null==b&&(a=a||window.location.href,b=D(a,\"authuser\")||\nnull,null==b&&(b=(b=a.match(Db))?b[1]:null));if(null==b)return null;b=String(b);254<b.length&&(b=null);return b},Gb=function(a){var b=T(\"googleapis.config/sessionDelegate\");\"string\"===typeof b&&21<b.length&&(b=null);null==b&&(b=(a=(a||window.location.href).match(Eb))?a[1]:null);if(null==b)return null;b=String(b);21<b.length&&(b=null);return b};var Hb=function(){this.i=-1};var V=function(){this.i=64;this.b=[];this.C=[];this.V=[];this.w=[];this.w[0]=128;for(var a=1;a<this.i;++a)this.w[a]=0;this.A=this.l=0;this.reset()};(function(){function a(){}a.prototype=Hb.prototype;V.fa=Hb.prototype;V.prototype=new a;V.v=function(a,c,d){for(var b=Array(arguments.length-2),f=2;f<arguments.length;f++)b[f-2]=arguments[f];return Hb.prototype[c].apply(a,b)}})();\nV.prototype.reset=function(){this.b[0]=1732584193;this.b[1]=4023233417;this.b[2]=2562383102;this.b[3]=271733878;this.b[4]=3285377520;this.A=this.l=0};\nvar Ib=function(a,b,c){c||(c=0);var d=a.V;if(\"string\"==typeof b)for(var e=0;16>e;e++)d[e]=b.charCodeAt(c)<<24|b.charCodeAt(c+1)<<16|b.charCodeAt(c+2)<<8|b.charCodeAt(c+3),c+=4;else for(e=0;16>e;e++)d[e]=b[c]<<24|b[c+1]<<16|b[c+2]<<8|b[c+3],c+=4;for(e=16;80>e;e++){var f=d[e-3]^d[e-8]^d[e-14]^d[e-16];d[e]=(f<<1|f>>>31)&4294967295}b=a.b[0];c=a.b[1];for(var g=a.b[2],k=a.b[3],h=a.b[4],l,e=0;80>e;e++)40>e?20>e?(f=k^c&(g^k),l=1518500249):(f=c^g^k,l=1859775393):60>e?(f=c&g|k&(c|g),l=2400959708):(f=c^g^k,\nl=3395469782),f=(b<<5|b>>>27)+f+h+l+d[e]&4294967295,h=k,k=g,g=(c<<30|c>>>2)&4294967295,c=b,b=f;a.b[0]=a.b[0]+b&4294967295;a.b[1]=a.b[1]+c&4294967295;a.b[2]=a.b[2]+g&4294967295;a.b[3]=a.b[3]+k&4294967295;a.b[4]=a.b[4]+h&4294967295};\nV.prototype.update=function(a,b){if(null!=a){void 0===b&&(b=a.length);for(var c=b-this.i,d=0,e=this.C,f=this.l;d<b;){if(0==f)for(;d<=c;)Ib(this,a,d),d+=this.i;if(\"string\"==typeof a)for(;d<b;){if(e[f]=a.charCodeAt(d),++f,++d,f==this.i){Ib(this,e);f=0;break}}else for(;d<b;)if(e[f]=a[d],++f,++d,f==this.i){Ib(this,e);f=0;break}}this.l=f;this.A+=b}};\nV.prototype.digest=function(){var a=[],b=8*this.A;56>this.l?this.update(this.w,56-this.l):this.update(this.w,this.i-(this.l-56));for(var c=this.i-1;56<=c;c--)this.C[c]=b&255,b/=256;Ib(this,this.C);for(c=b=0;5>c;c++)for(var d=24;0<=d;d-=8)a[b]=this.b[c]>>d&255,++b;return a};var Jb=function(){this.G=new V};Jb.prototype.reset=function(){this.G.reset()};var Kb=n.crypto,Lb=!1,Mb=0,Nb=0,Ob=1,Pb=0,Qb=\"\",Rb=function(a){a=a||n.event;var b=a.screenX+a.clientX<<16,b=b+(a.screenY+a.clientY),b=(new Date).getTime()%1E6*b;Ob=Ob*b%Pb;0<Mb&&++Nb==Mb&&H(\"mousemove\",Rb,\"remove\",\"de\")},Sb=function(a){var b=new Jb;a=unescape(encodeURIComponent(a));for(var c=[],d=0,e=a.length;d<e;++d)c.push(a.charCodeAt(d));b.G.update(c);b=b.G.digest();a=\"\";for(c=0;c<b.length;c++)a+=\"0123456789ABCDEF\".charAt(Math.floor(b[c]/16))+\"0123456789ABCDEF\".charAt(b[c]%16);return a},Lb=!!Kb&&\n\"function\"==typeof Kb.getRandomValues;Lb||(Pb=1E6*(screen.width*screen.width+screen.height),Qb=Sb(p.cookie+\"|\"+p.location+\"|\"+(new Date).getTime()+\"|\"+Math.random()),Mb=T(\"random/maxObserveMousemove\")||0,0!=Mb&&H(\"mousemove\",Rb,\"add\",\"at\"));var Tb=function(){var a=Ob,a=a+parseInt(Qb.substr(0,20),16);Qb=Sb(Qb);return a/(Pb+Math.pow(16,20))},Ub=function(){var a=new n.Uint32Array(1);Kb.getRandomValues(a);return Number(\"0.\"+a[0])};var Vb=function(){var a=I.onl;if(!a){a=v();I.onl=a;var b=v();a.e=function(a){var c=b[a];c&&(delete b[a],c())};a.a=function(a,d){b[a]=d};a.r=function(a){delete b[a]}}return a},Wb=function(a,b){b=b.onload;return\"function\"===typeof b?(Vb().a(a,b),b):null},Xb=function(a){B(/^\\w+$/.test(a),\"Unsupported id - \"+a);Vb();return'onload=\"window.___jsl.onl.e(&#34;'+a+'&#34;)\"'},Yb=function(a){Vb().r(a)};var Zb={allowtransparency:\"true\",frameborder:\"0\",hspace:\"0\",marginheight:\"0\",marginwidth:\"0\",scrolling:\"no\",style:\"\",tabindex:\"0\",vspace:\"0\",width:\"100%\"},$b={allowtransparency:!0,onload:!0},ac=0,bc=function(a){B(!a||za.test(a),\"Illegal url for new iframe - \"+a)},cc=function(a,b,c,d,e){bc(c.src);var f,g=Wb(d,c),k=g?Xb(d):\"\";try{document.all&&(f=a.createElement('<iframe frameborder=\"'+ma(String(c.frameborder))+'\" scrolling=\"'+ma(String(c.scrolling))+'\" '+k+' name=\"'+ma(String(c.name))+'\"/>'))}catch(l){}finally{f||\n(f=a.createElement(\"iframe\"),g&&(f.onload=function(){f.onload=null;g.call(this)},Yb(d)))}f.setAttribute(\"ng-non-bindable\",\"\");for(var h in c)a=c[h],\"style\"===h&&\"object\"===typeof a?A(a,f.style):$b[h]||f.setAttribute(h,String(a));(h=e&&e.beforeNode||null)||e&&e.dontclear||Ea(b);b.insertBefore(f,h);f=h?h.previousSibling:b.lastChild;c.allowtransparency&&(f.allowTransparency=!0);return f};var dc=/^:[\\w]+$/,ec=/:([a-zA-Z_]+):/g,fc=function(){var a=Fb()||\"0\",b=Gb(),c;c=Fb(void 0)||a;var d=Gb(void 0),e=\"\";c&&(e+=\"u/\"+encodeURIComponent(String(c))+\"/\");d&&(e+=\"b/\"+encodeURIComponent(String(d))+\"/\");c=e||null;(e=(d=!1===T(\"isLoggedIn\"))?\"_/im/\":\"\")&&(c=\"\");var f=T(\"iframes/:socialhost:\"),g=T(\"iframes/:im_socialhost:\");return Cb={socialhost:f,ctx_socialhost:d?g:f,session_index:a,session_delegate:b,session_prefix:c,im_prefix:e}},gc=function(a,b){return fc()[b]||\"\"},hc=function(a){return function(b,\nc){return a?fc()[c]||a[c]||\"\":fc()[c]||\"\"}};var ic={\"\\b\":\"\\\\b\",\"\\t\":\"\\\\t\",\"\\n\":\"\\\\n\",\"\\f\":\"\\\\f\",\"\\r\":\"\\\\r\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\"},jc=function(a){var b,c,d;b=/[\\\"\\\\\\x00-\\x1f\\x7f-\\x9f]/g;if(void 0!==a){switch(typeof a){case \"string\":return b.test(a)?'\"'+a.replace(b,function(a){var b=ic[a];if(b)return b;b=a.charCodeAt();return\"\\\\u00\"+Math.floor(b/16).toString(16)+(b%16).toString(16)})+'\"':'\"'+a+'\"';case \"number\":return isFinite(a)?String(a):\"null\";case \"boolean\":case \"null\":return String(a);case \"object\":if(!a)return\"null\";b=[];if(\"number\"===\ntypeof a.length&&!a.propertyIsEnumerable(\"length\")){d=a.length;for(c=0;c<d;c+=1)b.push(jc(a[c])||\"null\");return\"[\"+b.join(\",\")+\"]\"}for(c in a)!/___$/.test(c)&&x(a,c)&&\"string\"===typeof c&&(d=jc(a[c]))&&b.push(jc(c)+\":\"+d);return\"{\"+b.join(\",\")+\"}\"}return\"\"}},kc=function(a){if(!a)return!1;if(/^[\\],:{}\\s]*$/.test(a.replace(/\\\\[\"\\\\\\/b-u]/g,\"@\").replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\"]\").replace(/(?:^|:|,)(?:\\s*\\[)+/g,\"\")))try{return eval(\"(\"+a+\")\")}catch(b){}return!1},\nlc=!1;try{lc=!!window.JSON&&'[\"a\"]'===window.JSON.stringify([\"a\"])&&\"a\"===window.JSON.parse('[\"a\"]')[0]}catch(a){}var mc=function(a){try{return window.JSON.parse(a)}catch(b){return!1}},nc=lc?window.JSON.stringify:jc,oc=lc?mc:kc;var pc=function(a){var b;a.match(/^https?%3A/i)&&(b=decodeURIComponent(a));return ya(document,b?b:a)},qc=function(a){a=a||\"canonical\";for(var b=document.getElementsByTagName(\"link\"),c=0,d=b.length;c<d;c++){var e=b[c],f=e.getAttribute(\"rel\");if(f&&f.toLowerCase()==a&&(e=e.getAttribute(\"href\"))&&(e=pc(e))&&null!=e.match(/^https?:\\/\\/[\\w\\-\\_\\.]+/i))return e}return window.location.href};var rc={se:\"0\"},sc={post:!0},tc={style:\"position:absolute;top:-10000px;width:450px;margin:0px;border-style:none\"},uc=\"onPlusOne _ready _close _open _resizeMe _renderstart oncircled drefresh erefresh\".split(\" \"),vc=u(I,\"WI\",v()),wc=function(a,b,c){var d,e;d={};var f=e=a;\"plus\"==a&&b.action&&(e=a+\"_\"+b.action,f=a+\"/\"+b.action);(e=T(\"iframes/\"+e+\"/url\"))||(e=\":im_socialhost:/:session_prefix::im_prefix:_/widget/render/\"+f+\"?usegapi=1\");for(var g in rc)d[g]=g+\"/\"+(b[g]||rc[g])+\"/\";d=ya(p,e.replace(ec,\nhc(d)));g=\"iframes/\"+a+\"/params/\";f={};A(b,f);(e=T(\"lang\")||T(\"gwidget/lang\"))&&(f.hl=e);sc[a]||(f.origin=window.location.origin||window.location.protocol+\"//\"+window.location.host);f.exp=T(g+\"exp\");if(g=T(g+\"location\"))for(e=0;e<g.length;e++){var k=g[e];f[k]=n.location[k]}switch(a){case \"plus\":case \"follow\":g=f.href;e=b.action?void 0:\"publisher\";g=(g=\"string\"==typeof g?g:void 0)?pc(g):qc(e);f.url=g;delete f.href;break;case \"plusone\":g=(g=b.href)?pc(g):qc();f.url=g;g=b.db;e=T();null==g&&e&&(g=e.db,\nnull==g&&(g=e.gwidget&&e.gwidget.db));f.db=g||void 0;g=b.ecp;e=T();null==g&&e&&(g=e.ecp,null==g&&(g=e.gwidget&&e.gwidget.ecp));f.ecp=g||void 0;delete f.href;break;case \"signin\":f.url=qc()}I.ILI&&(f.iloader=\"1\");delete f[\"data-onload\"];delete f.rd;for(var h in rc)f[h]&&delete f[h];f.gsrc=T(\"iframes/:source:\");h=T(\"inline/css\");\"undefined\"!==typeof h&&0<c&&h>=c&&(f.ic=\"1\");h=/^#|^fr-/;c={};for(var l in f)x(f,l)&&h.test(l)&&(c[l.replace(h,\"\")]=f[l],delete f[l]);l=\"q\"==T(\"iframes/\"+a+\"/params/si\")?f:\nc;h=ub();for(var m in h)!x(h,m)||x(f,m)||x(c,m)||(l[m]=h[m]);m=[].concat(uc);(l=T(\"iframes/\"+a+\"/methods\"))&&\"object\"===typeof l&&ea.test(l.push)&&(m=m.concat(l));for(var r in b)x(b,r)&&/^on/.test(r)&&(\"plus\"!=a||\"onconnect\"!=r)&&(m.push(r),delete f[r]);delete f.callback;c._methods=m.join(\",\");return wa(d,f,c)},xc=[\"style\",\"data-gapiscan\"],zc=function(a){for(var b=v(),c=0!=a.nodeName.toLowerCase().indexOf(\"g:\"),d=0,e=a.attributes.length;d<e;d++){var f=a.attributes[d],g=f.name,k=f.value;0<=fa.call(xc,\ng)||c&&0!=g.indexOf(\"data-\")||\"null\"===k||\"specified\"in f&&!f.specified||(c&&(g=g.substr(5)),b[g.toLowerCase()]=k)}a=a.style;(c=yc(a&&a.height))&&(b.height=String(c));(a=yc(a&&a.width))&&(b.width=String(a));return b},yc=function(a){var b=void 0;\"number\"===typeof a?b=a:\"string\"===typeof a&&(b=parseInt(a,10));return b},Bc=function(){var a=I.drw;Ab(function(b){if(a!==b.id&&4!=b.state&&\"share\"!=b.type){var c=b.id,d=b.type,e=b.url;b=b.userParams;var f=p.getElementById(c);if(f){var g=wc(d,b,0);g?(f=f.parentNode,\ne.replace(/\\#.*/,\"\").replace(/(\\?|&)ic=1/,\"\")!==g.replace(/\\#.*/,\"\").replace(/(\\?|&)ic=1/,\"\")&&(b.dontclear=!0,b.rd=!0,b.ri=!0,b.type=d,Ac(f,b),(d=U[f.lastChild.id])&&(d.oid=c),Bb(c,4))):delete U[c]}else delete U[c]}})};var W,X,Y,Cc,Dc,Ec=/(?:^|\\s)g-((\\S)*)(?:$|\\s)/,Fc={plusone:!0,autocomplete:!0,profile:!0,signin:!0,signin2:!0};W=u(I,\"SW\",v());X=u(I,\"SA\",v());Y=u(I,\"SM\",v());Cc=u(I,\"FW\",[]);Dc=null;\nvar Hc=function(a,b){Gc(void 0,!1,a,b)},Gc=function(a,b,c,d){L(\"ps0\",!0);c=(\"string\"===typeof c?document.getElementById(c):c)||p;var e;e=p.documentMode;if(c.querySelectorAll&&(!e||8<e)){e=d?[d]:z(W).concat(z(X)).concat(z(Y));for(var f=[],g=0;g<e.length;g++){var k=e[g];f.push(\".g-\"+k,\"g\\\\:\"+k)}e=c.querySelectorAll(f.join(\",\"))}else e=c.getElementsByTagName(\"*\");c=v();for(f=0;f<e.length;f++){g=e[f];var h=g,k=d,l=h.nodeName.toLowerCase(),m=void 0;h.getAttribute(\"data-gapiscan\")?k=null:(0==l.indexOf(\"g:\")?\nm=l.substr(2):(h=(h=String(h.className||h.getAttribute(\"class\")))&&Ec.exec(h))&&(m=h[1]),k=!m||!(W[m]||X[m]||Y[m])||k&&m!==k?null:m);k&&(Fc[k]||0==g.nodeName.toLowerCase().indexOf(\"g:\")||0!=z(zc(g)).length)&&(g.setAttribute(\"data-gapiscan\",!0),u(c,k,[]).push(g))}if(b)for(var r in c)for(b=c[r],d=0;d<b.length;d++)b[d].setAttribute(\"data-onload\",!0);for(var w in c)Cc.push(w);L(\"ps1\",!0);if((r=Cc.join(\":\"))||a)try{C.load(r,a)}catch(y){xb(y);return}if(Ic(Dc||{}))for(var t in c){a=c[t];w=0;for(b=a.length;w<\nb;w++)a[w].removeAttribute(\"data-gapiscan\");Jc(t)}else{d=[];for(t in c)for(a=c[t],w=0,b=a.length;w<b;w++)e=a[w],Kc(t,e,zc(e),d,b);Lc(r,d)}},Mc=function(a){var b=u(C,a,{});b.go||(b.go=function(b){return Hc(b,a)},b.render=function(b,d){d=d||{};d.type=a;return Ac(b,d)})},Nc=function(a){W[a]=!0},Oc=function(a){X[a]=!0},Pc=function(a){Y[a]=!0};var Jc=function(a,b){var c=Ha(a);b&&c?(c(b),(c=b.iframeNode)&&c.setAttribute(\"data-gapiattached\",!0)):C.load(a,function(){var c=Ha(a),e=b&&b.iframeNode,f=b&&b.userParams;e&&c?(c(b),e.setAttribute(\"data-gapiattached\",!0)):(c=C[a].go,\"signin2\"==a?c(e,f):c(e&&e.parentNode,f))})},Ic=function(){return!1},Lc=function(){},Kc=function(a,b,c,d,e,f,g){switch(Qc(b,a,f)){case 0:a=Y[a]?a+\"_annotation\":a;d={};d.iframeNode=b;d.userParams=c;Jc(a,d);break;case 1:var k;if(b.parentNode){for(var h in c){if(f=x(c,h))f=\nc[h],f=!!f&&\"object\"===typeof f&&(!f.toString||f.toString===Object.prototype.toString||f.toString===Array.prototype.toString);if(f)try{c[h]=nc(c[h])}catch(F){delete c[h]}}f=!0;c.dontclear&&(f=!1);delete c.dontclear;zb();h=wc(a,c,e);e=g||{};e.allowPost=1;e.attributes=tc;e.dontclear=!f;g={};g.userParams=c;g.url=h;g.type=a;var l;c.rd?l=b:(l=document.createElement(\"div\"),b.setAttribute(\"data-gapistub\",!0),l.style.cssText=\"position:absolute;width:450px;left:-10000px;\",b.parentNode.insertBefore(l,b));g.siteElement=\nl;l.id||(b=l,u(vc,a,0),f=\"___\"+a+\"_\"+vc[a]++,b.id=f);b=v();b[\">type\"]=a;A(c,b);f=h;c=l;h=e||{};b=h.attributes||{};B(!h.allowPost||!b.onload,\"onload is not supported by post iframe\");e=b=f;dc.test(b)&&(e=T(\"iframes/\"+e.substring(1)+\"/url\"),B(!!e,\"Unknown iframe url config for - \"+b));f=ya(p,e.replace(ec,gc));b=c.ownerDocument||p;l=0;do e=h.id||[\"I\",ac++,\"_\",(new Date).getTime()].join(\"\");while(b.getElementById(e)&&5>++l);B(5>l,\"Error creating iframe id\");l={};var m={};b.documentMode&&9>b.documentMode&&\n(l.hostiemode=b.documentMode);A(h.queryParams||{},l);A(h.fragmentParams||{},m);var r=h.connectWithQueryParams?l:m,w=h.pfname,t=v();t.id=e;t.parent=b.location.protocol+\"//\"+b.location.host;var y=D(b.location.href,\"parent\"),w=w||\"\";!w&&y&&(y=D(b.location.href,\"id\",\"\"),w=D(b.location.href,\"pfname\",\"\"),w=y?w+\"/\"+y:\"\");t.pfname=w;A(t,r);(t=D(f,\"rpctoken\")||l.rpctoken||m.rpctoken)||(t=r.rpctoken=h.rpctoken||String(Math.round(1E8*(Lb?Ub():Tb()))));h.rpctoken=t;t=b.location.href;r=v();(y=D(t,\"_bsh\",I.bsh))&&\n(r._bsh=y);(t=J(t))&&(r.jsh=t);h.hintInFragment?A(r,m):A(r,l);f=wa(f,l,m,h.paramsSerializer);m=v();A(Zb,m);A(h.attributes,m);m.name=m.id=e;m.src=f;h.eurl=f;if((h||{}).allowPost&&2E3<f.length){l=E(f);m.src=\"\";m[\"data-postorigin\"]=f;f=cc(b,c,m,e);-1!=navigator.userAgent.indexOf(\"WebKit\")&&(k=f.contentWindow.document,k.open(),m=k.createElement(\"div\"),r={},t=e+\"_inner\",r.name=t,r.src=\"\",r.style=\"display:none\",cc(b,m,r,t,h));m=(h=l.query[0])?h.split(\"&\"):[];h=[];for(r=0;r<m.length;r++)t=m[r].split(\"=\",\n2),h.push([decodeURIComponent(t[0]),decodeURIComponent(t[1])]);l.query=[];m=ua(l);B(za.test(m),\"Invalid URL: \"+m);l=b.createElement(\"form\");l.action=m;l.method=\"POST\";l.target=e;l.style.display=\"none\";for(e=0;e<h.length;e++)m=b.createElement(\"input\"),m.type=\"hidden\",m.name=h[e][0],m.value=h[e][1],l.appendChild(m);c.appendChild(l);l.submit();l.parentNode.removeChild(l);k&&k.close();k=f}else k=cc(b,c,m,e,h);g.iframeNode=k;g.id=k.getAttribute(\"id\");k=g.id;c=v();c.id=k;c.userParams=g.userParams;c.url=\ng.url;c.type=g.type;c.state=1;U[k]=c;k=g}else k=null;k&&((g=k.id)&&d.push(g),Jc(a,k))}},Qc=function(a,b,c){if(a&&1===a.nodeType&&b){if(c)return 1;if(Y[b]){if(Fa[a.nodeName.toLowerCase()])return(a=a.innerHTML)&&a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")?0:1}else{if(X[b])return 0;if(W[b])return 1}}return null},Ac=function(a,b){var c=b.type;delete b.type;var d=(\"string\"===typeof a?document.getElementById(a):a)||void 0;if(d){a={};for(var e in b)x(b,e)&&(a[e.toLowerCase()]=b[e]);a.rd=1;(b=!!a.ri)&&delete a.ri;\ne=[];Kc(c,d,a,e,0,b,void 0);Lc(c,e)}else xb(\"string\"===\"gapi.\"+c+\".render: missing element \"+typeof a?a:\"\")};u(C,\"platform\",{}).go=Hc;var Ic=function(a){for(var b=[\"_c\",\"jsl\",\"h\"],c=0;c<b.length&&a;c++)a=a[b[c]];b=J(q.href);return!a||0!=a.indexOf(\"n;\")&&0!=b.indexOf(\"n;\")&&a!==b},Lc=function(a,b){Rc(a,b)},Ba=function(a){Gc(a,!0)},Sc=function(a,b){b=b||[];for(var c=0;c<b.length;++c)a(b[c]);for(a=0;a<b.length;a++)Mc(b[a])};\nM.push([\"platform\",function(a,b,c){Dc=c;b&&Cc.push(b);Sc(Nc,a);Sc(Oc,c._c.annotation);Sc(Pc,c._c.bimodal);qb();ob();if(\"explicit\"!=T(\"parsetags\")){Ga(a);vb(ub())&&!T(\"disableRealtimeCallback\")&&zb();var d;c&&(a=c.callback)&&(d=na(a),delete c.callback);Da(function(){Ba(d)})}}]);C._pl=!0;var Tc=function(a){a=(a=U[a])?a.oid:void 0;if(a){var b=p.getElementById(a);b&&b.parentNode.removeChild(b);delete U[a];Tc(a)}};var Uc=/^\\{h\\:'/,Vc=/^!_/,Wc=\"\",Rc=function(a,b){function c(){H(\"message\",d,\"remove\",\"de\")}function d(d){var f=d.data,k=d.origin;if(Xc(f,b)){var h=e;e=!1;h&&L(\"rqe\");Yc(a,function(){h&&L(\"rqd\");c();for(var a=u(I,\"RPMQ\",[]),b=0;b<a.length;b++)a[b]({data:f,origin:k})})}}if(0!==b.length){Wc=D(q.href,\"pfname\",\"\");var e=!0;H(\"message\",d,\"add\",\"at\");P(a,c)}},Xc=function(a,b){a=String(a);if(Uc.test(a))return!0;var c=!1;Vc.test(a)&&(c=!0,a=a.substr(2));if(!/^\\{/.test(a))return!1;var d=oc(a);if(!d)return!1;\na=d.f;if(d.s&&a&&-1!=fa.call(b,a)){if(\"_renderstart\"===d.s||d.s===Wc+\"/\"+a+\"::_renderstart\")if(d=d.a&&d.a[c?0:1],b=p.getElementById(a),Bb(a,2),d&&b&&d.width&&d.height){a:{c=b.parentNode;a=d||{};if(yb()){var e=b.id;if(e){d=(d=U[e])?d.state:void 0;if(1===d||4===d)break a;Tc(e)}}(d=c.nextSibling)&&d.getAttribute&&d.getAttribute(\"data-gapistub\")&&(c.parentNode.removeChild(d),c.style.cssText=\"\");var d=a.width,f=a.height,g=c.style;g.textIndent=\"0\";g.margin=\"0\";g.padding=\"0\";g.background=\"transparent\";g.borderStyle=\n\"none\";g.cssFloat=\"none\";g.styleFloat=\"none\";g.lineHeight=\"normal\";g.fontSize=\"1px\";g.verticalAlign=\"baseline\";c=c.style;c.display=\"inline-block\";g=b.style;g.position=\"static\";g.left=\"0\";g.top=\"0\";g.visibility=\"visible\";d&&(c.width=g.width=d+\"px\");f&&(c.height=g.height=f+\"px\");a.verticalAlign&&(c.verticalAlign=a.verticalAlign);e&&Bb(e,3)}b[\"data-csi-wdt\"]=(new Date).getTime()}return!0}return!1},Yc=function(a,b){P(a,b)};var Zc=function(a,b){this.O=a;a=b||{};this.Y=Number(a.maxAge)||0;this.L=a.domain;this.P=a.path;this.$=!!a.secure},$c=/^[-+/_=.:|%&a-zA-Z0-9@]*$/,ad=/^[A-Z_][A-Z0-9_]{0,63}$/;\nZc.prototype.write=function(a,b){if(!ad.test(this.O))throw\"Invalid cookie name\";if(!$c.test(a))throw\"Invalid cookie value\";a=this.O+\"=\"+a;this.L&&(a+=\";domain=\"+this.L);this.P&&(a+=\";path=\"+this.P);b=\"number\"===typeof b?b:this.Y;if(0<=b){var c=new Date;c.setSeconds(c.getSeconds()+b);a+=\";expires=\"+c.toUTCString()}this.$&&(a+=\";secure\");document.cookie=a;return!0};Zc.iterate=function(a){for(var b=document.cookie.split(/;\\s*/),c=0;c<b.length;++c){var d=b[c].split(\"=\"),e=d.shift();a(e,d.join(\"=\"))}};var bd=function(a){this.X=a},cd={};bd.prototype.write=function(a){cd[this.X]=a;return!0};bd.iterate=function(a){for(var b in cd)cd.hasOwnProperty(b)&&a(b,cd[b])};var dd=\"https:\"===window.location.protocol,ed=dd||\"http:\"===window.location.protocol?Zc:bd,fd=function(a){var b=a.substr(1),c=\"\",d=window.location.hostname;if(\"\"!==b){c=parseInt(b,10);if(isNaN(c))return null;b=d.split(\".\");if(b.length<c-1)return null;b.length==c-1&&(d=\".\"+d)}else d=\"\";return{g:\"S\"==a.charAt(0),domain:d,j:c}},gd=function(){var a,b=null;ed.iterate(function(c,d){0===c.indexOf(\"G_AUTHUSER_\")&&(c=fd(c.substring(11)),!a||c.g&&!a.g||c.g==a.g&&c.j>a.j)&&(a=c,b=d)});return{W:a,B:b}};var hd=function(a){if(0!==a.indexOf(\"GCSC\"))return null;var b={N:!1};a=a.substr(4);if(!a)return b;var c=a.charAt(0);a=a.substr(1);var d=a.lastIndexOf(\"_\");if(-1==d)return b;var e=fd(a.substr(d+1));if(null==e)return b;a=a.substring(0,d);if(\"_\"!==a.charAt(0))return b;d=\"E\"===c&&e.g;return!d&&(\"U\"!==c||e.g)||d&&!dd?b:{N:!0,g:d,ca:a.substr(1),domain:e.domain,j:e.j}},id=function(a){if(!a)return[];a=a.split(\"=\");return a[1]?a[1].split(\"|\"):[]},jd=function(a){a=a.split(\":\");return{D:a[0].split(\"=\")[1],ba:id(a[1]),\nea:id(a[2]),da:id(a[3])}},kd=function(){var a=gd(),b=a.W,a=a.B;if(null!==a){var c;ed.iterate(function(a,d){(a=hd(a))&&a.N&&a.g==b.g&&a.j==b.j&&(c=d)});if(c){var d=jd(c),e=d&&d.ba[Number(a)],d=d&&d.D;if(e)return{B:a,aa:e,D:d}}}return null};var Z=function(a){this.K=a};Z.prototype.o=0;Z.prototype.H=2;Z.prototype.K=null;Z.prototype.F=!1;Z.prototype.T=function(){this.F||(this.o=0,this.F=!0,this.R())};Z.prototype.R=function(){this.F&&(this.K()?this.o=this.H:this.o=Math.min(2*(this.o||this.H),120),window.setTimeout(ca(this.R,this),1E3*this.o))};for(var ld=0;64>ld;++ld);var md=null,yb=function(){return I.oa=!0},zb=function(){I.oa=!0;var a=kd();(a=a&&a.B)&&pb(\"googleapis.config/sessionIndex\",a);md||(md=u(I,\"ss\",new Z(nd)));a=md;a.T&&a.T()},nd=function(){var a=kd(),b=a&&a.aa||null,c=a&&a.D;P(\"auth\",{callback:function(){var a=n.gapi.auth,e={client_id:c,session_state:b};a.checkSessionState(e,function(b){var c=e.session_state,d=T(\"isLoggedIn\");b=T(\"debug/forceIm\")?!1:c&&b||!c&&!b;if(d=d!=b)pb(\"isLoggedIn\",b),zb(),Bc(),b||((b=a.signOut)?b():(b=a.setToken)&&b(null));b=\nub();var f=T(\"savedUserState\"),c=a._guss(b.cookiepolicy),f=f!=c&&\"undefined\"!=typeof f;pb(\"savedUserState\",c);(d||f)&&vb(b)&&!T(\"disableRealtimeCallback\")&&a._pimf(b,!0)})}});return!0};L(\"bs0\",!0,window.gapi._bs);L(\"bs1\",!0);delete window.gapi._bs;}).call(this);\ngapi.load(\"\",{callback:window[\"gapi_onload\"],_c:{\"jsl\":{\"ci\":{\"deviceType\":\"desktop\",\"oauth-flow\":{\"authUrl\":\"https://accounts.google.com/o/oauth2/auth\",\"proxyUrl\":\"https://accounts.google.com/o/oauth2/postmessageRelay\",\"disableOpt\":true,\"idpIframeUrl\":\"https://accounts.google.com/o/oauth2/iframe\",\"usegapi\":false},\"debug\":{\"reportExceptionRate\":0.05,\"forceIm\":false,\"rethrowException\":false,\"host\":\"https://apis.google.com\"},\"enableMultilogin\":true,\"googleapis.config\":{\"auth\":{\"useFirstPartyAuthV2\":false}},\"isPlusUser\":false,\"inline\":{\"css\":1},\"disableRealtimeCallback\":false,\"drive_share\":{\"skipInitCommand\":true},\"csi\":{\"rate\":0.01},\"client\":{\"headers\":{\"request\":[\"Accept\",\"Accept-Language\",\"Authorization\",\"Cache-Control\",\"Content-Disposition\",\"Content-Encoding\",\"Content-Language\",\"Content-Length\",\"Content-MD5\",\"Content-Range\",\"Content-Type\",\"Date\",\"GData-Version\",\"Host\",\"If-Match\",\"If-Modified-Since\",\"If-None-Match\",\"If-Unmodified-Since\",\"Origin\",\"OriginToken\",\"Pragma\",\"Range\",\"Slug\",\"Transfer-Encoding\",\"Want-Digest\",\"X-ClientDetails\",\"X-GData-Client\",\"X-GData-Key\",\"X-Goog-AuthUser\",\"X-Goog-PageId\",\"X-Goog-Encode-Response-If-Executable\",\"X-Goog-Correlation-Id\",\"X-Goog-Request-Info\",\"X-Goog-Experiments\",\"x-goog-iam-authority-selector\",\"x-goog-iam-authorization-token\",\"X-Goog-Spatula\",\"X-Goog-Upload-Command\",\"X-Goog-Upload-Content-Disposition\",\"X-Goog-Upload-Content-Length\",\"X-Goog-Upload-Content-Type\",\"X-Goog-Upload-File-Name\",\"X-Goog-Upload-Offset\",\"X-Goog-Upload-Protocol\",\"X-Goog-Visitor-Id\",\"X-HTTP-Method-Override\",\"X-JavaScript-User-Agent\",\"X-Pan-Versionid\",\"X-Proxied-User-IP\",\"X-Origin\",\"X-Referer\",\"X-Requested-With\",\"X-Upload-Content-Length\",\"X-Upload-Content-Type\",\"X-Use-HTTP-Status-Code-Override\",\"X-Ios-Bundle-Identifier\",\"X-Android-Package\",\"X-YouTube-VVT\",\"X-YouTube-Page-CL\",\"X-YouTube-Page-Timestamp\"],\"response\":[\"Digest\",\"Cache-Control\",\"Content-Disposition\",\"Content-Encoding\",\"Content-Language\",\"Content-Length\",\"Content-MD5\",\"Content-Range\",\"Content-Type\",\"Date\",\"ETag\",\"Expires\",\"Last-Modified\",\"Location\",\"Pragma\",\"Range\",\"Server\",\"Transfer-Encoding\",\"WWW-Authenticate\",\"Vary\",\"Unzipped-Content-MD5\",\"X-Goog-Generation\",\"X-Goog-Metageneration\",\"X-Goog-Safety-Content-Type\",\"X-Goog-Safety-Encoding\",\"X-Google-Trace\",\"X-Goog-Upload-Chunk-Granularity\",\"X-Goog-Upload-Control-URL\",\"X-Goog-Upload-Size-Received\",\"X-Goog-Upload-Status\",\"X-Goog-Upload-URL\",\"X-Goog-Diff-Download-Range\",\"X-Goog-Hash\",\"X-Goog-Updated-Authorization\",\"X-Server-Object-Version\",\"X-Guploader-Customer\",\"X-Guploader-Upload-Result\",\"X-Guploader-Uploadid\",\"X-Google-Gfe-Backend-Request-Cost\"]},\"rms\":\"migrated\",\"cors\":false},\"isLoggedIn\":false,\"signInDeprecation\":{\"rate\":0.0},\"include_granted_scopes\":true,\"llang\":\"sv\",\"iframes\":{\"youtube\":{\"params\":{\"location\":[\"search\",\"hash\"]},\"url\":\":socialhost:/:session_prefix:_/widget/render/youtube?usegapi\\u003d1\",\"methods\":[\"scroll\",\"openwindow\"]},\"ytsubscribe\":{\"url\":\"https://www.youtube.com/subscribe_embed?usegapi\\u003d1\"},\"plus_circle\":{\"params\":{\"url\":\"\"},\"url\":\":socialhost:/:session_prefix::se:_/widget/plus/circle?usegapi\\u003d1\"},\"plus_share\":{\"params\":{\"url\":\"\"},\"url\":\":socialhost:/:session_prefix::se:_/+1/sharebutton?plusShare\\u003dtrue\\u0026usegapi\\u003d1\"},\"rbr_s\":{\"params\":{\"url\":\"\"},\"url\":\":socialhost:/:session_prefix::se:_/widget/render/recobarsimplescroller\"},\"udc_webconsentflow\":{\"params\":{\"url\":\"\"},\"url\":\"https://myaccount.google.com/webconsent?usegapi\\u003d1\"},\":source:\":\"3p\",\"playemm\":{\"url\":\"https://play.google.com/work/embedded/search?usegapi\\u003d1\\u0026usegapi\\u003d1\"},\"savetoandroidpay\":{\"url\":\"https://androidpay.google.com/a/widget/save\"},\"blogger\":{\"params\":{\"location\":[\"search\",\"hash\"]},\"url\":\":socialhost:/:session_prefix:_/widget/render/blogger?usegapi\\u003d1\",\"methods\":[\"scroll\",\"openwindow\"]},\"evwidget\":{\"params\":{\"url\":\"\"},\"url\":\":socialhost:/:session_prefix:_/events/widget?usegapi\\u003d1\"},\"partnersbadge\":{\"url\":\"https://www.gstatic.com/partners/badge/templates/badge.html?usegapi\\u003d1\"},\"surveyoptin\":{\"url\":\"https://www.google.com/shopping/customerreviews/optin?usegapi\\u003d1\"},\":socialhost:\":\"https://apis.google.com\",\"shortlists\":{\"url\":\"\"},\"hangout\":{\"url\":\"https://talkgadget.google.com/:session_prefix:talkgadget/_/widget\"},\"plus_followers\":{\"params\":{\"url\":\"\"},\"url\":\":socialhost:/_/im/_/widget/render/plus/followers?usegapi\\u003d1\"},\"post\":{\"params\":{\"url\":\"\"},\"url\":\":socialhost:/:session_prefix::im_prefix:_/widget/render/post?usegapi\\u003d1\"},\":gplus_url:\":\"https://plus.google.com\",\"signin\":{\"params\":{\"url\":\"\"},\"url\":\":socialhost:/:session_prefix:_/widget/render/signin?usegapi\\u003d1\",\"methods\":[\"onauth\"]},\"rbr_i\":{\"params\":{\"url\":\"\"},\"url\":\":socialhost:/:session_prefix::se:_/widget/render/recobarinvitation\"},\"donation\":{\"url\":\"https://onetoday.google.com/home/donationWidget?usegapi\\u003d1\"},\"share\":{\"url\":\":socialhost:/:session_prefix::im_prefix:_/widget/render/share?usegapi\\u003d1\"},\"plusone\":{\"params\":{\"count\":\"\",\"size\":\"\",\"url\":\"\"},\"url\":\":socialhost:/:session_prefix::se:_/+1/fastbutton?usegapi\\u003d1\"},\"comments\":{\"params\":{\"location\":[\"search\",\"hash\"]},\"url\":\":socialhost:/:session_prefix:_/widget/render/comments?usegapi\\u003d1\",\"methods\":[\"scroll\",\"openwindow\"]},\":im_socialhost:\":\"https://plus.googleapis.com\",\"backdrop\":{\"url\":\"https://clients3.google.com/cast/chromecast/home/widget/backdrop?usegapi\\u003d1\"},\"visibility\":{\"params\":{\"url\":\"\"},\"url\":\":socialhost:/:session_prefix:_/widget/render/visibility?usegapi\\u003d1\"},\"autocomplete\":{\"params\":{\"url\":\"\"},\"url\":\":socialhost:/:session_prefix:_/widget/render/autocomplete\"},\"additnow\":{\"url\":\"https://apis.google.com/additnow/additnow.html?usegapi\\u003d1\",\"methods\":[\"launchurl\"]},\":signuphost:\":\"https://plus.google.com\",\"ratingbadge\":{\"url\":\"https://www.google.com/shopping/customerreviews/badge?usegapi\\u003d1\"},\"appcirclepicker\":{\"url\":\":socialhost:/:session_prefix:_/widget/render/appcirclepicker\"},\"follow\":{\"url\":\":socialhost:/:session_prefix:_/widget/render/follow?usegapi\\u003d1\"},\"community\":{\"url\":\":ctx_socialhost:/:session_prefix::im_prefix:_/widget/render/community?usegapi\\u003d1\"},\"sharetoclassroom\":{\"url\":\"https://www.gstatic.com/classroom/sharewidget/widget_stable.html?usegapi\\u003d1\"},\"ytshare\":{\"params\":{\"url\":\"\"},\"url\":\":socialhost:/:session_prefix:_/widget/render/ytshare?usegapi\\u003d1\"},\"plus\":{\"url\":\":socialhost:/:session_prefix:_/widget/render/badge?usegapi\\u003d1\"},\"family_creation\":{\"params\":{\"url\":\"\"},\"url\":\"https://families.google.com/webcreation?usegapi\\u003d1\\u0026usegapi\\u003d1\"},\"commentcount\":{\"url\":\":socialhost:/:session_prefix:_/widget/render/commentcount?usegapi\\u003d1\"},\"configurator\":{\"url\":\":socialhost:/:session_prefix:_/plusbuttonconfigurator?usegapi\\u003d1\"},\"zoomableimage\":{\"url\":\"https://ssl.gstatic.com/microscope/embed/\"},\"savetowallet\":{\"url\":\"https://clients5.google.com/s2w/o/savetowallet\"},\"person\":{\"url\":\":socialhost:/:session_prefix:_/widget/render/person?usegapi\\u003d1\"},\"savetodrive\":{\"url\":\"https://drive.google.com/savetodrivebutton?usegapi\\u003d1\",\"methods\":[\"save\"]},\"page\":{\"url\":\":socialhost:/:session_prefix:_/widget/render/page?usegapi\\u003d1\"},\"card\":{\"url\":\":socialhost:/:session_prefix:_/hovercard/card\"}}},\"h\":\"m;/_/scs/apps-static/_/js/k\\u003doz.gapi.sv.GW-LoEPtk5s.O/m\\u003d__features__/am\\u003dAQ/rt\\u003dj/d\\u003d1/rs\\u003dAGLTcCPMLNnv5HJLtaIDldtHaw_-MpAK5w\",\"u\":\"https://apis.google.com/js/platform.js\",\"hee\":true,\"fp\":\"d72dd13eb66993fae3c576a24a67e18754db9bcf\",\"dpo\":false},\"platform\":[\"additnow\",\"backdrop\",\"blogger\",\"comments\",\"commentcount\",\"community\",\"family_creation\",\"follow\",\"hangout\",\"page\",\"partnersbadge\",\"person\",\"playemm\",\"playreview\",\"plus\",\"plusone\",\"post\",\"savetoandroidpay\",\"savetodrive\",\"savetowallet\",\"shortlists\",\"signin2\",\"udc_webconsentflow\",\"visibility\",\"youtube\",\"ytsubscribe\",\"zoomableimage\",\"sharetoclassroom\",\"donation\",\"ratingbadge\",\"surveyoptin\"],\"fp\":\"d72dd13eb66993fae3c576a24a67e18754db9bcf\",\"annotation\":[\"interactivepost\",\"recobar\",\"signin2\",\"autocomplete\",\"profile\"],\"bimodal\":[\"signin\",\"share\"]}});"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0
        },
        "cache": {},
        "timings": {
          "blocked": 0.169999897480011,
          "dns": -1,
          "connect": -1,
          "send": 0,
          "wait": 1.169000053778289,
          "receive": 1.0659999679774064,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.165Z",
        "time": 29967.534999828786,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/b.st-hatena.com/js/bookmark_button.js",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 08:39:41 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588efbcd-7907\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "application/javascript"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 30983,
            "mimeType": "application/javascript",
            "text": "var Hatena = Hatena || {};\n\n/* UTF-8 でないページから読み込まれても動くように、\n * コメントは複数行コメント (閉じる \"*\" の前にスペースを置く) を使い、\n * 文字列リテラル中の ASCII 外の文字は \\uXXXX とエスケープする。\n */\n\n(function (Hatena) {\n\nvar B = Hatena.Bookmark = Hatena.Bookmark || {};\nif (B.BookmarkButton) return;\n\nB.origin = location.protocol + '//b.hatena.ne.jp';\nB.staticOrigin = location.protocol + '//cdn-ak.b.st-hatena.com';\nB.apiOrigin = location.protocol + '//cdn.api.b.hatena.ne.jp';\n\nvar match = new RegExp('^((?:local|b(?!log)\\\\w+)\\\\.hatena\\\\.ne\\\\.jp(?::3000)?)$').exec(location.host);\nvar isLocal;\nif (match) {\n    B.origin = B.apiOrigin = B.staticOrigin = 'http://' + match[1];\n    isLocal = true;\n}\n\nvar U = B.ButtonUtils = {};\n\nvar extend = U.extend = function (dest, src) {\n    for (var i in src)\n        dest[i] = src[i];\n    return dest;\n};\n\nvar E = U.createElement = function (name, props) {\n    var element = document.createElement(name);\n    for (var p in props)\n        element[p] = props[p];\n    for (var i = 2; i < arguments.length; i++) {\n        var child = arguments[i];\n        if (!child.nodeType)\n            child = document.createTextNode(child);\n        element.appendChild(child);\n    }\n    return element;\n};\n\nvar getLocation = U.getLocation = function () {\n    var url = location.href;\n    /* Safari は location.href でパス中の URI エスケープを\n     * デコードしてしまうので、document.URL も調べてみる\n     */\n    if (url.length < document.URL.length)\n        url = document.URL;\n    return url;\n};\n\nvar View = U.View = {\n    root: null,\n    clientLeft: 0,\n    clientTop: 0,\n    init: function () {\n        this.root = ((document.compatMode || '') === 'CSS1Compat')\n                    ? document.documentElement : document.body;\n        this.clientLeft = this.root.clientLeft || 0;\n        this.clientTop = this.root.clientTop || 0;\n    },\n    getElementRect: function (element) {\n        if (!this.root) this.init();\n        this.getElementRect = element.getBoundingClientRect\n            ? this.getElementRectByRect : this.getElementRectByOffset;\n        return this.getElementRect(element);\n    },\n    getElementRectByRect: function (element) {\n        var rect = element.getBoundingClientRect();\n        var scroll = this.getScroll();\n        return {\n            x: rect.left + scroll.x - this.clientLeft,\n            y: rect.top + scroll.y - this.clientTop,\n            width: rect.width || rect.right - rect.left,\n            height: rect.height || rect.bottom - rect.top\n        };\n    },\n    getElementRectByOffset: function (element) {\n        var x = 0, y = 0;\n        for (var node = element, base; base = node.offsetParent; node = base) {\n            x += node.offsetLeft;\n            y += node.offsetTop;\n        }\n        return { x: x, y: y, width: element.offsetWidth, height: element.offsetHeight };\n    },\n    getWindowSize: function () {\n        if (!this.root) this.init();\n        return { width: this.root.clientWidth, height: this.root.clientHeight };\n    },\n    getDocumentSize: function () {\n        if (!this.root) this.init();\n        return { width: this.root.scrollWidth, height: this.root.scrollHeight };\n    },\n    getScroll: function () {\n        if (!this.root) this.init();\n        this.getScroll = (typeof window.pageXOffset === 'number')\n                         ? this.getScrollByPage : this.getScrollByRoot;\n        return this.getScroll();\n    },\n    getScrollByPage: function () {\n        return { x: window.pageXOffset, y: window.pageYOffset };\n    },\n    getScrollByRoot: function () {\n        return { x: this.root.scrollLeft, y: this.root.scrollTop };\n    }\n};\n\nvar Dispatchable = U.Dispatchable = {\n    addEventListener: function (type, listener) {\n        var listeners = this.getListeners(type);\n        for (var i = 0; i < listeners.length; i++)\n            if (listeners[i] === listener)\n                return;\n        listeners.push(listener);\n    },\n    removeEventListener: function (type, listener) {\n        var listeners = this.getListeners(type);\n        for (var i = 0; i < listeners.length; i++) {\n            if (listeners[i] === listener) {\n                listeners.splice(i, 1);\n                return;\n            }\n        }\n    },\n    dispatchEvent: function (type, data) {\n        var event = new Dispatchable.Event(type, data);\n        var listeners = this.getListeners(type);\n        for (var i = 0; i < listeners.length; i++)\n            listeners[i].call(this, event);\n        return !event.defaultPrevented;\n    },\n    getListeners: function (type) {\n        if (!this.hasOwnProperty('_listenersMap'))\n            this._listenersMap = {};\n        return this._listenersMap[type] || (this._listenersMap[type] = []);\n    }\n};\n\nDispatchable.Event = function (type, data) {\n    this.type = type;\n    this.data = data;\n    this.defaultPrevented = false;\n};\n\nextend(Dispatchable.Event.prototype, {\n    preventDefault: function () {\n        this.defaultPrevented = true;\n    }\n});\n\nvar Observer = U.Observer = function (target, type, handler, method) {\n    this.target = target;\n    this.type = type;\n    this.listener = handler;\n    if (method) {\n        this.listener = (typeof method === 'string')\n            ? function () { return handler[method].apply(handler, arguments); }\n            : function () { return handler.apply(method, arguments); };\n    }\n    if (!target.addEventListener && target.attachEvent) {\n        var listener = this.listener;\n        this.listener = function (event) {\n            return listener.call(target, Observer.WrappedEvent.create(event));\n        };\n        this.start = this.startAttach;\n        this.stop = this.stopAttach;\n    }\n    this.start();\n};\n\nextend(Observer.prototype, {\n    start: function () {\n        this.target.addEventListener(this.type, this.listener, false);\n    },\n    stop: function () {\n        this.target.removeEventListener(this.type, this.listener, false);\n    },\n    startAttach: function () {\n        this.target.attachEvent('on' + this.type, this.listener);\n    },\n    stopAttach: function () {\n        this.target.detachEvent('on' + this.type, this.listener);\n    }\n});\n\nObserver.WrappedEvent = {\n    create: function (event) {\n        /* 一部の IE8 でのクラッシュ対策\n         * cf: http://vividcode.hatenablog.com/entry/ie/ie8_posmes_crash */\n        if ( event.type === \"message\" ) {\n            return event;\n        }\n        var e = document.createEventObject(event);\n        e._event = event;\n        e.target = event.srcElement;\n        var scroll = View.getScroll();\n        e.pageX = event.clientX + scroll.x - View.clientLeft;\n        e.pageY = event.clientY + scroll.y - View.clientTop;\n        e.stopPropagation = this.stopPropagation;\n        e.preventDefault = this.preventDefault;\n        return e;\n    },\n    stopPropagation: function () {\n        this._event.cancelBubble = true;\n    },\n    preventDefault: function () {\n        this._event.returnValue = false;\n    }\n};\n\nvar JSON = U.JSON = window.JSON || {\n    _tokenRE: /[{}\\[\\],:]|-?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\\"(?:[^\\u0000-\\u001f\\\"\\\\]|\\\\(?:[\\\"\\\\\\/bfnrt]|u[0-9A-Fa-f]{4}))*\\\"|\\b(?:true|false|null)\\b|\\s+/g,\n    _escapeChar: function (c) {\n        return '\\\\u' + (0x10000 + c.charCodeAt(0)).toString(16).substring(1);\n    },\n\n    parse: function (json) {\n        json = String(json);\n        if (json.replace(JSON._tokenRE, '') !== '')\n            throw new Error('Invalid JSON sytax');\n        return eval('(' + json + ')');\n    },\n    stringify: function (value) {\n        switch (typeof value) {\n        case 'string':\n            return '\"' + value.replace(/[\\u0000-\\u001f\\\"\\\\\\u2028\\u2029]/g, JSON._escapeChar) + '\"';\n        case 'number':\n        case 'boolean':\n            return '' + value;\n        case 'object':\n            if (!value) return 'null';\n            var stringify = JSON.stringify;\n            var type = Object.prototype.toString.call(value).slice(8, -1);\n            switch (type) {\n            case 'String': case 'Number': case 'Boolean':\n                return stringify(value.valueOf());\n            case 'Array':\n                var members = [];\n                for (var i = 0; i < value.length; i++)\n                    members.push(stringify(value[i]));\n                return '[' + members.join(',') + ']';\n            case 'Object':\n                var members = [];\n                for (var i in value)\n                    if (value.hasOwnProperty(i))\n                        members.push(stringify(i) + ':' + stringify(value[i]));\n                return '{' + members.join(',') + '}';\n            }\n            return 'null';\n        }\n        return 'null';\n    }\n};\n\nvar WindowMessenger = U.WindowMessenger = function (win, url) {\n    this.win = win;\n    this.origin = url.replace(/^(https?:\\/\\/[^\\/?#]+)[\\s\\S]*/, '$1');\n    this.observer = new Observer(window, 'message', this, 'messageHandler');\n};\n\nextend(WindowMessenger, {\n    usePostMessage: true,\n    keySeed: (Math.random() * 0x10000) << 8,\n    createForFrame: function (frame, url) {\n        var win = frame.contentWindow;\n        /* WebKit ではフレームごとに別の名前をつける必要あり */\n        win.name = (++this.keySeed).toString(36) + '|' + getLocation();\n        win.location.replace(url);\n        return new this(win, url);\n    }\n});\n\nextend(WindowMessenger.prototype, Dispatchable);\nextend(WindowMessenger.prototype, {\n    send: function (type, data) {\n        if (typeof data === 'undefined') data = null;\n        var message = 'HBMessage@' + JSON.stringify({ type: type, data: data });\n        this.win.postMessage(message, this.origin);\n    },\n    messageHandler: function (event) {\n        var origin = event.origin || event.uri.replace(/^(https?:\\/\\/[^\\/?#]+)[\\s\\S]*/, '$1');\n        if (origin !== this.origin || event.source != this.win ||\n            !/^HBMessage@/.test(event.data)) return;\n        var message = JSON.parse(event.data.substring(10));\n        this.dispatchEvent(message.type, message.data);\n    },\n    destroy: function () {\n        this.observer.stop();\n    }\n});\n\nif (!window.postMessage) {\n\nWindowMessenger = U.WindowMessenger = function (win, url, key) {\n    this.win = win;\n    this.url = url.replace(/#[\\s\\S]*/, '');\n    this.key = key;\n    WindowMessenger.instances[this.key] = this;\n    if (!WindowMessenger.timerId) WindowMessenger.init();\n};\n\nextend(WindowMessenger, {\n    usePostMessage: false,\n    instances: {},\n    interval: 20,\n    timerId: 0,\n    createForFrame: function (frame, url) {\n        var win = frame.contentWindow;\n        var key = this.makeFNVHash(url + '|' + Math.random()).toString(36);\n        win.name = key + '|' + getLocation();\n        win.location.replace(url);\n        return new this(win, url, key);\n    },\n    /* http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function */\n    makeFNVHash: function (string) {\n        var hash = 2166136261;\n        for (var i = 0; i < string.length; i++)\n            hash = ((hash * 16777619) ^ string.charCodeAt(i)) >>> 0;\n        return hash;\n    },\n    init: function () {\n        this.lastFragment = location.hash;\n        var WM = this;\n        this.timerId = window.setInterval(function () { WM.observe(); }, this.interval);\n    },\n    observe: function () {\n        var fragment = location.hash;\n        if (fragment === this.lastFragment) return;\n        var match = fragment.match(/^#HBMessage-(\\w+)-([^\\/]+)\\/(.+)/);\n        if (!match) {\n            this.lastFragment = fragment;\n            return;\n        }\n        /* \"#\" だとページ最上部へのスクロールが発生するので \"#_\" で */\n        this.lastFragment = this.lastFragment || '#_';\n        var scroll = View.getScroll();\n        location.replace(this.lastFragment);\n        window.scrollTo(scroll.x, scroll.y);\n        var messenger = this.instances[match[1]];\n        if (!messenger) return;\n        var type = decodeURIComponent(match[2]);\n        var data = JSON.parse(decodeURIComponent(match[3]));\n        messenger.dispatchEvent(type, data);\n    }\n});\n\nextend(WindowMessenger.prototype, Dispatchable);\nextend(WindowMessenger.prototype, {\n    send: function (type, data) {\n        if (typeof data === 'undefined') data = null;\n        var url = this.url + '#HBMessage-' + this.key + '-' +\n                  encodeURIComponent(type) + '/' +\n                  encodeURIComponent(JSON.stringify(data));\n        try {\n            this.win.location.replace(url);\n        } catch (ex) {\n            this.win.location.href = url;\n        }\n    },\n    destroy: function () {\n        delete WindowMessenger.instances[this.key];\n    }\n});\n\n} /* WindowMessenger implementation with fragment identifier */\n\nB.BookmarkButton = function (link) {\n    this.url = link.getAttribute('data-hatena-bookmark-url') ||\n               B.BookmarkButton.extractURL(link.href) ||\n               B.BookmarkButton.getCurrentURL();\n    this.link = link;\n    this.mode = B.BookmarkButton.isTouchBrowser\n        ? 'goto-touch' : this.link.getAttribute('data-hatena-bookmark-mode');\n    /* IE 7 はデフォルトのセキュリティ設定によりフレーム内でのパネルの動作に\n     * 支障をきたすので、フレーム内ではポップアップを開くことを強制する。\n     */\n    if (!WindowMessenger.usePostMessage &&\n        /\\bMSIE 7\\b/.test(navigator.userAgent) &&\n        window.self != window.top) {\n        this.mode = 'popup';\n    }\n    this.setup();\n};\n\nextend(B.BookmarkButton, {\n    interval: 428, /* Welcome to Shibuya.js! */\n    timerId: 0,\n    setup: function () {\n        if (this.timerId) return;\n        var Button = this;\n        this.timerId = window.setInterval(function () { Button.tryCreate(); }, this.interval);\n        this.tryCreate();\n    },\n    lastLinkCount: 0,\n    tryCreate: function () {\n        var links = document.getElementsByTagName('a');\n        var linkCount = links.length;\n        if (linkCount === this.lastLinkCount) return;\n        var buttonLinks = [];\n        var classRE = /(?:^|\\s)hatena-bookmark-button(?:\\s|$)/;\n        for (var i = 0; i < linkCount; i++)\n            if (classRE.test(links[i].className) &&\n                !links[i].getAttribute('data-hatena-bookmark-initialized'))\n                buttonLinks.push(links[i]);\n        for (var i = 0; i < buttonLinks.length; i++)\n            new B.BookmarkButton(buttonLinks[i]);\n        this.lastLinkCount = links.length;\n    },\n    extractURL: function (entryURL) {\n        if (!entryURL) return null;\n        var match = entryURL.match(/^http:\\/\\/b\\.hatena\\.ne\\.jp\\/entry\\/(?:add\\/)?(.+)/);\n        if (!match) return null;\n        var url = match[1];\n        var parts = url.match(/^(?:https?(?:(:)|(%3A))|(s\\/))?/);\n        if (parts[2]) {\n            try {\n                return decodeURIComponent(url);\n            } catch (ex) {\n                return unescape(url);\n            }\n        }\n        if (!parts[1])\n            url = parts[3] ? 'https://' + url.substring(2) : 'http://' + url;\n        return url.replace(/%23/g, '#');\n    },\n    getCurrentURL: function () {\n        var url = getLocation();\n        var canonicalURL = this.getCanonicalURL();\n        if (canonicalURL) {\n            var index = url.indexOf('#');\n            if (index >= 0 && canonicalURL.indexOf('#') < 0)\n                canonicalURL += url.substring(index);\n            url = canonicalURL;\n        }\n        return url;\n    },\n    getCanonicalURL: function () {\n        var links = document.getElementsByTagName('link');\n        for (var i = 0; i < links.length; i++) {\n            if (links[i].rel.toLowerCase() !== 'canonical' || !links[i].href) continue;\n            /* IE で href プロパティが絶対 URL に解決されないことがある */\n            var a = document.createElement('a');\n            a.href = links[i].href;\n            return a.cloneNode(false).href;\n        }\n        return null;\n    },\n    isTouchBrowser: /\\b(?:iPhone|iPod);| Android /.test(navigator.userAgent),\n    forcedLayout: ''\n});\n\nextend(B.BookmarkButton.prototype, {\n    setup: function () {\n        var layout = B.BookmarkButton.forcedLayout || this.link.getAttribute('data-hatena-bookmark-layout');\n        if (layout === 'simple') {\n            this.link.setAttribute('data-hatena-bookmark-initialized', '1');\n            this.observer = new Observer(this.link, 'click', this, 'clickHandler');\n            this.button = this.link;\n            /* リンクの内容が画像ひとつのみならその画像を基準にパネルを表示 */\n            var images = this.link.getElementsByTagName('img');\n            this.anchor = (images.length === 1) ? images[0] : this.link;\n            if (!isLocal && !/^https?:\\/\\/b\\.hatena\\.ne\\.jp\\/(?!articles(?![\\w-]))/.test(getLocation())) {\n                this.image = new Image();\n                this.image.src = B.apiOrigin + '/entry/button/?url=' + encodeURIComponent(this.url) + '&layout=simple&format=image';\n            }\n        } else {\n            var config = {\n                vertical: { height: 50 },\n                'simple-balloon'  : { width: 70,  height: 20 },\n                'standard-balloon': { width: 130, height: 20 },\n                'standard-noballoon': { width: 80, height: 20 },\n                'vertical-balloon': { width: 80,  height: 60 }\n            };\n            var width = 50, height = 20;\n            if (config[layout]) {\n                width  = config[layout]['width']  || width;\n                height = config[layout]['height'] || height;\n            }\n            this.frame = E('iframe', { className: 'hatena-bookmark-button-frame', title: this.link.title, frameBorder: 0, scrolling: 'no', allowTransparency: true, width: width, height: height, src:'javascript:false' });\n            this.frame.style.cssText = 'width: ' + width + 'px; height: ' + height + 'px;';\n            this.link.parentNode.replaceChild(this.frame, this.link);\n\n            var buttonURL = B.apiOrigin + '/entry/button/?url=' + encodeURIComponent(this.url);\n            if (layout && layout !== 'standard')\n                buttonURL += '&layout=' + encodeURIComponent(layout);\n            var lang = this.link.getAttribute('data-hatena-bookmark-lang');\n            if (lang)\n                buttonURL += '&lang=' + encodeURIComponent(lang);\n            if (this.mode === 'popup')\n                buttonURL += '&mode=' + encodeURIComponent(this.mode);\n            this.messenger = WindowMessenger.createForFrame(this.frame, buttonURL);\n            this.observer = new Observer(this.messenger, 'click', this, 'clickHandler');\n            this._resizeObserver = new Observer(this.messenger, \"resize\", this, \"resizeMessageHandler\");\n            this.button = this.frame;\n            this.anchor = this.frame;\n        }\n    },\n    getTitle: function () {\n        var title = this.link.getAttribute('data-hatena-bookmark-title');\n        if (!title) {\n            title = this.link.getAttribute('data-hatena-bookmark-escaped-title');\n            if (title)\n                try { title = decodeURIComponent(title); } catch (ex) {}\n        }\n        if (!title && this.url.replace(/#.*/, '') === getLocation().replace(/#.*/, ''))\n            title = document.title;\n        return title;\n    },\n    togglePanel: function () {\n        if (!this.panel)\n            this.panel = new B.BookmarkPanel(this.url, this.getTitle());\n        if (this.panel.isShown) {\n            this.panel.hide();\n        } else {\n            var position = this.link.getAttribute('data-hatena-bookmark-position');\n            var hideBg = this.link.getAttribute('data-hatena-bookmark-hide-bg');\n            var hideBackground = !hideBg || hideBg.toLowerCase() !== 'false';\n            this.panel.show(this.anchor, position, hideBackground);\n        }\n    },\n    gotoTouchEntry: function () {\n        var entryURL = B.origin + '/entry.touch/';\n        var urlMatch = this.url.match(/^http(s)?:\\/\\/([\\s\\S]*)$/);\n        if (urlMatch)\n            entryURL += (urlMatch[1] ? 's/' : '') + urlMatch[2];\n        else\n            entryURL += this.url;\n        location.href = entryURL.replace(/#/g, '%23');\n    },\n    gotoTouchBookmarklet: function () {\n        var bookmarkletURL = B.origin + '/bookmarklet.touch?url=' + encodeURIComponent(this.url);\n        var title = this.getTitle();\n        if (title)\n            bookmarkletURL += '&btitle=' + encodeURIComponent(title);\n        location.href = bookmarkletURL;\n    },\n    clickHandler: function (event) {\n        if ((event.which || event.button || 0) > 1) return;\n        if (event.stopPropagation) event.stopPropagation();\n        if (event.preventDefault) event.preventDefault();\n        switch (this.mode) {\n        case 'popup':\n            B.BookmarkPanel.openPopup(this.url, this.getTitle());\n            break;\n        case 'goto-touch':\n            this.gotoTouchEntry();\n            break;\n        default:\n            this.togglePanel();\n        }\n    },\n    resizeMessageHandler: function (evt) {\n        var width = evt.data.width + \"\";\n        var height = evt.data.height + \"\";\n        if (/^\\d+$/.test(width)) this.frame.style.width = width + \"px\";\n        if (/^\\d+$/.test(height)) this.frame.style.height = height + \"px\";\n    },\n    destroy: function () {\n        if (this.observer) this.observer.stop();\n        if (this._resizeObserver) this._resizeObserver.stop();\n        if (this.messenger) this.messenger.destroy();\n        if (this.panel) this.panel.destroy();\n        if (this.button && this.button.parentNode)\n            this.button.parentNode.removeChild(this.button);\n    }\n});\n\nB.BookmarkPanel = function (url, title) {\n    this.url = url;\n    this.title = title || '';\n    this.isShown = false;\n    this.width = 365;\n    this.height = 160;\n    this.fixedTo = 'top';\n    this.hiddenFlashes = [];\n    this.clickObserver = new Observer(document, 'click', this, 'clickHandler');\n    this.clickObserver.stop();\n    this.observers = [this.clickObserver];\n    this.setup();\n};\n\nextend(B.BookmarkPanel, {\n    currentPanel: null,\n    makePanelURL: function (url, title) {\n        var panelURL = B.origin + '/entry/panel/?url=' + encodeURIComponent(url);\n        if (title)\n            panelURL += '&btitle=' + encodeURIComponent(title);\n        return panelURL;\n    },\n    openPopup: function (url, title) {\n        var panelURL = this.makePanelURL(url, title);\n        var win = window.open(panelURL, 'hatena_bookmark_panel_popup', 'width=365,height=220,menubar=no,toolbar=no,resizable=yes');\n    },\n    hasCommonStyle: false,\n    setupCommonStyle: function () {\n        if (this.hasCommonStyle) return;\n        this.hasCommonStyle = true;\n        var resetCSSDeclarations =\n            'margin: 0; padding: 0; border: none; ' +\n            'position: static; float: none; width: auto; height: auto; ' +\n            'line-height: 1; vertical-align: baseline; ' +\n            'color: #222; background: none; ' +\n            'font-style: normal; font-weight:normal; font-size: medium; ' +\n            'text-indent: 0; text-align: left; text-decoration: none; ' +\n            'letter-spacing: normal; word-spacing: normal; white-space: normal;';\n        var resetCSSText =\n            '.hatena-bookmark-bookmark-panel, ' +\n            '.hatena-bookmark-bookmark-panel * ' +\n            '{' + resetCSSDeclarations + '}';\n        try {\n            var style = document.createElement('style');\n            style.type = 'text/css';\n            style.appendChild(document.createTextNode(resetCSSText));\n            document.getElementsByTagName('head')[0].appendChild(style);\n        } catch (ex) {\n            document.createStyleSheet().cssText = resetCSSText;\n        }\n    },\n    needsRebase: null,\n    getBasePosition: function () {\n        if (this.needsRebase === null) {\n            var style = window.getComputedStyle\n                ? getComputedStyle(document.body, null)\n                : document.body.currentStyle;\n            this.needsRebase = !!style && style.position !== 'static';\n        }\n        return this.needsRebase ? View.getElementRect(document.body) : { x: 0, y: 0 };\n    }\n});\n\nextend(B.BookmarkPanel.prototype, {\n    setup: function () {\n        /* var frameTitle = (this.title ? '『' + this.title + '』' : 'このエントリー') + 'をはてなブックマークに追加'; */\n        var frameTitle = (this.title ? '\\u300E' + this.title + '\\u300F' : '\\u3053\\u306E\\u30A8\\u30F3\\u30C8\\u30EA\\u30FC') + '\\u3092\\u306F\\u3066\\u306A\\u30D6\\u30C3\\u30AF\\u30DE\\u30FC\\u30AF\\u306B\\u8FFD\\u52A0';\n        this.panel = E('div', { className: 'hatena-bookmark-bookmark-panel' },\n            this.loading = E('div', null, E('span', null, 'Now Loading...')),\n            this.content = E('div', null,\n                this.frame = E('iframe', { title: frameTitle, scrolling: 'no', frameBorder: 0, allowTransparency: true, src: 'javascript:false' })\n            )\n        );\n        this.setupStyle();\n        document.body.appendChild(this.panel);\n        var panelURL = B.BookmarkPanel.makePanelURL(this.url, this.title);\n        this.messenger = WindowMessenger.createForFrame(this.frame, panelURL);\n        this.observers.push(\n            /* frame からのメッセージ受信失敗時の保険 */\n            new Observer(this.frame, 'load', this, 'showContent'),\n            new Observer(this.messenger, 'ready', this, 'showContent'),\n            new Observer(this.messenger, 'resize', this, 'resizeMessageHandler')\n        );\n    },\n    setupStyle: function () {\n        B.BookmarkPanel.setupCommonStyle();\n        var size = 'width: ' + this.width + 'px; height: ' + this.height + 'px;';\n        this.panel.style.cssText = 'position: absolute; z-index: 10002; display: none; ' + size;\n        this.loading.style.cssText = 'background-color: #fff; border: 3px solid #2c6ebd; -moz-border-radius: 5px; -webkit-border-radius: 5px; border-radius: 5px; text-align: center; width: ' + (this.width - 6) + 'px; height: ' + (this.height - 6) + 'px;';\n        this.loading.firstChild.style.cssText = 'background: url(\"' + B.staticOrigin + '/images/loading.gif\") left center no-repeat; padding-left: 23px; font-size: 0.85em; position: relative; top: ' + (this.height / 2 - 10) + 'px;';\n        this.content.style.cssText = 'display: none;';\n        this.frame.style.cssText = 'display: block; ' + size;\n    },\n    show: function (anchor, position, hideBackground) {\n        if (this.isShown) return;\n        if (B.BookmarkPanel.currentPanel)\n            B.BookmarkPanel.currentPanel.hide();\n        if (anchor)\n            this.anchorTo(anchor, position);\n        this.panel.style.display = '';\n        this.isShown = true;\n        this.clickObserver.start();\n        if (hideBackground)\n            this.hideFlashes();\n        B.BookmarkPanel.currentPanel = this;\n        if (!this.loading)\n            this.messenger.send('notifysize');\n    },\n    hideFlashes: function () {\n        var flashes = [];\n        var embeds = document.getElementsByTagName('embed');\n        for (var i = 0, embed; embed = embeds[i]; i++)\n            if (embed.type === 'application/x-shockwave-flash')\n                flashes.push(embed);\n        var objects = document.getElementsByTagName('object');\n        for (var i = 0, object; object = objects[i]; i++)\n            if (object.type === 'application/x-shockwave-flash' ||\n                (object.classid || '').toLowerCase() === 'clsid:d27cdb6e-ae6d-11cf-96b8-444553540000')\n                flashes.push(object);\n        if (!flashes.length) return;\n        var panelRect = View.getElementRect(this.panel);\n        var left = panelRect.x;\n        var top = panelRect.y;\n        var right = panelRect.x + panelRect.width;\n        var bottom = panelRect.y + Math.max(panelRect.height, 300);\n        for (var i = 0, flash; flash = flashes[i]; i++) {\n            var rect = View.getElementRect(flash);\n            if (rect.x + rect.width < left || right < rect.x ||\n                rect.y + rect.height < top || bottom < rect.y)\n                continue;\n            flash.style.visibility = 'hidden';\n            this.hiddenFlashes.push(flash);\n        }\n    },\n    showContent: function () {\n        if (!this.loading) return;\n        this.panel.removeChild(this.loading);\n        this.loading = null;\n        this.content.style.display = '';\n    },\n    hide: function () {\n        if (!this.isShown) return;\n        this.panel.style.display = 'none';\n        this.isShown = false;\n        this.clickObserver.stop();\n        for (var i = 0, flash; flash = this.hiddenFlashes[i]; i++)\n            flash.style.visibility = '';\n        this.hiddenFlashes = [];\n        B.BookmarkPanel.currentPanel = null;\n    },\n    resize: function (width, height) {\n        if (width > 0) {\n            this.panel.style.width = width + 'px';\n            this.frame.style.width = width + 'px';\n            this.width = width;\n        }\n        if (height > 0) {\n            if (this.fixedTo === 'bottom')\n                this.panel.style.top = parseFloat(this.panel.style.top) + this.height - height + 'px';\n            this.panel.style.height = height + 'px';\n            this.frame.style.height = height + 'px';\n            this.height = height;\n        }\n    },\n    anchorTo: function (anchor, position) {\n        var rect = View.getElementRect(anchor);\n        var isLeft = position && position.indexOf('left') >= 0;\n        var isTop = position && position.indexOf('top') >= 0;\n        if (!position) {\n            var size = View.getWindowSize();\n            var scroll = View.getScroll();\n            isLeft = (scroll.x + size.width) - rect.x < this.width &&\n                     (rect.x + rect.width) - scroll.x >= this.width;\n            var h = Math.max(this.height, 300);\n            isTop = (scroll.y + size.height) - (rect.y + rect.height) < h &&\n                    rect.y - scroll.y >= h;\n        }\n        var left = isLeft ? rect.x + rect.width - this.width : rect.x;\n        var top = isTop ? rect.y - this.height - 2 : rect.y + rect.height + 2;\n        var base = B.BookmarkPanel.getBasePosition();\n        this.panel.style.left = (Math.max(left, 2) - base.x) + 'px';\n        this.panel.style.top = (Math.max(top, 2) - base.y) + 'px';\n        this.fixedTo = isTop ? 'bottom' : 'top';\n    },\n    clickHandler: function (event) {\n        for (var node = event.target; node; node = node.parentNode)\n            if (node === this.panel)\n                return;\n        this.hide();\n    },\n    resizeMessageHandler: function (event) {\n        this.resize(event.data.width || -1, event.data.height || -1);\n    },\n    destroy: function () {\n        this.hide();\n        for (var i = 0, observer; observer = this.observers[i]; i++)\n            observer.stop();\n        this.messenger.destroy();\n        if (this.panel.parentNode)\n            this.panel.parentNode.removeChild(this.panel);\n    }\n});\n\n})(Hatena);\n\nHatena.Bookmark.BookmarkButton.setup();\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 9080
        },
        "cache": {},
        "timings": {
          "blocked": 0.337000004947186,
          "dns": -1,
          "connect": -1,
          "send": 0.08299993351101798,
          "wait": 2050.7139998953817,
          "receive": 27916.400999994945,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.165Z",
        "time": 24395.473000127822,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.blog.st-hatena.com/js/external/react-with-addons.min.js%3Fversion=15.4.1",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"0-8d38\""
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "content-length",
              "value": "36152"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 36152,
            "mimeType": "text/plain",
            "text": "/**\n * React (with addons) v15.4.2\n *\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var t;t=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,t.React=e()}}(function(){return function e(t,n,r){function o(a,s){if(!n[a]){if(!t[a]){var u=\"function\"==typeof require&&require;if(!s&&u)return u(a,!0);if(i)return i(a,!0);var c=new Error(\"Cannot find module '\"+a+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var p=n[a]={exports:{}};t[a][0].call(p.exports,function(e){var n=t[a][1][e];return o(n?n:e)},p,p.exports,e,t,n,r)}return n[a].exports}for(var i=\"function\"==typeof require&&require,a=0;a<r.length;a++)o(r[a]);return o}({1:[function(e,t,n){\"use strict\";function r(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n[\"Webkit\"+e]=\"webkit\"+t,n[\"Moz\"+e]=\"moz\"+t,n[\"ms\"+e]=\"MS\"+t,n[\"O\"+e]=\"o\"+t.toLowerCase(),n}function o(e){if(s[e])return s[e];if(!a[e])return e;var t=a[e];for(var n in t)if(t.hasOwnProperty(n)&&n in u)return s[e]=t[n];return\"\"}var i=e(40),a={animationend:r(\"Animation\",\"AnimationEnd\"),animationiteration:r(\"Animation\",\"AnimationIteration\"),animationstart:r(\"Animation\",\"AnimationStart\"),transitionend:r(\"Transition\",\"TransitionEnd\")},s={},u={};i.canUseDOM&&(u=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete a.animationend.animation,delete a.animationiteration.animation,delete a.animationstart.animation),\"TransitionEvent\"in window||delete a.transitionend.transition),t.exports=o},{40:40}],2:[function(e,t,n){\"use strict\";function r(e){var t=/[=:]/g,n={\"=\":\"=0\",\":\":\"=2\"},r=(\"\"+e).replace(t,function(e){return n[e]});return\"$\"+r}function o(e){var t=/(=0|=2)/g,n={\"=0\":\"=\",\"=2\":\":\"},r=\".\"===e[0]&&\"$\"===e[1]?e.substring(2):e.substring(1);return(\"\"+r).replace(t,function(e){return n[e]})}var i={escape:r,unescape:o};t.exports=i},{}],3:[function(e,t,n){\"use strict\";var r=e(18),o=e(24),i={linkState:function(e){return new r(this.state[e],o.createStateKeySetter(this,e))}};t.exports=i},{18:18,24:24}],4:[function(e,t,n){\"use strict\";var r=e(35),o=(e(43),function(e){var t=this;if(t.instancePool.length){var n=t.instancePool.pop();return t.call(n,e),n}return new t(e)}),i=function(e,t){var n=this;if(n.instancePool.length){var r=n.instancePool.pop();return n.call(r,e,t),r}return new n(e,t)},a=function(e,t,n){var r=this;if(r.instancePool.length){var o=r.instancePool.pop();return r.call(o,e,t,n),o}return new r(e,t,n)},s=function(e,t,n,r){var o=this;if(o.instancePool.length){var i=o.instancePool.pop();return o.call(i,e,t,n,r),i}return new o(e,t,n,r)},u=function(e){var t=this;e instanceof t?void 0:r(\"25\"),e.destructor(),t.instancePool.length<t.poolSize&&t.instancePool.push(e)},c=10,p=o,l=function(e,t){var n=e;return n.instancePool=[],n.getPooled=t||p,n.poolSize||(n.poolSize=c),n.release=u,n},f={addPoolingTo:l,oneArgumentPooler:o,twoArgumentPooler:i,threeArgumentPooler:a,fourArgumentPooler:s};t.exports=f},{35:35,43:43}],5:[function(e,t,n){\"use strict\";var r=e(46),o=e(9),i=e(11),a=e(23),s=e(10),u=e(14),c=e(15),p=e(21),l=e(28),f=e(34),d=(e(45),c.createElement),h=c.createFactory,v=c.cloneElement,y=r,m={Children:{map:o.map,forEach:o.forEach,count:o.count,toArray:o.toArray,only:f},Component:i,PureComponent:a,createElement:d,cloneElement:v,isValidElement:c.isValidElement,PropTypes:p,createClass:s.createClass,createFactory:h,createMixin:function(e){return e},DOM:u,version:l,__spread:y};t.exports=m},{10:10,11:11,14:14,15:15,21:21,23:23,28:28,34:34,45:45,46:46,9:9}],6:[function(e,t,n){\"use strict\";function r(){if(!o){var t=e(30);o=t.__SECRET_INJECTED_REACT_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED}return o}var o;n.getReactDOM=r},{30:30}],7:[function(e,t,n){\"use strict\";function r(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function o(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function i(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function a(e){var t=\"transition\"+e+\"Timeout\",n=\"transition\"+e;return function(e){if(e[n]){if(null==e[t])return new Error(t+\" wasn't supplied to ReactCSSTransitionGroup: this can cause unreliable animations and won't be supported in a future version of React. See https://fb.me/react-animation-transition-group-timeout for more information.\");if(\"number\"!=typeof e[t])return new Error(t+\" must be a number (in milliseconds)\")}}}var s=e(46),u=e(5),c=e(27),p=e(8),l=function(e){function t(){var n,i,a;r(this,t);for(var s=arguments.length,c=Array(s),l=0;l<s;l++)c[l]=arguments[l];return n=i=o(this,e.call.apply(e,[this].concat(c))),i._wrapChild=function(e){return u.createElement(p,{name:i.props.transitionName,appear:i.props.transitionAppear,enter:i.props.transitionEnter,leave:i.props.transitionLeave,appearTimeout:i.props.transitionAppearTimeout,enterTimeout:i.props.transitionEnterTimeout,leaveTimeout:i.props.transitionLeaveTimeout},e)},a=n,o(i,a)}return i(t,e),t.prototype.render=function(){return u.createElement(c,s({},this.props,{childFactory:this._wrapChild}))},t}(u.Component);l.displayName=\"ReactCSSTransitionGroup\",l.propTypes={transitionName:p.propTypes.name,transitionAppear:u.PropTypes.bool,transitionEnter:u.PropTypes.bool,transitionLeave:u.PropTypes.bool,transitionAppearTimeout:a(\"Appear\"),transitionEnterTimeout:a(\"Enter\"),transitionLeaveTimeout:a(\"Leave\")},l.defaultProps={transitionAppear:!1,transitionEnter:!0,transitionLeave:!0},t.exports=l},{27:27,46:46,5:5,8:8}],8:[function(e,t,n){\"use strict\";var r=e(5),o=e(6),i=e(39),a=e(26),s=e(34),u=17,c=r.createClass({displayName:\"ReactCSSTransitionGroupChild\",propTypes:{name:r.PropTypes.oneOfType([r.PropTypes.string,r.PropTypes.shape({enter:r.PropTypes.string,leave:r.PropTypes.string,active:r.PropTypes.string}),r.PropTypes.shape({enter:r.PropTypes.string,enterActive:r.PropTypes.string,leave:r.PropTypes.string,leaveActive:r.PropTypes.string,appear:r.PropTypes.string,appearActive:r.PropTypes.string})]).isRequired,appear:r.PropTypes.bool,enter:r.PropTypes.bool,leave:r.PropTypes.bool,appearTimeout:r.PropTypes.number,enterTimeout:r.PropTypes.number,leaveTimeout:r.PropTypes.number},transition:function(e,t,n){var r=o.getReactDOM().findDOMNode(this);if(!r)return void(t&&t());var s=this.props.name[e]||this.props.name+\"-\"+e,u=this.props.name[e+\"Active\"]||s+\"-active\",c=null,p=function(e){e&&e.target!==r||(clearTimeout(c),i.removeClass(r,s),i.removeClass(r,u),a.removeEndEventListener(r,p),t&&t())};i.addClass(r,s),this.queueClassAndNode(u,r),n?(c=setTimeout(p,n),this.transitionTimeouts.push(c)):a.addEndEventListener(r,p)},queueClassAndNode:function(e,t){this.classNameAndNodeQueue.push({className:e,node:t}),this.timeout||(this.timeout=setTimeout(this.flushClassNameAndNodeQueue,u))},flushClassNameAndNodeQueue:function(){this.isMounted()&&this.classNameAndNodeQueue.forEach(function(e){i.addClass(e.node,e.className)}),this.classNameAndNodeQueue.length=0,this.timeout=null},componentWillMount:function(){this.classNameAndNodeQueue=[],this.transitionTimeouts=[]},componentWillUnmount:function(){this.timeout&&clearTimeout(this.timeout),this.transitionTimeouts.forEach(function(e){clearTimeout(e)}),this.classNameAndNodeQueue.length=0},componentWillAppear:function(e){this.props.appear?this.transition(\"appear\",e,this.props.appearTimeout):e()},componentWillEnter:function(e){this.props.enter?this.transition(\"enter\",e,this.props.enterTimeout):e()},componentWillLeave:function(e){this.props.leave?this.transition(\"leave\",e,this.props.leaveTimeout):e()},render:function(){return s(this.props.children)}});t.exports=c},{26:26,34:34,39:39,5:5,6:6}],9:[function(e,t,n){\"use strict\";function r(e){return(\"\"+e).replace(b,\"$&/\")}function o(e,t){this.func=e,this.context=t,this.count=0}function i(e,t,n){var r=e.func,o=e.context;r.call(o,t,e.count++)}function a(e,t,n){if(null==e)return e;var r=o.getPooled(t,n);m(e,i,r),o.release(r)}function s(e,t,n,r){this.result=e,this.keyPrefix=t,this.func=n,this.context=r,this.count=0}function u(e,t,n){var o=e.result,i=e.keyPrefix,a=e.func,s=e.context,u=a.call(s,t,e.count++);Array.isArray(u)?c(u,o,n,y.thatReturnsArgument):null!=u&&(v.isValidElement(u)&&(u=v.cloneAndReplaceKey(u,i+(!u.key||t&&t.key===u.key?\"\":r(u.key)+\"/\")+n)),o.push(u))}function c(e,t,n,o,i){var a=\"\";null!=n&&(a=r(n)+\"/\");var c=s.getPooled(t,a,o,i);m(e,u,c),s.release(c)}function p(e,t,n){if(null==e)return e;var r=[];return c(e,r,null,t,n),r}function l(e,t,n){return null}function f(e,t){return m(e,l,null)}function d(e){var t=[];return c(e,t,null,y.thatReturnsArgument),t}var h=e(4),v=e(15),y=e(41),m=e(37),g=h.twoArgumentPooler,E=h.fourArgumentPooler,b=/\\/+/g;o.prototype.destructor=function(){this.func=null,this.context=null,this.count=0},h.addPoolingTo(o,g),s.prototype.destructor=function(){this.result=null,this.keyPrefix=null,this.func=null,this.context=null,this.count=0},h.addPoolingTo(s,E);var T={forEach:a,map:p,mapIntoWithKeyPrefixInternal:c,count:f,toArray:d};t.exports=T},{15:15,37:37,4:4,41:41}],10:[function(e,t,n){\"use strict\";function r(e){return e}function o(e,t){var n=b.hasOwnProperty(t)?b[t]:null;_.hasOwnProperty(t)&&(\"OVERRIDE_BASE\"!==n?f(\"73\",t):void 0),e&&(\"DEFINE_MANY\"!==n&&\"DEFINE_MANY_MERGED\"!==n?f(\"74\",t):void 0)}function i(e,t){if(t){\"function\"==typeof t?f(\"75\"):void 0,v.isValidElement(t)?f(\"76\"):void 0;var n=e.prototype,r=n.__reactAutoBindPairs;t.hasOwnProperty(g)&&T.mixins(e,t.mixins);for(var i in t)if(t.hasOwnProperty(i)&&i!==g){var a=t[i],s=n.hasOwnProperty(i);if(o(s,i),T.hasOwnProperty(i))T[i](e,a);else{var p=b.hasOwnProperty(i),l=\"function\"==typeof a,d=l&&!p&&!s&&t.autobind!==!1;if(d)r.push(i,a),n[i]=a;else if(s){var h=b[i];!p||\"DEFINE_MANY_MERGED\"!==h&&\"DEFINE_MANY\"!==h?f(\"77\",h,i):void 0,\"DEFINE_MANY_MERGED\"===h?n[i]=u(n[i],a):\"DEFINE_MANY\"===h&&(n[i]=c(n[i],a))}else n[i]=a}}}}function a(e,t){if(t)for(var n in t){var r=t[n];if(t.hasOwnProperty(n)){var o=n in T;o?f(\"78\",n):void 0;var i=n in e;i?f(\"79\",n):void 0,e[n]=r}}}function s(e,t){e&&t&&\"object\"==typeof e&&\"object\"==typeof t?void 0:f(\"80\");for(var n in t)t.hasOwnProperty(n)&&(void 0!==e[n]?f(\"81\",n):void 0,e[n]=t[n]);return e}function u(e,t){return function(){var n=e.apply(this,arguments),r=t.apply(this,arguments);if(null==n)return r;if(null==r)return n;var o={};return s(o,n),s(o,r),o}}function c(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function p(e,t){var n=t.bind(e);return n}function l(e){for(var t=e.__reactAutoBindPairs,n=0;n<t.length;n+=2){var r=t[n],o=t[n+1];e[r]=p(e,o)}}var f=e(35),d=e(46),h=e(11),v=e(15),y=(e(20),e(19)),m=e(42),g=(e(43),e(45),\"mixins\"),E=[],b={mixins:\"DEFINE_MANY\",statics:\"DEFINE_MANY\",propTypes:\"DEFINE_MANY\",contextTypes:\"DEFINE_MANY\",childContextTypes:\"DEFINE_MANY\",getDefaultProps:\"DEFINE_MANY_MERGED\",getInitialState:\"DEFINE_MANY_MERGED\",getChildContext:\"DEFINE_MANY_MERGED\",render:\"DEFINE_ONCE\",componentWillMount:\"DEFINE_MANY\",componentDidMount:\"DEFINE_MANY\",componentWillReceiveProps:\"DEFINE_MANY\",shouldComponentUpdate:\"DEFINE_ONCE\",componentWillUpdate:\"DEFINE_MANY\",componentDidUpdate:\"DEFINE_MANY\",componentWillUnmount:\"DEFINE_MANY\",updateComponent:\"OVERRIDE_BASE\"},T={displayName:function(e,t){e.displayName=t},mixins:function(e,t){if(t)for(var n=0;n<t.length;n++)i(e,t[n])},childContextTypes:function(e,t){e.childContextTypes=d({},e.childContextTypes,t)},contextTypes:function(e,t){e.contextTypes=d({},e.contextTypes,t)},getDefaultProps:function(e,t){e.getDefaultProps?e.getDefaultProps=u(e.getDefaultProps,t):e.getDefaultProps=t},propTypes:function(e,t){e.propTypes=d({},e.propTypes,t)},statics:function(e,t){a(e,t)},autobind:function(){}},_={replaceState:function(e,t){this.updater.enqueueReplaceState(this,e),t&&this.updater.enqueueCallback(this,t,\"replaceState\")},isMounted:function(){return this.updater.isMounted(this)}},P=function(){};d(P.prototype,h.prototype,_);var w={createClass:function(e){var t=r(function(e,n,r){this.__reactAutoBindPairs.length&&l(this),this.props=e,this.context=n,this.refs=m,this.updater=r||y,this.state=null;var o=this.getInitialState?this.getInitialState():null;\"object\"!=typeof o||Array.isArray(o)?f(\"82\",t.displayName||\"ReactCompositeComponent\"):void 0,this.state=o});t.prototype=new P,t.prototype.constructor=t,t.prototype.__reactAutoBindPairs=[],E.forEach(i.bind(null,t)),i(t,e),t.getDefaultProps&&(t.defaultProps=t.getDefaultProps()),t.prototype.render?void 0:f(\"83\");for(var n in b)t.prototype[n]||(t.prototype[n]=null);return t},injection:{injectMixin:function(e){E.push(e)}}};t.exports=w},{11:11,15:15,19:19,20:20,35:35,42:42,43:43,45:45,46:46}],11:[function(e,t,n){\"use strict\";function r(e,t,n){this.props=e,this.context=t,this.refs=a,this.updater=n||i}var o=e(35),i=e(19),a=(e(31),e(42));e(43),e(45);r.prototype.isReactComponent={},r.prototype.setState=function(e,t){\"object\"!=typeof e&&\"function\"!=typeof e&&null!=e?o(\"85\"):void 0,this.updater.enqueueSetState(this,e),t&&this.updater.enqueueCallback(this,t,\"setState\")},r.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this),e&&this.updater.enqueueCallback(this,e,\"forceUpdate\")};t.exports=r},{19:19,31:31,35:35,42:42,43:43,45:45}],12:[function(e,t,n){\"use strict\";var r=e(36),o={shouldComponentUpdate:function(e,t){return r(this,e,t)}};t.exports=o},{36:36}],13:[function(e,t,n){\"use strict\";var r={current:null};t.exports=r},{}],14:[function(e,t,n){\"use strict\";var r=e(15),o=r.createFactory,i={a:o(\"a\"),abbr:o(\"abbr\"),address:o(\"address\"),area:o(\"area\"),article:o(\"article\"),aside:o(\"aside\"),audio:o(\"audio\"),b:o(\"b\"),base:o(\"base\"),bdi:o(\"bdi\"),bdo:o(\"bdo\"),big:o(\"big\"),blockquote:o(\"blockquote\"),body:o(\"body\"),br:o(\"br\"),button:o(\"button\"),canvas:o(\"canvas\"),caption:o(\"caption\"),cite:o(\"cite\"),code:o(\"code\"),col:o(\"col\"),colgroup:o(\"colgroup\"),data:o(\"data\"),datalist:o(\"datalist\"),dd:o(\"dd\"),del:o(\"del\"),details:o(\"details\"),dfn:o(\"dfn\"),dialog:o(\"dialog\"),div:o(\"div\"),dl:o(\"dl\"),dt:o(\"dt\"),em:o(\"em\"),embed:o(\"embed\"),fieldset:o(\"fieldset\"),figcaption:o(\"figcaption\"),figure:o(\"figure\"),footer:o(\"footer\"),form:o(\"form\"),h1:o(\"h1\"),h2:o(\"h2\"),h3:o(\"h3\"),h4:o(\"h4\"),h5:o(\"h5\"),h6:o(\"h6\"),head:o(\"head\"),header:o(\"header\"),hgroup:o(\"hgroup\"),hr:o(\"hr\"),html:o(\"html\"),i:o(\"i\"),iframe:o(\"iframe\"),img:o(\"img\"),input:o(\"input\"),ins:o(\"ins\"),kbd:o(\"kbd\"),keygen:o(\"keygen\"),label:o(\"label\"),legend:o(\"legend\"),li:o(\"li\"),link:o(\"link\"),main:o(\"main\"),map:o(\"map\"),mark:o(\"mark\"),menu:o(\"menu\"),menuitem:o(\"menuitem\"),meta:o(\"meta\"),meter:o(\"meter\"),nav:o(\"nav\"),noscript:o(\"noscript\"),object:o(\"object\"),ol:o(\"ol\"),optgroup:o(\"optgroup\"),option:o(\"option\"),output:o(\"output\"),p:o(\"p\"),param:o(\"param\"),picture:o(\"picture\"),pre:o(\"pre\"),progress:o(\"progress\"),q:o(\"q\"),rp:o(\"rp\"),rt:o(\"rt\"),ruby:o(\"ruby\"),s:o(\"s\"),samp:o(\"samp\"),script:o(\"script\"),section:o(\"section\"),select:o(\"select\"),small:o(\"small\"),source:o(\"source\"),span:o(\"span\"),strong:o(\"strong\"),style:o(\"style\"),sub:o(\"sub\"),summary:o(\"summary\"),sup:o(\"sup\"),table:o(\"table\"),tbody:o(\"tbody\"),td:o(\"td\"),textarea:o(\"textarea\"),tfoot:o(\"tfoot\"),th:o(\"th\"),thead:o(\"thead\"),time:o(\"time\"),title:o(\"title\"),tr:o(\"tr\"),track:o(\"track\"),u:o(\"u\"),ul:o(\"ul\"),var:o(\"var\"),video:o(\"video\"),wbr:o(\"wbr\"),circle:o(\"circle\"),clipPath:o(\"clipPath\"),defs:o(\"defs\"),ellipse:o(\"ellipse\"),g:o(\"g\"),image:o(\"image\"),line:o(\"line\"),linearGradient:o(\"linearGradient\"),mask:o(\"mask\"),path:o(\"path\"),pattern:o(\"pattern\"),polygon:o(\"polygon\"),polyline:o(\"polyline\"),radialGradient:o(\"radialGradient\"),rect:o(\"rect\"),stop:o(\"stop\"),svg:o(\"svg\"),text:o(\"text\"),tspan:o(\"tspan\")};t.exports=i},{15:15}],15:[function(e,t,n){\"use strict\";function r(e){return void 0!==e.ref}function o(e){return void 0!==e.key}var i=e(46),a=e(13),s=(e(45),e(31),Object.prototype.hasOwnProperty),u=e(16),c={key:!0,ref:!0,__self:!0,__source:!0},p=function(e,t,n,r,o,i,a){var s={$$typeof:u,type:e,key:t,ref:n,props:a,_owner:i};return s};p.createElement=function(e,t,n){var i,u={},l=null,f=null,d=null,h=null;if(null!=t){r(t)&&(f=t.ref),o(t)&&(l=\"\"+t.key),d=void 0===t.__self?null:t.__self,h=void 0===t.__source?null:t.__source;for(i in t)s.call(t,i)&&!c.hasOwnProperty(i)&&(u[i]=t[i])}var v=arguments.length-2;if(1===v)u.children=n;else if(v>1){for(var y=Array(v),m=0;m<v;m++)y[m]=arguments[m+2];u.children=y}if(e&&e.defaultProps){var g=e.defaultProps;for(i in g)void 0===u[i]&&(u[i]=g[i])}return p(e,l,f,d,h,a.current,u)},p.createFactory=function(e){var t=p.createElement.bind(null,e);return t.type=e,t},p.cloneAndReplaceKey=function(e,t){var n=p(e.type,t,e.ref,e._self,e._source,e._owner,e.props);return n},p.cloneElement=function(e,t,n){var u,l=i({},e.props),f=e.key,d=e.ref,h=e._self,v=e._source,y=e._owner;if(null!=t){r(t)&&(d=t.ref,y=a.current),o(t)&&(f=\"\"+t.key);var m;e.type&&e.type.defaultProps&&(m=e.type.defaultProps);for(u in t)s.call(t,u)&&!c.hasOwnProperty(u)&&(void 0===t[u]&&void 0!==m?l[u]=m[u]:l[u]=t[u])}var g=arguments.length-2;if(1===g)l.children=n;else if(g>1){for(var E=Array(g),b=0;b<g;b++)E[b]=arguments[b+2];l.children=E}return p(e.type,f,d,h,v,y,l)},p.isValidElement=function(e){return\"object\"==typeof e&&null!==e&&e.$$typeof===u},t.exports=p},{13:13,16:16,31:31,45:45,46:46}],16:[function(e,t,n){\"use strict\";var r=\"function\"==typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103;t.exports=r},{}],17:[function(e,t,n){\"use strict\";var r=e(35),o=e(9),i=e(15),a=e(41),s=(e(43),e(45),{create:function(e){if(\"object\"!=typeof e||!e||Array.isArray(e))return e;if(i.isValidElement(e))return e;1===e.nodeType?r(\"0\"):void 0;var t=[];for(var n in e)o.mapIntoWithKeyPrefixInternal(e[n],t,n,a.thatReturnsArgument);return t}});t.exports=s},{15:15,35:35,41:41,43:43,45:45,9:9}],18:[function(e,t,n){\"use strict\";function r(e,t){this.value=e,this.requestChange=t}function o(e){var t={value:void 0===e?i.PropTypes.any.isRequired:e.isRequired,requestChange:i.PropTypes.func.isRequired};return i.PropTypes.shape(t)}var i=e(5);r.PropTypes={link:o},t.exports=r},{5:5}],19:[function(e,t,n){\"use strict\";function r(e,t){}var o=(e(45),{isMounted:function(e){return!1},enqueueCallback:function(e,t){},enqueueForceUpdate:function(e){r(e,\"forceUpdate\")},enqueueReplaceState:function(e,t){r(e,\"replaceState\")},enqueueSetState:function(e,t){r(e,\"setState\")}});t.exports=o},{45:45}],20:[function(e,t,n){\"use strict\";var r={};t.exports=r},{}],21:[function(e,t,n){\"use strict\";function r(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}function o(e){this.message=e,this.stack=\"\"}function i(e){function t(t,n,r,i,a,s,u){if(i=i||x,s=s||r,null==n[r]){var c=_[a];return t?new o(null===n[r]?\"The \"+c+\" `\"+s+\"` is marked as required \"+(\"in `\"+i+\"`, but its value is `null`.\"):\"The \"+c+\" `\"+s+\"` is marked as required in \"+(\"`\"+i+\"`, but its value is `undefined`.\")):null}return e(n,r,i,a,s)}var n=t.bind(null,!1);return n.isRequired=t.bind(null,!0),n}function a(e){function t(t,n,r,i,a,s){var u=t[n],c=g(u);if(c!==e){var p=_[i],l=E(u);return new o(\"Invalid \"+p+\" `\"+a+\"` of type \"+(\"`\"+l+\"` supplied to `\"+r+\"`, expected \")+(\"`\"+e+\"`.\"))}return null}return i(t)}function s(){return i(w.thatReturns(null))}function u(e){function t(t,n,r,i,a){if(\"function\"!=typeof e)return new o(\"Property `\"+a+\"` of component `\"+r+\"` has invalid PropType notation inside arrayOf.\");var s=t[n];if(!Array.isArray(s)){var u=_[i],c=g(s);return new o(\"Invalid \"+u+\" `\"+a+\"` of type \"+(\"`\"+c+\"` supplied to `\"+r+\"`, expected an array.\"))}for(var p=0;p<s.length;p++){var l=e(s,p,r,i,a+\"[\"+p+\"]\",P);if(l instanceof Error)return l}return null}return i(t)}function c(){function e(e,t,n,r,i){var a=e[t];if(!T.isValidElement(a)){var s=_[r],u=g(a);return new o(\"Invalid \"+s+\" `\"+i+\"` of type \"+(\"`\"+u+\"` supplied to `\"+n+\"`, expected a single ReactElement.\"))}return null}return i(e)}function p(e){function t(t,n,r,i,a){if(!(t[n]instanceof e)){var s=_[i],u=e.name||x,c=b(t[n]);return new o(\"Invalid \"+s+\" `\"+a+\"` of type \"+(\"`\"+c+\"` supplied to `\"+r+\"`, expected \")+(\"instance of `\"+u+\"`.\"))}return null}return i(t)}function l(e){function t(t,n,i,a,s){for(var u=t[n],c=0;c<e.length;c++)if(r(u,e[c]))return null;var p=_[a],l=JSON.stringify(e);return new o(\"Invalid \"+p+\" `\"+s+\"` of value `\"+u+\"` \"+(\"supplied to `\"+i+\"`, expected one of \"+l+\".\"))}return Array.isArray(e)?i(t):w.thatReturnsNull}function f(e){function t(t,n,r,i,a){if(\"function\"!=typeof e)return new o(\"Property `\"+a+\"` of component `\"+r+\"` has invalid PropType notation inside objectOf.\");var s=t[n],u=g(s);if(\"object\"!==u){var c=_[i];return new o(\"Invalid \"+c+\" `\"+a+\"` of type \"+(\"`\"+u+\"` supplied to `\"+r+\"`, expected an object.\"))}for(var p in s)if(s.hasOwnProperty(p)){var l=e(s,p,r,i,a+\".\"+p,P);if(l instanceof Error)return l}return null}return i(t)}function d(e){function t(t,n,r,i,a){for(var s=0;s<e.length;s++){var u=e[s];if(null==u(t,n,r,i,a,P))return null}var c=_[i];return new o(\"Invalid \"+c+\" `\"+a+\"` supplied to \"+(\"`\"+r+\"`.\"))}return Array.isArray(e)?i(t):w.thatReturnsNull}function h(){function e(e,t,n,r,i){if(!y(e[t])){var a=_[r];return new o(\"Invalid \"+a+\" `\"+i+\"` supplied to \"+(\"`\"+n+\"`, expected a ReactNode.\"))}return null}return i(e)}function v(e){function t(t,n,r,i,a){var s=t[n],u=g(s);if(\"object\"!==u){var c=_[i];return new o(\"Invalid \"+c+\" `\"+a+\"` of type `\"+u+\"` \"+(\"supplied to `\"+r+\"`, expected `object`.\"))}for(var p in e){var l=e[p];if(l){var f=l(s,p,r,i,a+\".\"+p,P);if(f)return f}}return null}return i(t)}function y(e){switch(typeof e){case\"number\":case\"string\":case\"undefined\":return!0;case\"boolean\":return!e;case\"object\":if(Array.isArray(e))return e.every(y);if(null===e||T.isValidElement(e))return!0;var t=A(e);if(!t)return!1;var n,r=t.call(e);if(t!==e.entries){for(;!(n=r.next()).done;)if(!y(n.value))return!1}else for(;!(n=r.next()).done;){var o=n.value;if(o&&!y(o[1]))return!1}return!0;default:return!1}}function m(e,t){return\"symbol\"===e||\"Symbol\"===t[\"@@toStringTag\"]||\"function\"==typeof Symbol&&t instanceof Symbol}function g(e){var t=typeof e;return Array.isArray(e)?\"array\":e instanceof RegExp?\"object\":m(t,e)?\"symbol\":t}function E(e){var t=g(e);if(\"object\"===t){if(e instanceof Date)return\"date\";if(e instanceof RegExp)return\"regexp\"}return t}function b(e){return e.constructor&&e.constructor.name?e.constructor.name:x}var T=e(15),_=e(20),P=e(22),w=e(41),A=e(33),x=(e(45),\"<<anonymous>>\"),O={array:a(\"array\"),bool:a(\"boolean\"),func:a(\"function\"),number:a(\"number\"),object:a(\"object\"),string:a(\"string\"),symbol:a(\"symbol\"),any:s(),arrayOf:u,element:c(),instanceOf:p,node:h(),objectOf:f,oneOf:l,oneOfType:d,shape:v};o.prototype=Error.prototype,t.exports=O},{15:15,20:20,22:22,33:33,41:41,45:45}],22:[function(e,t,n){\"use strict\";var r=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\";t.exports=r},{}],23:[function(e,t,n){\"use strict\";function r(e,t,n){this.props=e,this.context=t,this.refs=u,this.updater=n||s}function o(){}var i=e(46),a=e(11),s=e(19),u=e(42);o.prototype=a.prototype,r.prototype=new o,r.prototype.constructor=r,i(r.prototype,a.prototype),r.prototype.isPureReactComponent=!0,t.exports=r},{11:11,19:19,42:42,46:46}],24:[function(e,t,n){\"use strict\";function r(e,t){var n={};return function(r){n[t]=r,e.setState(n)}}var o={createStateSetter:function(e,t){return function(n,r,o,i,a,s){var u=t.call(e,n,r,o,i,a,s);u&&e.setState(u)}},createStateKeySetter:function(e,t){var n=e.__keySetters||(e.__keySetters={});return n[t]||(n[t]=r(e,t))}};o.Mixin={createStateSetter:function(e){return o.createStateSetter(this,e)},createStateKeySetter:function(e){return o.createStateKeySetter(this,e)}},t.exports=o},{}],25:[function(e,t,n){\"use strict\";var r=e(32),o={getChildMapping:function(e,t){return e?r(e):e},mergeChildMappings:function(e,t){function n(n){return t.hasOwnProperty(n)?t[n]:e[n]}e=e||{},t=t||{};var r={},o=[];for(var i in e)t.hasOwnProperty(i)?o.length&&(r[i]=o,o=[]):o.push(i);var a,s={};for(var u in t){if(r.hasOwnProperty(u))for(a=0;a<r[u].length;a++){var c=r[u][a];s[r[u][a]]=n(c)}s[u]=n(u)}for(a=0;a<o.length;a++)s[o[a]]=n(o[a]);return s}};t.exports=o},{32:32}],26:[function(e,t,n){\"use strict\";function r(){var e=s(\"animationend\"),t=s(\"transitionend\");e&&u.push(e),t&&u.push(t)}function o(e,t,n){e.addEventListener(t,n,!1)}function i(e,t,n){e.removeEventListener(t,n,!1)}var a=e(40),s=e(1),u=[];a.canUseDOM&&r();var c={addEndEventListener:function(e,t){return 0===u.length?void window.setTimeout(t,0):void u.forEach(function(n){o(e,n,t)})},removeEndEventListener:function(e,t){0!==u.length&&u.forEach(function(n){i(e,n,t)})}};t.exports=c},{1:1,40:40}],27:[function(e,t,n){\"use strict\";function r(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function o(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function i(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=e(46),s=e(5),u=e(25),c=e(41),p=function(e){function t(){var n,i,s;r(this,t);for(var c=arguments.length,p=Array(c),l=0;l<c;l++)p[l]=arguments[l];return n=i=o(this,e.call.apply(e,[this].concat(p))),i.state={children:u.getChildMapping(i.props.children)},i.performAppear=function(e){i.currentlyTransitioningKeys[e]=!0;var t=i.refs[e];t.componentWillAppear?t.componentWillAppear(i._handleDoneAppearing.bind(i,e)):i._handleDoneAppearing(e)},i._handleDoneAppearing=function(e){var t=i.refs[e];t.componentDidAppear&&t.componentDidAppear(),delete i.currentlyTransitioningKeys[e];var n=u.getChildMapping(i.props.children);n&&n.hasOwnProperty(e)||i.performLeave(e)},i.performEnter=function(e){i.currentlyTransitioningKeys[e]=!0;var t=i.refs[e];t.componentWillEnter?t.componentWillEnter(i._handleDoneEntering.bind(i,e)):i._handleDoneEntering(e)},i._handleDoneEntering=function(e){var t=i.refs[e];t.componentDidEnter&&t.componentDidEnter(),delete i.currentlyTransitioningKeys[e];var n=u.getChildMapping(i.props.children);n&&n.hasOwnProperty(e)||i.performLeave(e)},i.performLeave=function(e){i.currentlyTransitioningKeys[e]=!0;var t=i.refs[e];t.componentWillLeave?t.componentWillLeave(i._handleDoneLeaving.bind(i,e)):i._handleDoneLeaving(e)},i._handleDoneLeaving=function(e){var t=i.refs[e];t.componentDidLeave&&t.componentDidLeave(),delete i.currentlyTransitioningKeys[e];var n=u.getChildMapping(i.props.children);n&&n.hasOwnProperty(e)?i.performEnter(e):i.setState(function(t){var n=a({},t.children);return delete n[e],{children:n}})},s=n,o(i,s)}return i(t,e),t.prototype.componentWillMount=function(){this.currentlyTransitioningKeys={},this.keysToEnter=[],this.keysToLeave=[]},t.prototype.componentDidMount=function(){var e=this.state.children;for(var t in e)e[t]&&this.performAppear(t)},t.prototype.componentWillReceiveProps=function(e){var t=u.getChildMapping(e.children),n=this.state.children;this.setState({children:u.mergeChildMappings(n,t)});var r;for(r in t){var o=n&&n.hasOwnProperty(r);!t[r]||o||this.currentlyTransitioningKeys[r]||this.keysToEnter.push(r)}for(r in n){var i=t&&t.hasOwnProperty(r);!n[r]||i||this.currentlyTransitioningKeys[r]||this.keysToLeave.push(r)}},t.prototype.componentDidUpdate=function(){var e=this.keysToEnter;this.keysToEnter=[],e.forEach(this.performEnter);var t=this.keysToLeave;this.keysToLeave=[],t.forEach(this.performLeave)},t.prototype.render=function(){var e=[];for(var t in this.state.children){var n=this.state.children[t];n&&e.push(s.cloneElement(this.props.childFactory(n),{ref:t,key:t}))}var r=a({},this.props);return delete r.transitionLeave,delete r.transitionName,delete r.transitionAppear,delete r.transitionEnter,delete r.childFactory,delete r.transitionLeaveTimeout,delete r.transitionEnterTimeout,delete r.transitionAppearTimeout,delete r.component,s.createElement(this.props.component,r,e)},t}(s.Component);p.displayName=\"ReactTransitionGroup\",p.propTypes={component:s.PropTypes.any,childFactory:s.PropTypes.func},p.defaultProps={component:\"span\",childFactory:c.thatReturnsArgument},t.exports=p},{25:25,41:41,46:46,5:5}],28:[function(e,t,n){\"use strict\";t.exports=\"15.4.2\"},{}],29:[function(e,t,n){\"use strict\";var r=e(3),o=e(5),i=(e(6),e(12)),a=e(7),s=e(17),u=e(27),c=e(36),p=e(38);o.addons={CSSTransitionGroup:a,LinkedStateMixin:r,PureRenderMixin:i,TransitionGroup:u,createFragment:s.create,shallowCompare:c,update:p},t.exports=o},{12:12,17:17,27:27,3:3,36:36,38:38,5:5,6:6,7:7}],30:[function(e,t,n){\"use strict\";var r=e(46),o=e(29),i=r({__SECRET_INJECTED_REACT_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:null,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:e(13)}},o);t.exports=i},{13:13,29:29,46:46}],31:[function(e,t,n){\"use strict\";var r=!1;t.exports=r},{}],32:[function(e,t,n){(function(n){\"use strict\";function r(e,t,n,r){if(e&&\"object\"==typeof e){var o=e,i=void 0===o[n];i&&null!=t&&(o[n]=t)}}function o(e,t){if(null==e)return e;var n={};return i(e,r,n),n}var i=(e(2),e(37));e(45);\"undefined\"!=typeof n&&n.env,t.exports=o}).call(this,void 0)},{2:2,37:37,45:45}],33:[function(e,t,n){\"use strict\";function r(e){var t=e&&(o&&e[o]||e[i]);if(\"function\"==typeof t)return t}var o=\"function\"==typeof Symbol&&Symbol.iterator,i=\"@@iterator\";t.exports=r},{}],34:[function(e,t,n){\"use strict\";function r(e){return i.isValidElement(e)?void 0:o(\"143\"),e}var o=e(35),i=e(15);e(43);t.exports=r},{15:15,35:35,43:43}],35:[function(e,t,n){\"use strict\";function r(e){for(var t=arguments.length-1,n=\"Minified React error #\"+e+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant=\"+e,r=0;r<t;r++)n+=\"&args[]=\"+encodeURIComponent(arguments[r+1]);n+=\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\";var o=new Error(n);throw o.name=\"Invariant Violation\",o.framesToPop=1,o}t.exports=r},{}],36:[function(e,t,n){\"use strict\";function r(e,t,n){return!o(e.props,t)||!o(e.state,n)}var o=e(44);t.exports=r},{44:44}],37:[function(e,t,n){\"use strict\";function r(e,t){return e&&\"object\"==typeof e&&null!=e.key?c.escape(e.key):t.toString(36)}function o(e,t,n,i){var f=typeof e;if(\"undefined\"!==f&&\"boolean\"!==f||(e=null),null===e||\"string\"===f||\"number\"===f||\"object\"===f&&e.$$typeof===s)return n(i,e,\"\"===t?p+r(e,0):t),1;var d,h,v=0,y=\"\"===t?p:t+l;if(Array.isArray(e))for(var m=0;m<e.length;m++)d=e[m],h=y+r(d,m),v+=o(d,h,n,i);else{var g=u(e);if(g){var E,b=g.call(e);if(g!==e.entries)for(var T=0;!(E=b.next()).done;)d=E.value,h=y+r(d,T++),v+=o(d,h,n,i);else for(;!(E=b.next()).done;){var _=E.value;_&&(d=_[1],h=y+c.escape(_[0])+l+r(d,0),v+=o(d,h,n,i))}}else if(\"object\"===f){var P=\"\",w=String(e);a(\"31\",\"[object Object]\"===w?\"object with keys {\"+Object.keys(e).join(\", \")+\"}\":w,P)}}return v}function i(e,t,n){return null==e?0:o(e,\"\",t,n)}var a=e(35),s=(e(13),e(16)),u=e(33),c=(e(43),e(2)),p=(e(45),\".\"),l=\":\";t.exports=i},{13:13,16:16,2:2,33:33,35:35,43:43,45:45}],38:[function(e,t,n){\"use strict\";function r(e){return Array.isArray(e)?e.concat():e&&\"object\"==typeof e?s(new e.constructor,e):e}function o(e,t,n){Array.isArray(e)?void 0:a(\"1\",n,e);var r=t[n];Array.isArray(r)?void 0:a(\"2\",n,r)}function i(e,t){if(\"object\"!=typeof t?a(\"3\",v.join(\", \"),f):void 0,u.call(t,f))return 1!==Object.keys(t).length?a(\"4\",f):void 0,t[f];var n=r(e);if(u.call(t,d)){var m=t[d];m&&\"object\"==typeof m?void 0:a(\"5\",d,m),n&&\"object\"==typeof n?void 0:a(\"6\",d,n),s(n,t[d])}u.call(t,c)&&(o(e,t,c),t[c].forEach(function(e){n.push(e)})),u.call(t,p)&&(o(e,t,p),t[p].forEach(function(e){n.unshift(e)})),u.call(t,l)&&(Array.isArray(e)?void 0:a(\"7\",l,e),Array.isArray(t[l])?void 0:a(\"8\",l,t[l]),t[l].forEach(function(e){Array.isArray(e)?void 0:a(\"8\",l,t[l]),n.splice.apply(n,e)})),u.call(t,h)&&(\"function\"!=typeof t[h]?a(\"9\",h,t[h]):void 0,n=t[h](n));\nfor(var g in t)y.hasOwnProperty(g)&&y[g]||(n[g]=i(e[g],t[g]));return n}var a=e(35),s=e(46),u=(e(43),{}.hasOwnProperty),c=\"$push\",p=\"$unshift\",l=\"$splice\",f=\"$set\",d=\"$merge\",h=\"$apply\",v=[c,p,l,f,d,h],y={};v.forEach(function(e){y[e]=!0}),t.exports=i},{35:35,43:43,46:46}],39:[function(e,t,n){\"use strict\";function r(e,t){for(var n=e;n.parentNode;)n=n.parentNode;var r=n.querySelectorAll(t);return Array.prototype.indexOf.call(r,e)!==-1}var o=e(43),i={addClass:function(e,t){return/\\s/.test(t)?o(!1):void 0,t&&(e.classList?e.classList.add(t):i.hasClass(e,t)||(e.className=e.className+\" \"+t)),e},removeClass:function(e,t){return/\\s/.test(t)?o(!1):void 0,t&&(e.classList?e.classList.remove(t):i.hasClass(e,t)&&(e.className=e.className.replace(new RegExp(\"(^|\\\\s)\"+t+\"(?:\\\\s|$)\",\"g\"),\"$1\").replace(/\\s+/g,\" \").replace(/^\\s*|\\s*$/g,\"\"))),e},conditionClass:function(e,t,n){return(n?i.addClass:i.removeClass)(e,t)},hasClass:function(e,t){return/\\s/.test(t)?o(!1):void 0,e.classList?!!t&&e.classList.contains(t):(\" \"+e.className+\" \").indexOf(\" \"+t+\" \")>-1},matchesSelector:function(e,t){var n=e.matches||e.webkitMatchesSelector||e.mozMatchesSelector||e.msMatchesSelector||function(t){return r(e,t)};return n.call(e,t)}};t.exports=i},{43:43}],40:[function(e,t,n){\"use strict\";var r=!(\"undefined\"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:\"undefined\"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};t.exports=o},{}],41:[function(e,t,n){\"use strict\";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},t.exports=o},{}],42:[function(e,t,n){\"use strict\";var r={};t.exports=r},{}],43:[function(e,t,n){\"use strict\";function r(e,t,n,r,i,a,s,u){if(o(t),!e){var c;if(void 0===t)c=new Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var p=[n,r,i,a,s,u],l=0;c=new Error(t.replace(/%s/g,function(){return p[l++]})),c.name=\"Invariant Violation\"}throw c.framesToPop=1,c}}var o=function(e){};t.exports=r},{}],44:[function(e,t,n){\"use strict\";function r(e,t){return e===t?0!==e||0!==t||1/e===1/t:e!==e&&t!==t}function o(e,t){if(r(e,t))return!0;if(\"object\"!=typeof e||null===e||\"object\"!=typeof t||null===t)return!1;var n=Object.keys(e),o=Object.keys(t);if(n.length!==o.length)return!1;for(var a=0;a<n.length;a++)if(!i.call(t,n[a])||!r(e[n[a]],t[n[a]]))return!1;return!0}var i=Object.prototype.hasOwnProperty;t.exports=o},{}],45:[function(e,t,n){\"use strict\";var r=e(41),o=r;t.exports=o},{41:41}],46:[function(e,t,n){\"use strict\";function r(e){if(null===e||void 0===e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}function o(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t[\"_\"+String.fromCharCode(n)]=n;var r=Object.getOwnPropertyNames(t).map(function(e){return t[e]});if(\"0123456789\"!==r.join(\"\"))return!1;var o={};return\"abcdefghijklmnopqrst\".split(\"\").forEach(function(e){o[e]=e}),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},o)).join(\"\")}catch(e){return!1}}var i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;t.exports=o()?Object.assign:function(e,t){for(var n,o,s=r(e),u=1;u<arguments.length;u++){n=Object(arguments[u]);for(var c in n)i.call(n,c)&&(s[c]=n[c]);if(Object.getOwnPropertySymbols){o=Object.getOwnPropertySymbols(n);for(var p=0;p<o.length;p++)a.call(n,o[p])&&(s[o[p]]=n[o[p]])}}return s}},{}]},{},[30])(30)});"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 36972
        },
        "cache": {},
        "timings": {
          "blocked": 3.41300014406443,
          "dns": -1,
          "connect": -1,
          "send": 0.08999998681247012,
          "wait": 2059.803999960423,
          "receive": 22332.166000036523,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.165Z",
        "time": 70455.09300008416,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.blog.st-hatena.com/js/external/react-dom.min.js%3Fversion=15.4.1",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"0-1e3f1\""
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "content-length",
              "value": "123889"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 123889,
            "mimeType": "text/plain",
            "text": "/**\n * ReactDOM v15.4.2\n *\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e(require(\"react\"));else if(\"function\"==typeof define&&define.amd)define([\"react\"],e);else{var t;t=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,t.ReactDOM=e(t.React)}}(function(e){return function(e){return e()}(function(){return function e(t,n,r){function o(a,s){if(!n[a]){if(!t[a]){var u=\"function\"==typeof require&&require;if(!s&&u)return u(a,!0);if(i)return i(a,!0);var l=new Error(\"Cannot find module '\"+a+\"'\");throw l.code=\"MODULE_NOT_FOUND\",l}var c=n[a]={exports:{}};t[a][0].call(c.exports,function(e){var n=t[a][1][e];return o(n?n:e)},c,c.exports,e,t,n,r)}return n[a].exports}for(var i=\"function\"==typeof require&&require,a=0;a<r.length;a++)o(r[a]);return o}({1:[function(e,t,n){\"use strict\";var r={Properties:{\"aria-current\":0,\"aria-details\":0,\"aria-disabled\":0,\"aria-hidden\":0,\"aria-invalid\":0,\"aria-keyshortcuts\":0,\"aria-label\":0,\"aria-roledescription\":0,\"aria-autocomplete\":0,\"aria-checked\":0,\"aria-expanded\":0,\"aria-haspopup\":0,\"aria-level\":0,\"aria-modal\":0,\"aria-multiline\":0,\"aria-multiselectable\":0,\"aria-orientation\":0,\"aria-placeholder\":0,\"aria-pressed\":0,\"aria-readonly\":0,\"aria-required\":0,\"aria-selected\":0,\"aria-sort\":0,\"aria-valuemax\":0,\"aria-valuemin\":0,\"aria-valuenow\":0,\"aria-valuetext\":0,\"aria-atomic\":0,\"aria-busy\":0,\"aria-live\":0,\"aria-relevant\":0,\"aria-dropeffect\":0,\"aria-grabbed\":0,\"aria-activedescendant\":0,\"aria-colcount\":0,\"aria-colindex\":0,\"aria-colspan\":0,\"aria-controls\":0,\"aria-describedby\":0,\"aria-errormessage\":0,\"aria-flowto\":0,\"aria-labelledby\":0,\"aria-owns\":0,\"aria-posinset\":0,\"aria-rowcount\":0,\"aria-rowindex\":0,\"aria-rowspan\":0,\"aria-setsize\":0},DOMAttributeNames:{},DOMPropertyNames:{}};t.exports=r},{}],2:[function(e,t,n){\"use strict\";var r=e(33),o=e(131),i={focusDOMComponent:function(){o(r.getNodeFromInstance(this))}};t.exports=i},{131:131,33:33}],3:[function(e,t,n){\"use strict\";function r(){var e=window.opera;return\"object\"==typeof e&&\"function\"==typeof e.version&&parseInt(e.version(),10)<=12}function o(e){return(e.ctrlKey||e.altKey||e.metaKey)&&!(e.ctrlKey&&e.altKey)}function i(e){switch(e){case\"topCompositionStart\":return k.compositionStart;case\"topCompositionEnd\":return k.compositionEnd;case\"topCompositionUpdate\":return k.compositionUpdate}}function a(e,t){return\"topKeyDown\"===e&&t.keyCode===_}function s(e,t){switch(e){case\"topKeyUp\":return y.indexOf(t.keyCode)!==-1;case\"topKeyDown\":return t.keyCode!==_;case\"topKeyPress\":case\"topMouseDown\":case\"topBlur\":return!0;default:return!1}}function u(e){var t=e.detail;return\"object\"==typeof t&&\"data\"in t?t.data:null}function l(e,t,n,r){var o,l;if(C?o=i(e):N?s(e,n)&&(o=k.compositionEnd):a(e,n)&&(o=k.compositionStart),!o)return null;x&&(N||o!==k.compositionStart?o===k.compositionEnd&&N&&(l=N.getData()):N=m.getPooled(r));var c=v.getPooled(o,t,n,r);if(l)c.data=l;else{var p=u(n);null!==p&&(c.data=p)}return f.accumulateTwoPhaseDispatches(c),c}function c(e,t){switch(e){case\"topCompositionEnd\":return u(t);case\"topKeyPress\":var n=t.which;return n!==w?null:(P=!0,T);case\"topTextInput\":var r=t.data;return r===T&&P?null:r;default:return null}}function p(e,t){if(N){if(\"topCompositionEnd\"===e||!C&&s(e,t)){var n=N.getData();return m.release(N),N=null,n}return null}switch(e){case\"topPaste\":return null;case\"topKeyPress\":return t.which&&!o(t)?String.fromCharCode(t.which):null;case\"topCompositionEnd\":return x?null:t.data;default:return null}}function d(e,t,n,r){var o;if(o=E?c(e,n):p(e,n),!o)return null;var i=g.getPooled(k.beforeInput,t,n,r);return i.data=o,f.accumulateTwoPhaseDispatches(i),i}var f=e(19),h=e(123),m=e(20),v=e(78),g=e(82),y=[9,13,27,32],_=229,C=h.canUseDOM&&\"CompositionEvent\"in window,b=null;h.canUseDOM&&\"documentMode\"in document&&(b=document.documentMode);var E=h.canUseDOM&&\"TextEvent\"in window&&!b&&!r(),x=h.canUseDOM&&(!C||b&&b>8&&b<=11),w=32,T=String.fromCharCode(w),k={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:[\"topBlur\",\"topCompositionEnd\",\"topKeyDown\",\"topKeyPress\",\"topKeyUp\",\"topMouseDown\"]},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",captured:\"onCompositionStartCapture\"},dependencies:[\"topBlur\",\"topCompositionStart\",\"topKeyDown\",\"topKeyPress\",\"topKeyUp\",\"topMouseDown\"]},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:[\"topBlur\",\"topCompositionUpdate\",\"topKeyDown\",\"topKeyPress\",\"topKeyUp\",\"topMouseDown\"]}},P=!1,N=null,S={eventTypes:k,extractEvents:function(e,t,n,r){return[l(e,t,n,r),d(e,t,n,r)]}};t.exports=S},{123:123,19:19,20:20,78:78,82:82}],4:[function(e,t,n){\"use strict\";function r(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}var o={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},i=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(o).forEach(function(e){i.forEach(function(t){o[r(t,e)]=o[e]})});var a={background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}},s={isUnitlessNumber:o,shorthandPropertyExpansions:a};t.exports=s},{}],5:[function(e,t,n){\"use strict\";var r=e(4),o=e(123),i=(e(58),e(125),e(94)),a=e(136),s=e(140),u=(e(142),s(function(e){return a(e)})),l=!1,c=\"cssFloat\";if(o.canUseDOM){var p=document.createElement(\"div\").style;try{p.font=\"\"}catch(e){l=!0}void 0===document.documentElement.style.cssFloat&&(c=\"styleFloat\")}var d={createMarkupForStyles:function(e,t){var n=\"\";for(var r in e)if(e.hasOwnProperty(r)){var o=e[r];null!=o&&(n+=u(r)+\":\",n+=i(r,o,t)+\";\")}return n||null},setValueForStyles:function(e,t,n){var o=e.style;for(var a in t)if(t.hasOwnProperty(a)){var s=i(a,t[a],n);if(\"float\"!==a&&\"cssFloat\"!==a||(a=c),s)o[a]=s;else{var u=l&&r.shorthandPropertyExpansions[a];if(u)for(var p in u)o[p]=\"\";else o[a]=\"\"}}}};t.exports=d},{123:123,125:125,136:136,140:140,142:142,4:4,58:58,94:94}],6:[function(e,t,n){\"use strict\";function r(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var o=e(113),i=e(24),a=(e(137),function(){function e(t){r(this,e),this._callbacks=null,this._contexts=null,this._arg=t}return e.prototype.enqueue=function(e,t){this._callbacks=this._callbacks||[],this._callbacks.push(e),this._contexts=this._contexts||[],this._contexts.push(t)},e.prototype.notifyAll=function(){var e=this._callbacks,t=this._contexts,n=this._arg;if(e&&t){e.length!==t.length?o(\"24\"):void 0,this._callbacks=null,this._contexts=null;for(var r=0;r<e.length;r++)e[r].call(t[r],n);e.length=0,t.length=0}},e.prototype.checkpoint=function(){return this._callbacks?this._callbacks.length:0},e.prototype.rollback=function(e){this._callbacks&&this._contexts&&(this._callbacks.length=e,this._contexts.length=e)},e.prototype.reset=function(){this._callbacks=null,this._contexts=null},e.prototype.destructor=function(){this.reset()},e}());t.exports=i.addPoolingTo(a)},{113:113,137:137,24:24}],7:[function(e,t,n){\"use strict\";function r(e){var t=e.nodeName&&e.nodeName.toLowerCase();return\"select\"===t||\"input\"===t&&\"file\"===e.type}function o(e){var t=x.getPooled(P.change,S,e,w(e));_.accumulateTwoPhaseDispatches(t),E.batchedUpdates(i,t)}function i(e){y.enqueueEvents(e),y.processEventQueue(!1)}function a(e,t){N=e,S=t,N.attachEvent(\"onchange\",o)}function s(){N&&(N.detachEvent(\"onchange\",o),N=null,S=null)}function u(e,t){if(\"topChange\"===e)return t}function l(e,t,n){\"topFocus\"===e?(s(),a(t,n)):\"topBlur\"===e&&s()}function c(e,t){N=e,S=t,M=e.value,I=Object.getOwnPropertyDescriptor(e.constructor.prototype,\"value\"),Object.defineProperty(N,\"value\",A),N.attachEvent?N.attachEvent(\"onpropertychange\",d):N.addEventListener(\"propertychange\",d,!1)}function p(){N&&(delete N.value,N.detachEvent?N.detachEvent(\"onpropertychange\",d):N.removeEventListener(\"propertychange\",d,!1),N=null,S=null,M=null,I=null)}function d(e){if(\"value\"===e.propertyName){var t=e.srcElement.value;t!==M&&(M=t,o(e))}}function f(e,t){if(\"topInput\"===e)return t}function h(e,t,n){\"topFocus\"===e?(p(),c(t,n)):\"topBlur\"===e&&p()}function m(e,t){if((\"topSelectionChange\"===e||\"topKeyUp\"===e||\"topKeyDown\"===e)&&N&&N.value!==M)return M=N.value,S}function v(e){return e.nodeName&&\"input\"===e.nodeName.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)}function g(e,t){if(\"topClick\"===e)return t}var y=e(16),_=e(19),C=e(123),b=e(33),E=e(71),x=e(80),w=e(102),T=e(110),k=e(111),P={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:[\"topBlur\",\"topChange\",\"topClick\",\"topFocus\",\"topInput\",\"topKeyDown\",\"topKeyUp\",\"topSelectionChange\"]}},N=null,S=null,M=null,I=null,O=!1;C.canUseDOM&&(O=T(\"change\")&&(!document.documentMode||document.documentMode>8));var R=!1;C.canUseDOM&&(R=T(\"input\")&&(!document.documentMode||document.documentMode>11));var A={get:function(){return I.get.call(this)},set:function(e){M=\"\"+e,I.set.call(this,e)}},D={eventTypes:P,extractEvents:function(e,t,n,o){var i,a,s=t?b.getNodeFromInstance(t):window;if(r(s)?O?i=u:a=l:k(s)?R?i=f:(i=m,a=h):v(s)&&(i=g),i){var c=i(e,t);if(c){var p=x.getPooled(P.change,c,n,o);return p.type=\"change\",_.accumulateTwoPhaseDispatches(p),p}}a&&a(e,s,t)}};t.exports=D},{102:102,110:110,111:111,123:123,16:16,19:19,33:33,71:71,80:80}],8:[function(e,t,n){\"use strict\";function r(e,t){return Array.isArray(t)&&(t=t[1]),t?t.nextSibling:e.firstChild}function o(e,t,n){c.insertTreeBefore(e,t,n)}function i(e,t,n){Array.isArray(t)?s(e,t[0],t[1],n):m(e,t,n)}function a(e,t){if(Array.isArray(t)){var n=t[1];t=t[0],u(e,t,n),e.removeChild(n)}e.removeChild(t)}function s(e,t,n,r){for(var o=t;;){var i=o.nextSibling;if(m(e,o,r),o===n)break;o=i}}function u(e,t,n){for(;;){var r=t.nextSibling;if(r===n)break;e.removeChild(r)}}function l(e,t,n){var r=e.parentNode,o=e.nextSibling;o===t?n&&m(r,document.createTextNode(n),o):n?(h(o,n),u(r,o,t)):u(r,e,t)}var c=e(9),p=e(13),d=(e(33),e(58),e(93)),f=e(115),h=e(116),m=d(function(e,t,n){e.insertBefore(t,n)}),v=p.dangerouslyReplaceNodeWithMarkup,g={dangerouslyReplaceNodeWithMarkup:v,replaceDelimitedText:l,processUpdates:function(e,t){for(var n=0;n<t.length;n++){var s=t[n];switch(s.type){case\"INSERT_MARKUP\":o(e,s.content,r(e,s.afterNode));break;case\"MOVE_EXISTING\":i(e,s.fromNode,r(e,s.afterNode));break;case\"SET_MARKUP\":f(e,s.content);break;case\"TEXT_CONTENT\":h(e,s.content);break;case\"REMOVE_NODE\":a(e,s.fromNode)}}}};t.exports=g},{115:115,116:116,13:13,33:33,58:58,9:9,93:93}],9:[function(e,t,n){\"use strict\";function r(e){if(v){var t=e.node,n=e.children;if(n.length)for(var r=0;r<n.length;r++)g(t,n[r],null);else null!=e.html?p(t,e.html):null!=e.text&&f(t,e.text)}}function o(e,t){e.parentNode.replaceChild(t.node,e),r(t)}function i(e,t){v?e.children.push(t):e.node.appendChild(t.node)}function a(e,t){v?e.html=t:p(e.node,t)}function s(e,t){v?e.text=t:f(e.node,t)}function u(){return this.node.nodeName}function l(e){return{node:e,children:[],html:null,text:null,toString:u}}var c=e(10),p=e(115),d=e(93),f=e(116),h=1,m=11,v=\"undefined\"!=typeof document&&\"number\"==typeof document.documentMode||\"undefined\"!=typeof navigator&&\"string\"==typeof navigator.userAgent&&/\\bEdge\\/\\d/.test(navigator.userAgent),g=d(function(e,t,n){t.node.nodeType===m||t.node.nodeType===h&&\"object\"===t.node.nodeName.toLowerCase()&&(null==t.node.namespaceURI||t.node.namespaceURI===c.html)?(r(t),e.insertBefore(t.node,n)):(e.insertBefore(t.node,n),r(t))});l.insertTreeBefore=g,l.replaceChildWithTree=o,l.queueChild=i,l.queueHTML=a,l.queueText=s,t.exports=l},{10:10,115:115,116:116,93:93}],10:[function(e,t,n){\"use strict\";var r={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};t.exports=r},{}],11:[function(e,t,n){\"use strict\";function r(e,t){return(e&t)===t}var o=e(113),i=(e(137),{MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,injectDOMPropertyConfig:function(e){var t=i,n=e.Properties||{},a=e.DOMAttributeNamespaces||{},u=e.DOMAttributeNames||{},l=e.DOMPropertyNames||{},c=e.DOMMutationMethods||{};e.isCustomAttribute&&s._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var p in n){s.properties.hasOwnProperty(p)?o(\"48\",p):void 0;var d=p.toLowerCase(),f=n[p],h={attributeName:d,attributeNamespace:null,propertyName:p,mutationMethod:null,mustUseProperty:r(f,t.MUST_USE_PROPERTY),hasBooleanValue:r(f,t.HAS_BOOLEAN_VALUE),hasNumericValue:r(f,t.HAS_NUMERIC_VALUE),hasPositiveNumericValue:r(f,t.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:r(f,t.HAS_OVERLOADED_BOOLEAN_VALUE)};if(h.hasBooleanValue+h.hasNumericValue+h.hasOverloadedBooleanValue<=1?void 0:o(\"50\",p),u.hasOwnProperty(p)){var m=u[p];h.attributeName=m}a.hasOwnProperty(p)&&(h.attributeNamespace=a[p]),l.hasOwnProperty(p)&&(h.propertyName=l[p]),c.hasOwnProperty(p)&&(h.mutationMethod=c[p]),s.properties[p]=h}}}),a=\":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\",s={ID_ATTRIBUTE_NAME:\"data-reactid\",ROOT_ATTRIBUTE_NAME:\"data-reactroot\",ATTRIBUTE_NAME_START_CHAR:a,ATTRIBUTE_NAME_CHAR:a+\"\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\",properties:{},getPossibleStandardName:null,_isCustomAttributeFunctions:[],isCustomAttribute:function(e){for(var t=0;t<s._isCustomAttributeFunctions.length;t++){var n=s._isCustomAttributeFunctions[t];if(n(e))return!0}return!1},injection:i};t.exports=s},{113:113,137:137}],12:[function(e,t,n){\"use strict\";function r(e){return!!l.hasOwnProperty(e)||!u.hasOwnProperty(e)&&(s.test(e)?(l[e]=!0,!0):(u[e]=!0,!1))}function o(e,t){return null==t||e.hasBooleanValue&&!t||e.hasNumericValue&&isNaN(t)||e.hasPositiveNumericValue&&t<1||e.hasOverloadedBooleanValue&&t===!1}var i=e(11),a=(e(33),e(58),e(112)),s=(e(142),new RegExp(\"^[\"+i.ATTRIBUTE_NAME_START_CHAR+\"][\"+i.ATTRIBUTE_NAME_CHAR+\"]*$\")),u={},l={},c={createMarkupForID:function(e){return i.ID_ATTRIBUTE_NAME+\"=\"+a(e)},setAttributeForID:function(e,t){e.setAttribute(i.ID_ATTRIBUTE_NAME,t)},createMarkupForRoot:function(){return i.ROOT_ATTRIBUTE_NAME+'=\"\"'},setAttributeForRoot:function(e){e.setAttribute(i.ROOT_ATTRIBUTE_NAME,\"\")},createMarkupForProperty:function(e,t){var n=i.properties.hasOwnProperty(e)?i.properties[e]:null;if(n){if(o(n,t))return\"\";var r=n.attributeName;return n.hasBooleanValue||n.hasOverloadedBooleanValue&&t===!0?r+'=\"\"':r+\"=\"+a(t)}return i.isCustomAttribute(e)?null==t?\"\":e+\"=\"+a(t):null},createMarkupForCustomAttribute:function(e,t){return r(e)&&null!=t?e+\"=\"+a(t):\"\"},setValueForProperty:function(e,t,n){var r=i.properties.hasOwnProperty(t)?i.properties[t]:null;if(r){var a=r.mutationMethod;if(a)a(e,n);else{if(o(r,n))return void this.deleteValueForProperty(e,t);if(r.mustUseProperty)e[r.propertyName]=n;else{var s=r.attributeName,u=r.attributeNamespace;u?e.setAttributeNS(u,s,\"\"+n):r.hasBooleanValue||r.hasOverloadedBooleanValue&&n===!0?e.setAttribute(s,\"\"):e.setAttribute(s,\"\"+n)}}}else if(i.isCustomAttribute(t))return void c.setValueForAttribute(e,t,n)},setValueForAttribute:function(e,t,n){r(t)&&(null==n?e.removeAttribute(t):e.setAttribute(t,\"\"+n))},deleteValueForAttribute:function(e,t){e.removeAttribute(t)},deleteValueForProperty:function(e,t){var n=i.properties.hasOwnProperty(t)?i.properties[t]:null;if(n){var r=n.mutationMethod;if(r)r(e,void 0);else if(n.mustUseProperty){var o=n.propertyName;n.hasBooleanValue?e[o]=!1:e[o]=\"\"}else e.removeAttribute(n.attributeName)}else i.isCustomAttribute(t)&&e.removeAttribute(t)}};t.exports=c},{11:11,112:112,142:142,33:33,58:58}],13:[function(e,t,n){\"use strict\";var r=e(113),o=e(9),i=e(123),a=e(128),s=e(129),u=(e(137),{dangerouslyReplaceNodeWithMarkup:function(e,t){if(i.canUseDOM?void 0:r(\"56\"),t?void 0:r(\"57\"),\"HTML\"===e.nodeName?r(\"58\"):void 0,\"string\"==typeof t){var n=a(t,s)[0];e.parentNode.replaceChild(n,e)}else o.replaceChildWithTree(e,t)}});t.exports=u},{113:113,123:123,128:128,129:129,137:137,9:9}],14:[function(e,t,n){\"use strict\";var r=[\"ResponderEventPlugin\",\"SimpleEventPlugin\",\"TapEventPlugin\",\"EnterLeaveEventPlugin\",\"ChangeEventPlugin\",\"SelectEventPlugin\",\"BeforeInputEventPlugin\"];t.exports=r},{}],15:[function(e,t,n){\"use strict\";var r=e(19),o=e(33),i=e(84),a={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},s={eventTypes:a,extractEvents:function(e,t,n,s){if(\"topMouseOver\"===e&&(n.relatedTarget||n.fromElement))return null;if(\"topMouseOut\"!==e&&\"topMouseOver\"!==e)return null;var u;if(s.window===s)u=s;else{var l=s.ownerDocument;u=l?l.defaultView||l.parentWindow:window}var c,p;if(\"topMouseOut\"===e){c=t;var d=n.relatedTarget||n.toElement;p=d?o.getClosestInstanceFromNode(d):null}else c=null,p=t;if(c===p)return null;var f=null==c?u:o.getNodeFromInstance(c),h=null==p?u:o.getNodeFromInstance(p),m=i.getPooled(a.mouseLeave,c,n,s);m.type=\"mouseleave\",m.target=f,m.relatedTarget=h;var v=i.getPooled(a.mouseEnter,p,n,s);return v.type=\"mouseenter\",v.target=h,v.relatedTarget=f,r.accumulateEnterLeaveDispatches(m,v,c,p),[m,v]}};t.exports=s},{19:19,33:33,84:84}],16:[function(e,t,n){\"use strict\";function r(e){return\"button\"===e||\"input\"===e||\"select\"===e||\"textarea\"===e}function o(e,t,n){switch(e){case\"onClick\":case\"onClickCapture\":case\"onDoubleClick\":case\"onDoubleClickCapture\":case\"onMouseDown\":case\"onMouseDownCapture\":case\"onMouseMove\":case\"onMouseMoveCapture\":case\"onMouseUp\":case\"onMouseUpCapture\":return!(!n.disabled||!r(t));default:return!1}}var i=e(113),a=e(17),s=e(18),u=e(50),l=e(91),c=e(98),p=(e(137),{}),d=null,f=function(e,t){e&&(s.executeDispatchesInOrder(e,t),e.isPersistent()||e.constructor.release(e))},h=function(e){return f(e,!0)},m=function(e){return f(e,!1)},v=function(e){return\".\"+e._rootNodeID},g={injection:{injectEventPluginOrder:a.injectEventPluginOrder,injectEventPluginsByName:a.injectEventPluginsByName},putListener:function(e,t,n){\"function\"!=typeof n?i(\"94\",t,typeof n):void 0;var r=v(e),o=p[t]||(p[t]={});o[r]=n;var s=a.registrationNameModules[t];s&&s.didPutListener&&s.didPutListener(e,t,n)},getListener:function(e,t){var n=p[t];if(o(t,e._currentElement.type,e._currentElement.props))return null;var r=v(e);return n&&n[r]},deleteListener:function(e,t){var n=a.registrationNameModules[t];n&&n.willDeleteListener&&n.willDeleteListener(e,t);var r=p[t];if(r){var o=v(e);delete r[o]}},deleteAllListeners:function(e){var t=v(e);for(var n in p)if(p.hasOwnProperty(n)&&p[n][t]){var r=a.registrationNameModules[n];r&&r.willDeleteListener&&r.willDeleteListener(e,n),delete p[n][t]}},extractEvents:function(e,t,n,r){for(var o,i=a.plugins,s=0;s<i.length;s++){var u=i[s];if(u){var c=u.extractEvents(e,t,n,r);c&&(o=l(o,c))}}return o},enqueueEvents:function(e){e&&(d=l(d,e))},processEventQueue:function(e){var t=d;d=null,e?c(t,h):c(t,m),d?i(\"95\"):void 0,u.rethrowCaughtError()},__purge:function(){p={}},__getListenerBank:function(){return p}};t.exports=g},{113:113,137:137,17:17,18:18,50:50,91:91,98:98}],17:[function(e,t,n){\"use strict\";function r(){if(s)for(var e in u){var t=u[e],n=s.indexOf(e);if(n>-1?void 0:a(\"96\",e),!l.plugins[n]){t.extractEvents?void 0:a(\"97\",e),l.plugins[n]=t;var r=t.eventTypes;for(var i in r)o(r[i],t,i)?void 0:a(\"98\",i,e)}}}function o(e,t,n){l.eventNameDispatchConfigs.hasOwnProperty(n)?a(\"99\",n):void 0,l.eventNameDispatchConfigs[n]=e;var r=e.phasedRegistrationNames;if(r){for(var o in r)if(r.hasOwnProperty(o)){var s=r[o];i(s,t,n)}return!0}return!!e.registrationName&&(i(e.registrationName,t,n),!0)}function i(e,t,n){l.registrationNameModules[e]?a(\"100\",e):void 0,l.registrationNameModules[e]=t,l.registrationNameDependencies[e]=t.eventTypes[n].dependencies}var a=e(113),s=(e(137),null),u={},l={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},possibleRegistrationNames:null,injectEventPluginOrder:function(e){s?a(\"101\"):void 0,s=Array.prototype.slice.call(e),r()},injectEventPluginsByName:function(e){var t=!1;for(var n in e)if(e.hasOwnProperty(n)){var o=e[n];u.hasOwnProperty(n)&&u[n]===o||(u[n]?a(\"102\",n):void 0,u[n]=o,t=!0)}t&&r()},getPluginModuleForEvent:function(e){var t=e.dispatchConfig;if(t.registrationName)return l.registrationNameModules[t.registrationName]||null;if(void 0!==t.phasedRegistrationNames){var n=t.phasedRegistrationNames;for(var r in n)if(n.hasOwnProperty(r)){var o=l.registrationNameModules[n[r]];if(o)return o}}return null},_resetEventPlugins:function(){s=null;for(var e in u)u.hasOwnProperty(e)&&delete u[e];l.plugins.length=0;var t=l.eventNameDispatchConfigs;for(var n in t)t.hasOwnProperty(n)&&delete t[n];var r=l.registrationNameModules;for(var o in r)r.hasOwnProperty(o)&&delete r[o]}};t.exports=l},{113:113,137:137}],18:[function(e,t,n){\"use strict\";function r(e){return\"topMouseUp\"===e||\"topTouchEnd\"===e||\"topTouchCancel\"===e}function o(e){return\"topMouseMove\"===e||\"topTouchMove\"===e}function i(e){return\"topMouseDown\"===e||\"topTouchStart\"===e}function a(e,t,n,r){var o=e.type||\"unknown-event\";e.currentTarget=g.getNodeFromInstance(r),t?m.invokeGuardedCallbackWithCatch(o,n,e):m.invokeGuardedCallback(o,n,e),e.currentTarget=null}function s(e,t){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)a(e,t,n[o],r[o]);else n&&a(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null}function u(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t)){for(var r=0;r<t.length&&!e.isPropagationStopped();r++)if(t[r](e,n[r]))return n[r]}else if(t&&t(e,n))return n;return null}function l(e){var t=u(e);return e._dispatchInstances=null,e._dispatchListeners=null,t}function c(e){var t=e._dispatchListeners,n=e._dispatchInstances;Array.isArray(t)?h(\"103\"):void 0,e.currentTarget=t?g.getNodeFromInstance(n):null;var r=t?t(e):null;return e.currentTarget=null,e._dispatchListeners=null,e._dispatchInstances=null,r}function p(e){return!!e._dispatchListeners}var d,f,h=e(113),m=e(50),v=(e(137),e(142),{injectComponentTree:function(e){d=e},injectTreeTraversal:function(e){f=e}}),g={isEndish:r,isMoveish:o,isStartish:i,executeDirectDispatch:c,executeDispatchesInOrder:s,executeDispatchesInOrderStopAtTrue:l,hasDispatches:p,getInstanceFromNode:function(e){return d.getInstanceFromNode(e)},getNodeFromInstance:function(e){return d.getNodeFromInstance(e)},isAncestor:function(e,t){return f.isAncestor(e,t)},getLowestCommonAncestor:function(e,t){return f.getLowestCommonAncestor(e,t)},getParentInstance:function(e){return f.getParentInstance(e)},traverseTwoPhase:function(e,t,n){return f.traverseTwoPhase(e,t,n)},traverseEnterLeave:function(e,t,n,r,o){return f.traverseEnterLeave(e,t,n,r,o)},injection:v};t.exports=g},{113:113,137:137,142:142,50:50}],19:[function(e,t,n){\"use strict\";function r(e,t,n){var r=t.dispatchConfig.phasedRegistrationNames[n];return g(e,r)}function o(e,t,n){var o=r(e,n,t);o&&(n._dispatchListeners=m(n._dispatchListeners,o),n._dispatchInstances=m(n._dispatchInstances,e))}function i(e){e&&e.dispatchConfig.phasedRegistrationNames&&h.traverseTwoPhase(e._targetInst,o,e)}function a(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst,n=t?h.getParentInstance(t):null;h.traverseTwoPhase(n,o,e)}}function s(e,t,n){if(n&&n.dispatchConfig.registrationName){var r=n.dispatchConfig.registrationName,o=g(e,r);o&&(n._dispatchListeners=m(n._dispatchListeners,o),n._dispatchInstances=m(n._dispatchInstances,e))}}function u(e){e&&e.dispatchConfig.registrationName&&s(e._targetInst,null,e)}function l(e){v(e,i)}function c(e){v(e,a)}function p(e,t,n,r){h.traverseEnterLeave(n,r,s,e,t)}function d(e){v(e,u)}var f=e(16),h=e(18),m=e(91),v=e(98),g=(e(142),f.getListener),y={accumulateTwoPhaseDispatches:l,accumulateTwoPhaseDispatchesSkipTarget:c,accumulateDirectDispatches:d,accumulateEnterLeaveDispatches:p};t.exports=y},{142:142,16:16,18:18,91:91,98:98}],20:[function(e,t,n){\"use strict\";function r(e){this._root=e,this._startText=this.getText(),this._fallbackText=null}var o=e(143),i=e(24),a=e(107);o(r.prototype,{destructor:function(){this._root=null,this._startText=null,this._fallbackText=null},getText:function(){return\"value\"in this._root?this._root.value:this._root[a()]},getData:function(){if(this._fallbackText)return this._fallbackText;var e,t,n=this._startText,r=n.length,o=this.getText(),i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);var s=t>1?1-t:void 0;return this._fallbackText=o.slice(e,s),this._fallbackText}}),i.addPoolingTo(r),t.exports=r},{107:107,143:143,24:24}],21:[function(e,t,n){\"use strict\";var r=e(11),o=r.injection.MUST_USE_PROPERTY,i=r.injection.HAS_BOOLEAN_VALUE,a=r.injection.HAS_NUMERIC_VALUE,s=r.injection.HAS_POSITIVE_NUMERIC_VALUE,u=r.injection.HAS_OVERLOADED_BOOLEAN_VALUE,l={isCustomAttribute:RegExp.prototype.test.bind(new RegExp(\"^(data|aria)-[\"+r.ATTRIBUTE_NAME_CHAR+\"]*$\")),Properties:{accept:0,acceptCharset:0,accessKey:0,action:0,allowFullScreen:i,allowTransparency:0,alt:0,as:0,async:i,autoComplete:0,autoPlay:i,capture:i,cellPadding:0,cellSpacing:0,charSet:0,challenge:0,checked:o|i,cite:0,classID:0,className:0,cols:s,colSpan:0,content:0,contentEditable:0,contextMenu:0,controls:i,coords:0,crossOrigin:0,data:0,dateTime:0,default:i,defer:i,dir:0,disabled:i,download:u,draggable:0,encType:0,form:0,formAction:0,formEncType:0,formMethod:0,formNoValidate:i,formTarget:0,frameBorder:0,headers:0,height:0,hidden:i,high:0,href:0,hrefLang:0,htmlFor:0,httpEquiv:0,icon:0,id:0,inputMode:0,integrity:0,is:0,keyParams:0,keyType:0,kind:0,label:0,lang:0,list:0,loop:i,low:0,manifest:0,marginHeight:0,marginWidth:0,max:0,maxLength:0,media:0,mediaGroup:0,method:0,min:0,minLength:0,multiple:o|i,muted:o|i,name:0,nonce:0,noValidate:i,open:i,optimum:0,pattern:0,placeholder:0,playsInline:i,poster:0,preload:0,profile:0,radioGroup:0,readOnly:i,referrerPolicy:0,rel:0,required:i,reversed:i,role:0,rows:s,rowSpan:a,sandbox:0,scope:0,scoped:i,scrolling:0,seamless:i,selected:o|i,shape:0,size:s,sizes:0,span:s,spellCheck:0,src:0,srcDoc:0,srcLang:0,srcSet:0,start:a,step:0,style:0,summary:0,tabIndex:0,target:0,title:0,type:0,useMap:0,value:0,width:0,wmode:0,wrap:0,about:0,datatype:0,inlist:0,prefix:0,property:0,resource:0,typeof:0,vocab:0,autoCapitalize:0,autoCorrect:0,autoSave:0,color:0,itemProp:0,itemScope:i,itemType:0,itemID:0,itemRef:0,results:0,security:0,unselectable:0},DOMAttributeNames:{acceptCharset:\"accept-charset\",className:\"class\",htmlFor:\"for\",httpEquiv:\"http-equiv\"},DOMPropertyNames:{}};t.exports=l},{11:11}],22:[function(e,t,n){\"use strict\";function r(e){var t=/[=:]/g,n={\"=\":\"=0\",\":\":\"=2\"},r=(\"\"+e).replace(t,function(e){return n[e]});return\"$\"+r}function o(e){var t=/(=0|=2)/g,n={\"=0\":\"=\",\"=2\":\":\"},r=\".\"===e[0]&&\"$\"===e[1]?e.substring(2):e.substring(1);return(\"\"+r).replace(t,function(e){return n[e]})}var i={escape:r,unescape:o};t.exports=i},{}],23:[function(e,t,n){\"use strict\";function r(e){null!=e.checkedLink&&null!=e.valueLink?s(\"87\"):void 0}function o(e){r(e),null!=e.value||null!=e.onChange?s(\"88\"):void 0}function i(e){r(e),null!=e.checked||null!=e.onChange?s(\"89\"):void 0}function a(e){if(e){var t=e.getName();if(t)return\" Check the render method of `\"+t+\"`.\"}return\"\"}var s=e(113),u=e(121),l=e(64),c=(e(137),e(142),{button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0}),p={value:function(e,t,n){return!e[t]||c[e.type]||e.onChange||e.readOnly||e.disabled?null:new Error(\"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\")},checked:function(e,t,n){return!e[t]||e.onChange||e.readOnly||e.disabled?null:new Error(\"You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.\")},onChange:u.PropTypes.func},d={},f={checkPropTypes:function(e,t,n){for(var r in p){if(p.hasOwnProperty(r))var o=p[r](t,r,e,\"prop\",null,l);o instanceof Error&&!(o.message in d)&&(d[o.message]=!0,a(n))}},getValue:function(e){return e.valueLink?(o(e),e.valueLink.value):e.value},getChecked:function(e){return e.checkedLink?(i(e),e.checkedLink.value):e.checked},executeOnChange:function(e,t){return e.valueLink?(o(e),e.valueLink.requestChange(t.target.value)):e.checkedLink?(i(e),e.checkedLink.requestChange(t.target.checked)):e.onChange?e.onChange.call(void 0,t):void 0}};t.exports=f},{113:113,121:121,137:137,142:142,64:64}],24:[function(e,t,n){\"use strict\";var r=e(113),o=(e(137),function(e){var t=this;if(t.instancePool.length){var n=t.instancePool.pop();return t.call(n,e),n}return new t(e)}),i=function(e,t){var n=this;if(n.instancePool.length){var r=n.instancePool.pop();return n.call(r,e,t),r}return new n(e,t)},a=function(e,t,n){var r=this;if(r.instancePool.length){var o=r.instancePool.pop();return r.call(o,e,t,n),o}return new r(e,t,n)},s=function(e,t,n,r){var o=this;if(o.instancePool.length){var i=o.instancePool.pop();return o.call(i,e,t,n,r),i}return new o(e,t,n,r)},u=function(e){var t=this;e instanceof t?void 0:r(\"25\"),e.destructor(),t.instancePool.length<t.poolSize&&t.instancePool.push(e)},l=10,c=o,p=function(e,t){var n=e;return n.instancePool=[],n.getPooled=t||c,n.poolSize||(n.poolSize=l),n.release=u,n},d={addPoolingTo:p,oneArgumentPooler:o,twoArgumentPooler:i,threeArgumentPooler:a,fourArgumentPooler:s};t.exports=d},{113:113,137:137}],25:[function(e,t,n){\"use strict\";function r(e){return Object.prototype.hasOwnProperty.call(e,m)||(e[m]=f++,p[e[m]]={}),p[e[m]]}var o,i=e(143),a=e(17),s=e(51),u=e(90),l=e(108),c=e(110),p={},d=!1,f=0,h={topAbort:\"abort\",topAnimationEnd:l(\"animationend\")||\"animationend\",topAnimationIteration:l(\"animationiteration\")||\"animationiteration\",topAnimationStart:l(\"animationstart\")||\"animationstart\",topBlur:\"blur\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topChange:\"change\",topClick:\"click\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",topCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",topDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topPause:\"pause\",\ntopPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topScroll:\"scroll\",topSeeked:\"seeked\",topSeeking:\"seeking\",topSelectionChange:\"selectionchange\",topStalled:\"stalled\",topSuspend:\"suspend\",topTextInput:\"textInput\",topTimeUpdate:\"timeupdate\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",topTouchStart:\"touchstart\",topTransitionEnd:l(\"transitionend\")||\"transitionend\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\",topWheel:\"wheel\"},m=\"_reactListenersID\"+String(Math.random()).slice(2),v=i({},s,{ReactEventListener:null,injection:{injectReactEventListener:function(e){e.setHandleTopLevel(v.handleTopLevel),v.ReactEventListener=e}},setEnabled:function(e){v.ReactEventListener&&v.ReactEventListener.setEnabled(e)},isEnabled:function(){return!(!v.ReactEventListener||!v.ReactEventListener.isEnabled())},listenTo:function(e,t){for(var n=t,o=r(n),i=a.registrationNameDependencies[e],s=0;s<i.length;s++){var u=i[s];o.hasOwnProperty(u)&&o[u]||(\"topWheel\"===u?c(\"wheel\")?v.ReactEventListener.trapBubbledEvent(\"topWheel\",\"wheel\",n):c(\"mousewheel\")?v.ReactEventListener.trapBubbledEvent(\"topWheel\",\"mousewheel\",n):v.ReactEventListener.trapBubbledEvent(\"topWheel\",\"DOMMouseScroll\",n):\"topScroll\"===u?c(\"scroll\",!0)?v.ReactEventListener.trapCapturedEvent(\"topScroll\",\"scroll\",n):v.ReactEventListener.trapBubbledEvent(\"topScroll\",\"scroll\",v.ReactEventListener.WINDOW_HANDLE):\"topFocus\"===u||\"topBlur\"===u?(c(\"focus\",!0)?(v.ReactEventListener.trapCapturedEvent(\"topFocus\",\"focus\",n),v.ReactEventListener.trapCapturedEvent(\"topBlur\",\"blur\",n)):c(\"focusin\")&&(v.ReactEventListener.trapBubbledEvent(\"topFocus\",\"focusin\",n),v.ReactEventListener.trapBubbledEvent(\"topBlur\",\"focusout\",n)),o.topBlur=!0,o.topFocus=!0):h.hasOwnProperty(u)&&v.ReactEventListener.trapBubbledEvent(u,h[u],n),o[u]=!0)}},trapBubbledEvent:function(e,t,n){return v.ReactEventListener.trapBubbledEvent(e,t,n)},trapCapturedEvent:function(e,t,n){return v.ReactEventListener.trapCapturedEvent(e,t,n)},supportsEventPageXY:function(){if(!document.createEvent)return!1;var e=document.createEvent(\"MouseEvent\");return null!=e&&\"pageX\"in e},ensureScrollValueMonitoring:function(){if(void 0===o&&(o=v.supportsEventPageXY()),!o&&!d){var e=u.refreshScrollValues;v.ReactEventListener.monitorScrollValue(e),d=!0}}});t.exports=v},{108:108,110:110,143:143,17:17,51:51,90:90}],26:[function(e,t,n){(function(n){\"use strict\";function r(e,t,n,r){var o=void 0===e[n];null!=t&&o&&(e[n]=i(t,!0))}var o=e(66),i=e(109),a=(e(22),e(117)),s=e(118);e(142);\"undefined\"!=typeof n&&n.env,1;var u={instantiateChildren:function(e,t,n,o){if(null==e)return null;var i={};return s(e,r,i),i},updateChildren:function(e,t,n,r,s,u,l,c,p){if(t||e){var d,f;for(d in t)if(t.hasOwnProperty(d)){f=e&&e[d];var h=f&&f._currentElement,m=t[d];if(null!=f&&a(h,m))o.receiveComponent(f,m,s,c),t[d]=f;else{f&&(r[d]=o.getHostNode(f),o.unmountComponent(f,!1));var v=i(m,!0);t[d]=v;var g=o.mountComponent(v,s,u,l,c,p);n.push(g)}}for(d in e)!e.hasOwnProperty(d)||t&&t.hasOwnProperty(d)||(f=e[d],r[d]=o.getHostNode(f),o.unmountComponent(f,!1))}},unmountChildren:function(e,t){for(var n in e)if(e.hasOwnProperty(n)){var r=e[n];o.unmountComponent(r,t)}}};t.exports=u}).call(this,void 0)},{109:109,117:117,118:118,142:142,22:22,66:66}],27:[function(e,t,n){\"use strict\";var r=e(8),o=e(37),i={processChildrenUpdates:o.dangerouslyProcessChildrenUpdates,replaceNodeWithMarkup:r.dangerouslyReplaceNodeWithMarkup};t.exports=i},{37:37,8:8}],28:[function(e,t,n){\"use strict\";var r=e(113),o=(e(137),!1),i={replaceNodeWithMarkup:null,processChildrenUpdates:null,injection:{injectEnvironment:function(e){o?r(\"104\"):void 0,i.replaceNodeWithMarkup=e.replaceNodeWithMarkup,i.processChildrenUpdates=e.processChildrenUpdates,o=!0}}};t.exports=i},{113:113,137:137}],29:[function(e,t,n){\"use strict\";function r(e){}function o(e,t){}function i(e){return!(!e.prototype||!e.prototype.isReactComponent)}function a(e){return!(!e.prototype||!e.prototype.isPureReactComponent)}var s=e(113),u=e(143),l=e(121),c=e(28),p=e(120),d=e(50),f=e(57),h=(e(58),e(62)),m=e(66),v=e(130),g=(e(137),e(141)),y=e(117),_=(e(142),{ImpureClass:0,PureClass:1,StatelessFunctional:2});r.prototype.render=function(){var e=f.get(this)._currentElement.type,t=e(this.props,this.context,this.updater);return o(e,t),t};var C=1,b={construct:function(e){this._currentElement=e,this._rootNodeID=0,this._compositeType=null,this._instance=null,this._hostParent=null,this._hostContainerInfo=null,this._updateBatchNumber=null,this._pendingElement=null,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._renderedNodeType=null,this._renderedComponent=null,this._context=null,this._mountOrder=0,this._topLevelWrapper=null,this._pendingCallbacks=null,this._calledComponentWillUnmount=!1},mountComponent:function(e,t,n,u){this._context=u,this._mountOrder=C++,this._hostParent=t,this._hostContainerInfo=n;var c,p=this._currentElement.props,d=this._processContext(u),h=this._currentElement.type,m=e.getUpdateQueue(),g=i(h),y=this._constructComponent(g,p,d,m);g||null!=y&&null!=y.render?a(h)?this._compositeType=_.PureClass:this._compositeType=_.ImpureClass:(c=y,o(h,c),null===y||y===!1||l.isValidElement(y)?void 0:s(\"105\",h.displayName||h.name||\"Component\"),y=new r(h),this._compositeType=_.StatelessFunctional),y.props=p,y.context=d,y.refs=v,y.updater=m,this._instance=y,f.set(y,this);var b=y.state;void 0===b&&(y.state=b=null),\"object\"!=typeof b||Array.isArray(b)?s(\"106\",this.getName()||\"ReactCompositeComponent\"):void 0,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1;var E;return E=y.unstable_handleError?this.performInitialMountWithErrorHandling(c,t,n,e,u):this.performInitialMount(c,t,n,e,u),y.componentDidMount&&e.getReactMountReady().enqueue(y.componentDidMount,y),E},_constructComponent:function(e,t,n,r){return this._constructComponentWithoutOwner(e,t,n,r)},_constructComponentWithoutOwner:function(e,t,n,r){var o=this._currentElement.type;return e?new o(t,n,r):o(t,n,r)},performInitialMountWithErrorHandling:function(e,t,n,r,o){var i,a=r.checkpoint();try{i=this.performInitialMount(e,t,n,r,o)}catch(s){r.rollback(a),this._instance.unstable_handleError(s),this._pendingStateQueue&&(this._instance.state=this._processPendingState(this._instance.props,this._instance.context)),a=r.checkpoint(),this._renderedComponent.unmountComponent(!0),r.rollback(a),i=this.performInitialMount(e,t,n,r,o)}return i},performInitialMount:function(e,t,n,r,o){var i=this._instance,a=0;i.componentWillMount&&(i.componentWillMount(),this._pendingStateQueue&&(i.state=this._processPendingState(i.props,i.context))),void 0===e&&(e=this._renderValidatedComponent());var s=h.getType(e);this._renderedNodeType=s;var u=this._instantiateReactComponent(e,s!==h.EMPTY);this._renderedComponent=u;var l=m.mountComponent(u,r,t,n,this._processChildContext(o),a);return l},getHostNode:function(){return m.getHostNode(this._renderedComponent)},unmountComponent:function(e){if(this._renderedComponent){var t=this._instance;if(t.componentWillUnmount&&!t._calledComponentWillUnmount)if(t._calledComponentWillUnmount=!0,e){var n=this.getName()+\".componentWillUnmount()\";d.invokeGuardedCallback(n,t.componentWillUnmount.bind(t))}else t.componentWillUnmount();this._renderedComponent&&(m.unmountComponent(this._renderedComponent,e),this._renderedNodeType=null,this._renderedComponent=null,this._instance=null),this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._pendingCallbacks=null,this._pendingElement=null,this._context=null,this._rootNodeID=0,this._topLevelWrapper=null,f.remove(t)}},_maskContext:function(e){var t=this._currentElement.type,n=t.contextTypes;if(!n)return v;var r={};for(var o in n)r[o]=e[o];return r},_processContext:function(e){var t=this._maskContext(e);return t},_processChildContext:function(e){var t,n=this._currentElement.type,r=this._instance;if(r.getChildContext&&(t=r.getChildContext()),t){\"object\"!=typeof n.childContextTypes?s(\"107\",this.getName()||\"ReactCompositeComponent\"):void 0;for(var o in t)o in n.childContextTypes?void 0:s(\"108\",this.getName()||\"ReactCompositeComponent\",o);return u({},e,t)}return e},_checkContextTypes:function(e,t,n){},receiveComponent:function(e,t,n){var r=this._currentElement,o=this._context;this._pendingElement=null,this.updateComponent(t,r,e,o,n)},performUpdateIfNecessary:function(e){null!=this._pendingElement?m.receiveComponent(this,this._pendingElement,e,this._context):null!==this._pendingStateQueue||this._pendingForceUpdate?this.updateComponent(e,this._currentElement,this._currentElement,this._context,this._context):this._updateBatchNumber=null},updateComponent:function(e,t,n,r,o){var i=this._instance;null==i?s(\"136\",this.getName()||\"ReactCompositeComponent\"):void 0;var a,u=!1;this._context===o?a=i.context:(a=this._processContext(o),u=!0);var l=t.props,c=n.props;t!==n&&(u=!0),u&&i.componentWillReceiveProps&&i.componentWillReceiveProps(c,a);var p=this._processPendingState(c,a),d=!0;this._pendingForceUpdate||(i.shouldComponentUpdate?d=i.shouldComponentUpdate(c,p,a):this._compositeType===_.PureClass&&(d=!g(l,c)||!g(i.state,p))),this._updateBatchNumber=null,d?(this._pendingForceUpdate=!1,this._performComponentUpdate(n,c,p,a,e,o)):(this._currentElement=n,this._context=o,i.props=c,i.state=p,i.context=a)},_processPendingState:function(e,t){var n=this._instance,r=this._pendingStateQueue,o=this._pendingReplaceState;if(this._pendingReplaceState=!1,this._pendingStateQueue=null,!r)return n.state;if(o&&1===r.length)return r[0];for(var i=u({},o?r[0]:n.state),a=o?1:0;a<r.length;a++){var s=r[a];u(i,\"function\"==typeof s?s.call(n,i,e,t):s)}return i},_performComponentUpdate:function(e,t,n,r,o,i){var a,s,u,l=this._instance,c=Boolean(l.componentDidUpdate);c&&(a=l.props,s=l.state,u=l.context),l.componentWillUpdate&&l.componentWillUpdate(t,n,r),this._currentElement=e,this._context=i,l.props=t,l.state=n,l.context=r,this._updateRenderedComponent(o,i),c&&o.getReactMountReady().enqueue(l.componentDidUpdate.bind(l,a,s,u),l)},_updateRenderedComponent:function(e,t){var n=this._renderedComponent,r=n._currentElement,o=this._renderValidatedComponent(),i=0;if(y(r,o))m.receiveComponent(n,o,e,this._processChildContext(t));else{var a=m.getHostNode(n);m.unmountComponent(n,!1);var s=h.getType(o);this._renderedNodeType=s;var u=this._instantiateReactComponent(o,s!==h.EMPTY);this._renderedComponent=u;var l=m.mountComponent(u,e,this._hostParent,this._hostContainerInfo,this._processChildContext(t),i);this._replaceNodeWithMarkup(a,l,n)}},_replaceNodeWithMarkup:function(e,t,n){c.replaceNodeWithMarkup(e,t,n)},_renderValidatedComponentWithoutOwnerOrContext:function(){var e,t=this._instance;return e=t.render()},_renderValidatedComponent:function(){var e;if(this._compositeType!==_.StatelessFunctional){p.current=this;try{e=this._renderValidatedComponentWithoutOwnerOrContext()}finally{p.current=null}}else e=this._renderValidatedComponentWithoutOwnerOrContext();return null===e||e===!1||l.isValidElement(e)?void 0:s(\"109\",this.getName()||\"ReactCompositeComponent\"),e},attachRef:function(e,t){var n=this.getPublicInstance();null==n?s(\"110\"):void 0;var r=t.getPublicInstance(),o=n.refs===v?n.refs={}:n.refs;o[e]=r},detachRef:function(e){var t=this.getPublicInstance().refs;delete t[e]},getName:function(){var e=this._currentElement.type,t=this._instance&&this._instance.constructor;return e.displayName||t&&t.displayName||e.name||t&&t.name||null},getPublicInstance:function(){var e=this._instance;return this._compositeType===_.StatelessFunctional?null:e},_instantiateReactComponent:null};t.exports=b},{113:113,117:117,120:120,121:121,130:130,137:137,141:141,142:142,143:143,28:28,50:50,57:57,58:58,62:62,66:66}],30:[function(e,t,n){\"use strict\";var r=e(33),o=e(47),i=e(60),a=e(66),s=e(71),u=e(72),l=e(96),c=e(103),p=e(114);e(142);o.inject();var d={findDOMNode:l,render:i.render,unmountComponentAtNode:i.unmountComponentAtNode,version:u,unstable_batchedUpdates:s.batchedUpdates,unstable_renderSubtreeIntoContainer:p};\"undefined\"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&\"function\"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject&&__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({ComponentTree:{getClosestInstanceFromNode:r.getClosestInstanceFromNode,getNodeFromInstance:function(e){return e._renderedComponent&&(e=c(e)),e?r.getNodeFromInstance(e):null}},Mount:i,Reconciler:a});t.exports=d},{103:103,114:114,142:142,33:33,47:47,60:60,66:66,71:71,72:72,96:96}],31:[function(e,t,n){\"use strict\";function r(e){if(e){var t=e._currentElement._owner||null;if(t){var n=t.getName();if(n)return\" This DOM node was rendered by `\"+n+\"`.\"}}return\"\"}function o(e,t){t&&(X[e._tag]&&(null!=t.children||null!=t.dangerouslySetInnerHTML?m(\"137\",e._tag,e._currentElement._owner?\" Check the render method of \"+e._currentElement._owner.getName()+\".\":\"\"):void 0),null!=t.dangerouslySetInnerHTML&&(null!=t.children?m(\"60\"):void 0,\"object\"==typeof t.dangerouslySetInnerHTML&&W in t.dangerouslySetInnerHTML?void 0:m(\"61\")),null!=t.style&&\"object\"!=typeof t.style?m(\"62\",r(e)):void 0)}function i(e,t,n,r){if(!(r instanceof R)){var o=e._hostContainerInfo,i=o._node&&o._node.nodeType===q,s=i?o._node:o._ownerDocument;F(t,s),r.getReactMountReady().enqueue(a,{inst:e,registrationName:t,listener:n})}}function a(){var e=this;x.putListener(e.inst,e.registrationName,e.listener)}function s(){var e=this;N.postMountWrapper(e)}function u(){var e=this;I.postMountWrapper(e)}function l(){var e=this;S.postMountWrapper(e)}function c(){var e=this;e._rootNodeID?void 0:m(\"63\");var t=U(e);switch(t?void 0:m(\"64\"),e._tag){case\"iframe\":case\"object\":e._wrapperState.listeners=[T.trapBubbledEvent(\"topLoad\",\"load\",t)];break;case\"video\":case\"audio\":e._wrapperState.listeners=[];for(var n in K)K.hasOwnProperty(n)&&e._wrapperState.listeners.push(T.trapBubbledEvent(n,K[n],t));break;case\"source\":e._wrapperState.listeners=[T.trapBubbledEvent(\"topError\",\"error\",t)];break;case\"img\":e._wrapperState.listeners=[T.trapBubbledEvent(\"topError\",\"error\",t),T.trapBubbledEvent(\"topLoad\",\"load\",t)];break;case\"form\":e._wrapperState.listeners=[T.trapBubbledEvent(\"topReset\",\"reset\",t),T.trapBubbledEvent(\"topSubmit\",\"submit\",t)];break;case\"input\":case\"select\":case\"textarea\":e._wrapperState.listeners=[T.trapBubbledEvent(\"topInvalid\",\"invalid\",t)]}}function p(){M.postUpdateWrapper(this)}function d(e){$.call(G,e)||(Q.test(e)?void 0:m(\"65\",e),G[e]=!0)}function f(e,t){return e.indexOf(\"-\")>=0||null!=t.is}function h(e){var t=e.type;d(t),this._currentElement=e,this._tag=t.toLowerCase(),this._namespaceURI=null,this._renderedChildren=null,this._previousStyle=null,this._previousStyleCopy=null,this._hostNode=null,this._hostParent=null,this._rootNodeID=0,this._domID=0,this._hostContainerInfo=null,this._wrapperState=null,this._topLevelWrapper=null,this._flags=0}var m=e(113),v=e(143),g=e(2),y=e(5),_=e(9),C=e(10),b=e(11),E=e(12),x=e(16),w=e(17),T=e(25),k=e(32),P=e(33),N=e(38),S=e(39),M=e(40),I=e(43),O=(e(58),e(61)),R=e(68),A=(e(129),e(95)),D=(e(137),e(110),e(141),e(119),e(142),k),L=x.deleteListener,U=P.getNodeFromInstance,F=T.listenTo,V=w.registrationNameModules,B={string:!0,number:!0},j=\"style\",W=\"__html\",H={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null},q=11,K={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",topStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\"},z={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},Y={listing:!0,pre:!0,textarea:!0},X=v({menuitem:!0},z),Q=/^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/,G={},$={}.hasOwnProperty,Z=1;h.displayName=\"ReactDOMComponent\",h.Mixin={mountComponent:function(e,t,n,r){this._rootNodeID=Z++,this._domID=n._idCounter++,this._hostParent=t,this._hostContainerInfo=n;var i=this._currentElement.props;switch(this._tag){case\"audio\":case\"form\":case\"iframe\":case\"img\":case\"link\":case\"object\":case\"source\":case\"video\":this._wrapperState={listeners:null},e.getReactMountReady().enqueue(c,this);break;case\"input\":N.mountWrapper(this,i,t),i=N.getHostProps(this,i),e.getReactMountReady().enqueue(c,this);break;case\"option\":S.mountWrapper(this,i,t),i=S.getHostProps(this,i);break;case\"select\":M.mountWrapper(this,i,t),i=M.getHostProps(this,i),e.getReactMountReady().enqueue(c,this);break;case\"textarea\":I.mountWrapper(this,i,t),i=I.getHostProps(this,i),e.getReactMountReady().enqueue(c,this)}o(this,i);var a,p;null!=t?(a=t._namespaceURI,p=t._tag):n._tag&&(a=n._namespaceURI,p=n._tag),(null==a||a===C.svg&&\"foreignobject\"===p)&&(a=C.html),a===C.html&&(\"svg\"===this._tag?a=C.svg:\"math\"===this._tag&&(a=C.mathml)),this._namespaceURI=a;var d;if(e.useCreateElement){var f,h=n._ownerDocument;if(a===C.html)if(\"script\"===this._tag){var m=h.createElement(\"div\"),v=this._currentElement.type;m.innerHTML=\"<\"+v+\"></\"+v+\">\",f=m.removeChild(m.firstChild)}else f=i.is?h.createElement(this._currentElement.type,i.is):h.createElement(this._currentElement.type);else f=h.createElementNS(a,this._currentElement.type);P.precacheNode(this,f),this._flags|=D.hasCachedChildNodes,this._hostParent||E.setAttributeForRoot(f),this._updateDOMProperties(null,i,e);var y=_(f);this._createInitialChildren(e,i,r,y),d=y}else{var b=this._createOpenTagMarkupAndPutListeners(e,i),x=this._createContentMarkup(e,i,r);d=!x&&z[this._tag]?b+\"/>\":b+\">\"+x+\"</\"+this._currentElement.type+\">\"}switch(this._tag){case\"input\":e.getReactMountReady().enqueue(s,this),i.autoFocus&&e.getReactMountReady().enqueue(g.focusDOMComponent,this);break;case\"textarea\":e.getReactMountReady().enqueue(u,this),i.autoFocus&&e.getReactMountReady().enqueue(g.focusDOMComponent,this);break;case\"select\":i.autoFocus&&e.getReactMountReady().enqueue(g.focusDOMComponent,this);break;case\"button\":i.autoFocus&&e.getReactMountReady().enqueue(g.focusDOMComponent,this);break;case\"option\":e.getReactMountReady().enqueue(l,this)}return d},_createOpenTagMarkupAndPutListeners:function(e,t){var n=\"<\"+this._currentElement.type;for(var r in t)if(t.hasOwnProperty(r)){var o=t[r];if(null!=o)if(V.hasOwnProperty(r))o&&i(this,r,o,e);else{r===j&&(o&&(o=this._previousStyleCopy=v({},t.style)),o=y.createMarkupForStyles(o,this));var a=null;null!=this._tag&&f(this._tag,t)?H.hasOwnProperty(r)||(a=E.createMarkupForCustomAttribute(r,o)):a=E.createMarkupForProperty(r,o),a&&(n+=\" \"+a)}}return e.renderToStaticMarkup?n:(this._hostParent||(n+=\" \"+E.createMarkupForRoot()),n+=\" \"+E.createMarkupForID(this._domID))},_createContentMarkup:function(e,t,n){var r=\"\",o=t.dangerouslySetInnerHTML;if(null!=o)null!=o.__html&&(r=o.__html);else{var i=B[typeof t.children]?t.children:null,a=null!=i?null:t.children;if(null!=i)r=A(i);else if(null!=a){var s=this.mountChildren(a,e,n);r=s.join(\"\")}}return Y[this._tag]&&\"\\n\"===r.charAt(0)?\"\\n\"+r:r},_createInitialChildren:function(e,t,n,r){var o=t.dangerouslySetInnerHTML;if(null!=o)null!=o.__html&&_.queueHTML(r,o.__html);else{var i=B[typeof t.children]?t.children:null,a=null!=i?null:t.children;if(null!=i)\"\"!==i&&_.queueText(r,i);else if(null!=a)for(var s=this.mountChildren(a,e,n),u=0;u<s.length;u++)_.queueChild(r,s[u])}},receiveComponent:function(e,t,n){var r=this._currentElement;this._currentElement=e,this.updateComponent(t,r,e,n)},updateComponent:function(e,t,n,r){var i=t.props,a=this._currentElement.props;switch(this._tag){case\"input\":i=N.getHostProps(this,i),a=N.getHostProps(this,a);break;case\"option\":i=S.getHostProps(this,i),a=S.getHostProps(this,a);break;case\"select\":i=M.getHostProps(this,i),a=M.getHostProps(this,a);break;case\"textarea\":i=I.getHostProps(this,i),a=I.getHostProps(this,a)}switch(o(this,a),this._updateDOMProperties(i,a,e),this._updateDOMChildren(i,a,e,r),this._tag){case\"input\":N.updateWrapper(this);break;case\"textarea\":I.updateWrapper(this);break;case\"select\":e.getReactMountReady().enqueue(p,this)}},_updateDOMProperties:function(e,t,n){var r,o,a;for(r in e)if(!t.hasOwnProperty(r)&&e.hasOwnProperty(r)&&null!=e[r])if(r===j){var s=this._previousStyleCopy;for(o in s)s.hasOwnProperty(o)&&(a=a||{},a[o]=\"\");this._previousStyleCopy=null}else V.hasOwnProperty(r)?e[r]&&L(this,r):f(this._tag,e)?H.hasOwnProperty(r)||E.deleteValueForAttribute(U(this),r):(b.properties[r]||b.isCustomAttribute(r))&&E.deleteValueForProperty(U(this),r);for(r in t){var u=t[r],l=r===j?this._previousStyleCopy:null!=e?e[r]:void 0;if(t.hasOwnProperty(r)&&u!==l&&(null!=u||null!=l))if(r===j)if(u?u=this._previousStyleCopy=v({},u):this._previousStyleCopy=null,l){for(o in l)!l.hasOwnProperty(o)||u&&u.hasOwnProperty(o)||(a=a||{},a[o]=\"\");for(o in u)u.hasOwnProperty(o)&&l[o]!==u[o]&&(a=a||{},a[o]=u[o])}else a=u;else if(V.hasOwnProperty(r))u?i(this,r,u,n):l&&L(this,r);else if(f(this._tag,t))H.hasOwnProperty(r)||E.setValueForAttribute(U(this),r,u);else if(b.properties[r]||b.isCustomAttribute(r)){var c=U(this);null!=u?E.setValueForProperty(c,r,u):E.deleteValueForProperty(c,r)}}a&&y.setValueForStyles(U(this),a,this)},_updateDOMChildren:function(e,t,n,r){var o=B[typeof e.children]?e.children:null,i=B[typeof t.children]?t.children:null,a=e.dangerouslySetInnerHTML&&e.dangerouslySetInnerHTML.__html,s=t.dangerouslySetInnerHTML&&t.dangerouslySetInnerHTML.__html,u=null!=o?null:e.children,l=null!=i?null:t.children,c=null!=o||null!=a,p=null!=i||null!=s;null!=u&&null==l?this.updateChildren(null,n,r):c&&!p&&this.updateTextContent(\"\"),null!=i?o!==i&&this.updateTextContent(\"\"+i):null!=s?a!==s&&this.updateMarkup(\"\"+s):null!=l&&this.updateChildren(l,n,r)},getHostNode:function(){return U(this)},unmountComponent:function(e){switch(this._tag){case\"audio\":case\"form\":case\"iframe\":case\"img\":case\"link\":case\"object\":case\"source\":case\"video\":var t=this._wrapperState.listeners;if(t)for(var n=0;n<t.length;n++)t[n].remove();break;case\"html\":case\"head\":case\"body\":m(\"66\",this._tag)}this.unmountChildren(e),P.uncacheNode(this),x.deleteAllListeners(this),this._rootNodeID=0,this._domID=0,this._wrapperState=null},getPublicInstance:function(){return U(this)}},v(h.prototype,h.Mixin,O.Mixin),t.exports=h},{10:10,11:11,110:110,113:113,119:119,12:12,129:129,137:137,141:141,142:142,143:143,16:16,17:17,2:2,25:25,32:32,33:33,38:38,39:39,40:40,43:43,5:5,58:58,61:61,68:68,9:9,95:95}],32:[function(e,t,n){\"use strict\";var r={hasCachedChildNodes:1};t.exports=r},{}],33:[function(e,t,n){\"use strict\";function r(e,t){return 1===e.nodeType&&e.getAttribute(h)===String(t)||8===e.nodeType&&e.nodeValue===\" react-text: \"+t+\" \"||8===e.nodeType&&e.nodeValue===\" react-empty: \"+t+\" \"}function o(e){for(var t;t=e._renderedComponent;)e=t;return e}function i(e,t){var n=o(e);n._hostNode=t,t[v]=n}function a(e){var t=e._hostNode;t&&(delete t[v],e._hostNode=null)}function s(e,t){if(!(e._flags&m.hasCachedChildNodes)){var n=e._renderedChildren,a=t.firstChild;e:for(var s in n)if(n.hasOwnProperty(s)){var u=n[s],l=o(u)._domID;if(0!==l){for(;null!==a;a=a.nextSibling)if(r(a,l)){i(u,a);continue e}p(\"32\",l)}}e._flags|=m.hasCachedChildNodes}}function u(e){if(e[v])return e[v];for(var t=[];!e[v];){if(t.push(e),!e.parentNode)return null;e=e.parentNode}for(var n,r;e&&(r=e[v]);e=t.pop())n=r,t.length&&s(r,e);return n}function l(e){var t=u(e);return null!=t&&t._hostNode===e?t:null}function c(e){if(void 0===e._hostNode?p(\"33\"):void 0,e._hostNode)return e._hostNode;for(var t=[];!e._hostNode;)t.push(e),e._hostParent?void 0:p(\"34\"),e=e._hostParent;for(;t.length;e=t.pop())s(e,e._hostNode);return e._hostNode}var p=e(113),d=e(11),f=e(32),h=(e(137),d.ID_ATTRIBUTE_NAME),m=f,v=\"__reactInternalInstance$\"+Math.random().toString(36).slice(2),g={getClosestInstanceFromNode:u,getInstanceFromNode:l,getNodeFromInstance:c,precacheChildNodes:s,precacheNode:i,uncacheNode:a};t.exports=g},{11:11,113:113,137:137,32:32}],34:[function(e,t,n){\"use strict\";function r(e,t){var n={_topLevelWrapper:e,_idCounter:1,_ownerDocument:t?t.nodeType===o?t:t.ownerDocument:null,_node:t,_tag:t?t.nodeName.toLowerCase():null,_namespaceURI:t?t.namespaceURI:null};return n}var o=(e(119),9);t.exports=r},{119:119}],35:[function(e,t,n){\"use strict\";var r=e(143),o=e(9),i=e(33),a=function(e){this._currentElement=null,this._hostNode=null,this._hostParent=null,this._hostContainerInfo=null,this._domID=0};r(a.prototype,{mountComponent:function(e,t,n,r){var a=n._idCounter++;this._domID=a,this._hostParent=t,this._hostContainerInfo=n;var s=\" react-empty: \"+this._domID+\" \";if(e.useCreateElement){var u=n._ownerDocument,l=u.createComment(s);return i.precacheNode(this,l),o(l)}return e.renderToStaticMarkup?\"\":\"<!--\"+s+\"-->\"},receiveComponent:function(){},getHostNode:function(){return i.getNodeFromInstance(this)},unmountComponent:function(){i.uncacheNode(this)}}),t.exports=a},{143:143,33:33,9:9}],36:[function(e,t,n){\"use strict\";var r={useCreateElement:!0,useFiber:!1};t.exports=r},{}],37:[function(e,t,n){\"use strict\";var r=e(8),o=e(33),i={dangerouslyProcessChildrenUpdates:function(e,t){var n=o.getNodeFromInstance(e);r.processUpdates(n,t)}};t.exports=i},{33:33,8:8}],38:[function(e,t,n){\"use strict\";function r(){this._rootNodeID&&p.updateWrapper(this)}function o(e){var t=this._currentElement.props,n=u.executeOnChange(t,e);c.asap(r,this);var o=t.name;if(\"radio\"===t.type&&null!=o){for(var a=l.getNodeFromInstance(this),s=a;s.parentNode;)s=s.parentNode;for(var p=s.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+o)+'][type=\"radio\"]'),d=0;d<p.length;d++){var f=p[d];if(f!==a&&f.form===a.form){var h=l.getInstanceFromNode(f);h?void 0:i(\"90\"),c.asap(r,h)}}}return n}var i=e(113),a=e(143),s=e(12),u=e(23),l=e(33),c=e(71),p=(e(137),e(142),{getHostProps:function(e,t){var n=u.getValue(t),r=u.getChecked(t),o=a({type:void 0,step:void 0,min:void 0,max:void 0},t,{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:e._wrapperState.initialValue,checked:null!=r?r:e._wrapperState.initialChecked,onChange:e._wrapperState.onChange});return o},mountWrapper:function(e,t){var n=t.defaultValue;e._wrapperState={initialChecked:null!=t.checked?t.checked:t.defaultChecked,initialValue:null!=t.value?t.value:n,listeners:null,onChange:o.bind(e)}},updateWrapper:function(e){var t=e._currentElement.props,n=t.checked;null!=n&&s.setValueForProperty(l.getNodeFromInstance(e),\"checked\",n||!1);var r=l.getNodeFromInstance(e),o=u.getValue(t);if(null!=o){var i=\"\"+o;i!==r.value&&(r.value=i)}else null==t.value&&null!=t.defaultValue&&r.defaultValue!==\"\"+t.defaultValue&&(r.defaultValue=\"\"+t.defaultValue),null==t.checked&&null!=t.defaultChecked&&(r.defaultChecked=!!t.defaultChecked)},postMountWrapper:function(e){var t=e._currentElement.props,n=l.getNodeFromInstance(e);switch(t.type){case\"submit\":case\"reset\":break;case\"color\":case\"date\":case\"datetime\":case\"datetime-local\":case\"month\":case\"time\":case\"week\":n.value=\"\",n.value=n.defaultValue;break;default:n.value=n.value}var r=n.name;\"\"!==r&&(n.name=\"\"),n.defaultChecked=!n.defaultChecked,n.defaultChecked=!n.defaultChecked,\"\"!==r&&(n.name=r)}});t.exports=p},{113:113,12:12,137:137,142:142,143:143,23:23,33:33,71:71}],39:[function(e,t,n){\"use strict\";function r(e){var t=\"\";return i.Children.forEach(e,function(e){null!=e&&(\"string\"==typeof e||\"number\"==typeof e?t+=e:u||(u=!0))}),t}var o=e(143),i=e(121),a=e(33),s=e(40),u=(e(142),!1),l={mountWrapper:function(e,t,n){var o=null;if(null!=n){var i=n;\"optgroup\"===i._tag&&(i=i._hostParent),null!=i&&\"select\"===i._tag&&(o=s.getSelectValueContext(i))}var a=null;if(null!=o){var u;if(u=null!=t.value?t.value+\"\":r(t.children),a=!1,Array.isArray(o)){for(var l=0;l<o.length;l++)if(\"\"+o[l]===u){a=!0;break}}else a=\"\"+o===u}e._wrapperState={selected:a}},postMountWrapper:function(e){var t=e._currentElement.props;if(null!=t.value){var n=a.getNodeFromInstance(e);n.setAttribute(\"value\",t.value)}},getHostProps:function(e,t){var n=o({selected:void 0,children:void 0},t);null!=e._wrapperState.selected&&(n.selected=e._wrapperState.selected);var i=r(t.children);return i&&(n.children=i),n}};t.exports=l},{121:121,142:142,143:143,33:33,40:40}],40:[function(e,t,n){\"use strict\";function r(){if(this._rootNodeID&&this._wrapperState.pendingUpdate){this._wrapperState.pendingUpdate=!1;var e=this._currentElement.props,t=s.getValue(e);null!=t&&o(this,Boolean(e.multiple),t)}}function o(e,t,n){var r,o,i=u.getNodeFromInstance(e).options;if(t){for(r={},o=0;o<n.length;o++)r[\"\"+n[o]]=!0;for(o=0;o<i.length;o++){var a=r.hasOwnProperty(i[o].value);i[o].selected!==a&&(i[o].selected=a)}}else{for(r=\"\"+n,o=0;o<i.length;o++)if(i[o].value===r)return void(i[o].selected=!0);i.length&&(i[0].selected=!0)}}function i(e){var t=this._currentElement.props,n=s.executeOnChange(t,e);return this._rootNodeID&&(this._wrapperState.pendingUpdate=!0),l.asap(r,this),n}var a=e(143),s=e(23),u=e(33),l=e(71),c=(e(142),!1),p={getHostProps:function(e,t){return a({},t,{onChange:e._wrapperState.onChange,value:void 0})},mountWrapper:function(e,t){var n=s.getValue(t);e._wrapperState={pendingUpdate:!1,initialValue:null!=n?n:t.defaultValue,listeners:null,onChange:i.bind(e),wasMultiple:Boolean(t.multiple)},void 0===t.value||void 0===t.defaultValue||c||(c=!0)},getSelectValueContext:function(e){return e._wrapperState.initialValue},postUpdateWrapper:function(e){var t=e._currentElement.props;e._wrapperState.initialValue=void 0;var n=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=Boolean(t.multiple);var r=s.getValue(t);null!=r?(e._wrapperState.pendingUpdate=!1,o(e,Boolean(t.multiple),r)):n!==Boolean(t.multiple)&&(null!=t.defaultValue?o(e,Boolean(t.multiple),t.defaultValue):o(e,Boolean(t.multiple),t.multiple?[]:\"\"))}};t.exports=p},{142:142,143:143,23:23,33:33,71:71}],41:[function(e,t,n){\"use strict\";function r(e,t,n,r){return e===n&&t===r}function o(e){var t=document.selection,n=t.createRange(),r=n.text.length,o=n.duplicate();o.moveToElementText(e),o.setEndPoint(\"EndToStart\",n);var i=o.text.length,a=i+r;return{start:i,end:a}}function i(e){var t=window.getSelection&&window.getSelection();if(!t||0===t.rangeCount)return null;var n=t.anchorNode,o=t.anchorOffset,i=t.focusNode,a=t.focusOffset,s=t.getRangeAt(0);try{s.startContainer.nodeType,s.endContainer.nodeType}catch(e){return null}var u=r(t.anchorNode,t.anchorOffset,t.focusNode,t.focusOffset),l=u?0:s.toString().length,c=s.cloneRange();c.selectNodeContents(e),c.setEnd(s.startContainer,s.startOffset);var p=r(c.startContainer,c.startOffset,c.endContainer,c.endOffset),d=p?0:c.toString().length,f=d+l,h=document.createRange();h.setStart(n,o),h.setEnd(i,a);var m=h.collapsed;return{start:m?f:d,end:m?d:f}}function a(e,t){var n,r,o=document.selection.createRange().duplicate();void 0===t.end?(n=t.start,r=n):t.start>t.end?(n=t.end,r=t.start):(n=t.start,r=t.end),o.moveToElementText(e),o.moveStart(\"character\",n),o.setEndPoint(\"EndToStart\",o),o.moveEnd(\"character\",r-n),o.select()}function s(e,t){if(window.getSelection){var n=window.getSelection(),r=e[c()].length,o=Math.min(t.start,r),i=void 0===t.end?o:Math.min(t.end,r);if(!n.extend&&o>i){var a=i;i=o,o=a}var s=l(e,o),u=l(e,i);if(s&&u){var p=document.createRange();p.setStart(s.node,s.offset),n.removeAllRanges(),o>i?(n.addRange(p),n.extend(u.node,u.offset)):(p.setEnd(u.node,u.offset),n.addRange(p))}}}var u=e(123),l=e(106),c=e(107),p=u.canUseDOM&&\"selection\"in document&&!(\"getSelection\"in window),d={getOffsets:p?o:i,setOffsets:p?a:s};t.exports=d},{106:106,107:107,123:123}],42:[function(e,t,n){\"use strict\";var r=e(113),o=e(143),i=e(8),a=e(9),s=e(33),u=e(95),l=(e(137),e(119),function(e){this._currentElement=e,this._stringText=\"\"+e,this._hostNode=null,this._hostParent=null,this._domID=0,this._mountIndex=0,this._closingComment=null,this._commentNodes=null});o(l.prototype,{mountComponent:function(e,t,n,r){var o=n._idCounter++,i=\" react-text: \"+o+\" \",l=\" /react-text \";if(this._domID=o,this._hostParent=t,e.useCreateElement){\nvar c=n._ownerDocument,p=c.createComment(i),d=c.createComment(l),f=a(c.createDocumentFragment());return a.queueChild(f,a(p)),this._stringText&&a.queueChild(f,a(c.createTextNode(this._stringText))),a.queueChild(f,a(d)),s.precacheNode(this,p),this._closingComment=d,f}var h=u(this._stringText);return e.renderToStaticMarkup?h:\"<!--\"+i+\"-->\"+h+\"<!--\"+l+\"-->\"},receiveComponent:function(e,t){if(e!==this._currentElement){this._currentElement=e;var n=\"\"+e;if(n!==this._stringText){this._stringText=n;var r=this.getHostNode();i.replaceDelimitedText(r[0],r[1],n)}}},getHostNode:function(){var e=this._commentNodes;if(e)return e;if(!this._closingComment)for(var t=s.getNodeFromInstance(this),n=t.nextSibling;;){if(null==n?r(\"67\",this._domID):void 0,8===n.nodeType&&\" /react-text \"===n.nodeValue){this._closingComment=n;break}n=n.nextSibling}return e=[this._hostNode,this._closingComment],this._commentNodes=e,e},unmountComponent:function(){this._closingComment=null,this._commentNodes=null,s.uncacheNode(this)}}),t.exports=l},{113:113,119:119,137:137,143:143,33:33,8:8,9:9,95:95}],43:[function(e,t,n){\"use strict\";function r(){this._rootNodeID&&c.updateWrapper(this)}function o(e){var t=this._currentElement.props,n=s.executeOnChange(t,e);return l.asap(r,this),n}var i=e(113),a=e(143),s=e(23),u=e(33),l=e(71),c=(e(137),e(142),{getHostProps:function(e,t){null!=t.dangerouslySetInnerHTML?i(\"91\"):void 0;var n=a({},t,{value:void 0,defaultValue:void 0,children:\"\"+e._wrapperState.initialValue,onChange:e._wrapperState.onChange});return n},mountWrapper:function(e,t){var n=s.getValue(t),r=n;if(null==n){var a=t.defaultValue,u=t.children;null!=u&&(null!=a?i(\"92\"):void 0,Array.isArray(u)&&(u.length<=1?void 0:i(\"93\"),u=u[0]),a=\"\"+u),null==a&&(a=\"\"),r=a}e._wrapperState={initialValue:\"\"+r,listeners:null,onChange:o.bind(e)}},updateWrapper:function(e){var t=e._currentElement.props,n=u.getNodeFromInstance(e),r=s.getValue(t);if(null!=r){var o=\"\"+r;o!==n.value&&(n.value=o),null==t.defaultValue&&(n.defaultValue=o)}null!=t.defaultValue&&(n.defaultValue=t.defaultValue)},postMountWrapper:function(e){var t=u.getNodeFromInstance(e),n=t.textContent;n===e._wrapperState.initialValue&&(t.value=n)}});t.exports=c},{113:113,137:137,142:142,143:143,23:23,33:33,71:71}],44:[function(e,t,n){\"use strict\";function r(e,t){\"_hostNode\"in e?void 0:u(\"33\"),\"_hostNode\"in t?void 0:u(\"33\");for(var n=0,r=e;r;r=r._hostParent)n++;for(var o=0,i=t;i;i=i._hostParent)o++;for(;n-o>0;)e=e._hostParent,n--;for(;o-n>0;)t=t._hostParent,o--;for(var a=n;a--;){if(e===t)return e;e=e._hostParent,t=t._hostParent}return null}function o(e,t){\"_hostNode\"in e?void 0:u(\"35\"),\"_hostNode\"in t?void 0:u(\"35\");for(;t;){if(t===e)return!0;t=t._hostParent}return!1}function i(e){return\"_hostNode\"in e?void 0:u(\"36\"),e._hostParent}function a(e,t,n){for(var r=[];e;)r.push(e),e=e._hostParent;var o;for(o=r.length;o-- >0;)t(r[o],\"captured\",n);for(o=0;o<r.length;o++)t(r[o],\"bubbled\",n)}function s(e,t,n,o,i){for(var a=e&&t?r(e,t):null,s=[];e&&e!==a;)s.push(e),e=e._hostParent;for(var u=[];t&&t!==a;)u.push(t),t=t._hostParent;var l;for(l=0;l<s.length;l++)n(s[l],\"bubbled\",o);for(l=u.length;l-- >0;)n(u[l],\"captured\",i)}var u=e(113);e(137);t.exports={isAncestor:o,getLowestCommonAncestor:r,getParentInstance:i,traverseTwoPhase:a,traverseEnterLeave:s}},{113:113,137:137}],45:[function(e,t,n){\"use strict\";var r=e(121),o=e(30),i=o;r.addons&&(r.__SECRET_INJECTED_REACT_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=i),t.exports=i},{121:121,30:30}],46:[function(e,t,n){\"use strict\";function r(){this.reinitializeTransaction()}var o=e(143),i=e(71),a=e(89),s=e(129),u={initialize:s,close:function(){d.isBatchingUpdates=!1}},l={initialize:s,close:i.flushBatchedUpdates.bind(i)},c=[l,u];o(r.prototype,a,{getTransactionWrappers:function(){return c}});var p=new r,d={isBatchingUpdates:!1,batchedUpdates:function(e,t,n,r,o,i){var a=d.isBatchingUpdates;return d.isBatchingUpdates=!0,a?e(t,n,r,o,i):p.perform(e,null,t,n,r,o,i)}};t.exports=d},{129:129,143:143,71:71,89:89}],47:[function(e,t,n){\"use strict\";function r(){x||(x=!0,y.EventEmitter.injectReactEventListener(g),y.EventPluginHub.injectEventPluginOrder(s),y.EventPluginUtils.injectComponentTree(d),y.EventPluginUtils.injectTreeTraversal(h),y.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:E,EnterLeaveEventPlugin:u,ChangeEventPlugin:a,SelectEventPlugin:b,BeforeInputEventPlugin:i}),y.HostComponent.injectGenericComponentClass(p),y.HostComponent.injectTextComponentClass(m),y.DOMProperty.injectDOMPropertyConfig(o),y.DOMProperty.injectDOMPropertyConfig(l),y.DOMProperty.injectDOMPropertyConfig(C),y.EmptyComponent.injectEmptyComponentFactory(function(e){return new f(e)}),y.Updates.injectReconcileTransaction(_),y.Updates.injectBatchingStrategy(v),y.Component.injectEnvironment(c))}var o=e(1),i=e(3),a=e(7),s=e(14),u=e(15),l=e(21),c=e(27),p=e(31),d=e(33),f=e(35),h=e(44),m=e(42),v=e(46),g=e(52),y=e(55),_=e(65),C=e(73),b=e(74),E=e(75),x=!1;t.exports={inject:r}},{1:1,14:14,15:15,21:21,27:27,3:3,31:31,33:33,35:35,42:42,44:44,46:46,52:52,55:55,65:65,7:7,73:73,74:74,75:75}],48:[function(e,t,n){\"use strict\";var r=\"function\"==typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103;t.exports=r},{}],49:[function(e,t,n){\"use strict\";var r,o={injectEmptyComponentFactory:function(e){r=e}},i={create:function(e){return r(e)}};i.injection=o,t.exports=i},{}],50:[function(e,t,n){\"use strict\";function r(e,t,n){try{t(n)}catch(e){null===o&&(o=e)}}var o=null,i={invokeGuardedCallback:r,invokeGuardedCallbackWithCatch:r,rethrowCaughtError:function(){if(o){var e=o;throw o=null,e}}};t.exports=i},{}],51:[function(e,t,n){\"use strict\";function r(e){o.enqueueEvents(e),o.processEventQueue(!1)}var o=e(16),i={handleTopLevel:function(e,t,n,i){var a=o.extractEvents(e,t,n,i);r(a)}};t.exports=i},{16:16}],52:[function(e,t,n){\"use strict\";function r(e){for(;e._hostParent;)e=e._hostParent;var t=p.getNodeFromInstance(e),n=t.parentNode;return p.getClosestInstanceFromNode(n)}function o(e,t){this.topLevelType=e,this.nativeEvent=t,this.ancestors=[]}function i(e){var t=f(e.nativeEvent),n=p.getClosestInstanceFromNode(t),o=n;do e.ancestors.push(o),o=o&&r(o);while(o);for(var i=0;i<e.ancestors.length;i++)n=e.ancestors[i],m._handleTopLevel(e.topLevelType,n,e.nativeEvent,f(e.nativeEvent))}function a(e){var t=h(window);e(t)}var s=e(143),u=e(122),l=e(123),c=e(24),p=e(33),d=e(71),f=e(102),h=e(134);s(o.prototype,{destructor:function(){this.topLevelType=null,this.nativeEvent=null,this.ancestors.length=0}}),c.addPoolingTo(o,c.twoArgumentPooler);var m={_enabled:!0,_handleTopLevel:null,WINDOW_HANDLE:l.canUseDOM?window:null,setHandleTopLevel:function(e){m._handleTopLevel=e},setEnabled:function(e){m._enabled=!!e},isEnabled:function(){return m._enabled},trapBubbledEvent:function(e,t,n){return n?u.listen(n,t,m.dispatchEvent.bind(null,e)):null},trapCapturedEvent:function(e,t,n){return n?u.capture(n,t,m.dispatchEvent.bind(null,e)):null},monitorScrollValue:function(e){var t=a.bind(null,e);u.listen(window,\"scroll\",t)},dispatchEvent:function(e,t){if(m._enabled){var n=o.getPooled(e,t);try{d.batchedUpdates(i,n)}finally{o.release(n)}}}};t.exports=m},{102:102,122:122,123:123,134:134,143:143,24:24,33:33,71:71}],53:[function(e,t,n){\"use strict\";var r={logTopLevelRenders:!1};t.exports=r},{}],54:[function(e,t,n){\"use strict\";function r(e){return s?void 0:a(\"111\",e.type),new s(e)}function o(e){return new u(e)}function i(e){return e instanceof u}var a=e(113),s=(e(137),null),u=null,l={injectGenericComponentClass:function(e){s=e},injectTextComponentClass:function(e){u=e}},c={createInternalComponent:r,createInstanceForText:o,isTextComponent:i,injection:l};t.exports=c},{113:113,137:137}],55:[function(e,t,n){\"use strict\";var r=e(11),o=e(16),i=e(18),a=e(28),s=e(49),u=e(25),l=e(54),c=e(71),p={Component:a.injection,DOMProperty:r.injection,EmptyComponent:s.injection,EventPluginHub:o.injection,EventPluginUtils:i.injection,EventEmitter:u.injection,HostComponent:l.injection,Updates:c.injection};t.exports=p},{11:11,16:16,18:18,25:25,28:28,49:49,54:54,71:71}],56:[function(e,t,n){\"use strict\";function r(e){return i(document.documentElement,e)}var o=e(41),i=e(126),a=e(131),s=e(132),u={hasSelectionCapabilities:function(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(\"input\"===t&&\"text\"===e.type||\"textarea\"===t||\"true\"===e.contentEditable)},getSelectionInformation:function(){var e=s();return{focusedElem:e,selectionRange:u.hasSelectionCapabilities(e)?u.getSelection(e):null}},restoreSelection:function(e){var t=s(),n=e.focusedElem,o=e.selectionRange;t!==n&&r(n)&&(u.hasSelectionCapabilities(n)&&u.setSelection(n,o),a(n))},getSelection:function(e){var t;if(\"selectionStart\"in e)t={start:e.selectionStart,end:e.selectionEnd};else if(document.selection&&e.nodeName&&\"input\"===e.nodeName.toLowerCase()){var n=document.selection.createRange();n.parentElement()===e&&(t={start:-n.moveStart(\"character\",-e.value.length),end:-n.moveEnd(\"character\",-e.value.length)})}else t=o.getOffsets(e);return t||{start:0,end:0}},setSelection:function(e,t){var n=t.start,r=t.end;if(void 0===r&&(r=n),\"selectionStart\"in e)e.selectionStart=n,e.selectionEnd=Math.min(r,e.value.length);else if(document.selection&&e.nodeName&&\"input\"===e.nodeName.toLowerCase()){var i=e.createTextRange();i.collapse(!0),i.moveStart(\"character\",n),i.moveEnd(\"character\",r-n),i.select()}else o.setOffsets(e,t)}};t.exports=u},{126:126,131:131,132:132,41:41}],57:[function(e,t,n){\"use strict\";var r={remove:function(e){e._reactInternalInstance=void 0},get:function(e){return e._reactInternalInstance},has:function(e){return void 0!==e._reactInternalInstance},set:function(e,t){e._reactInternalInstance=t}};t.exports=r},{}],58:[function(e,t,n){\"use strict\";var r=null;t.exports={debugTool:r}},{}],59:[function(e,t,n){\"use strict\";var r=e(92),o=/\\/?>/,i=/^<\\!\\-\\-/,a={CHECKSUM_ATTR_NAME:\"data-react-checksum\",addChecksumToMarkup:function(e){var t=r(e);return i.test(e)?e:e.replace(o,\" \"+a.CHECKSUM_ATTR_NAME+'=\"'+t+'\"$&')},canReuseMarkup:function(e,t){var n=t.getAttribute(a.CHECKSUM_ATTR_NAME);n=n&&parseInt(n,10);var o=r(e);return o===n}};t.exports=a},{92:92}],60:[function(e,t,n){\"use strict\";function r(e,t){for(var n=Math.min(e.length,t.length),r=0;r<n;r++)if(e.charAt(r)!==t.charAt(r))return r;return e.length===t.length?-1:n}function o(e){return e?e.nodeType===A?e.documentElement:e.firstChild:null}function i(e){return e.getAttribute&&e.getAttribute(I)||\"\"}function a(e,t,n,r,o){var i;if(b.logTopLevelRenders){var a=e._currentElement.props.child,s=a.type;i=\"React mount: \"+(\"string\"==typeof s?s:s.displayName||s.name),console.time(i)}var u=w.mountComponent(e,n,null,_(e,t),o,0);i&&console.timeEnd(i),e._renderedComponent._topLevelWrapper=e,V._mountImageIntoNode(u,t,e,r,n)}function s(e,t,n,r){var o=k.ReactReconcileTransaction.getPooled(!n&&C.useCreateElement);o.perform(a,null,e,t,o,n,r),k.ReactReconcileTransaction.release(o)}function u(e,t,n){for(w.unmountComponent(e,n),t.nodeType===A&&(t=t.documentElement);t.lastChild;)t.removeChild(t.lastChild)}function l(e){var t=o(e);if(t){var n=y.getInstanceFromNode(t);return!(!n||!n._hostParent)}}function c(e){return!(!e||e.nodeType!==R&&e.nodeType!==A&&e.nodeType!==D)}function p(e){var t=o(e),n=t&&y.getInstanceFromNode(t);return n&&!n._hostParent?n:null}function d(e){var t=p(e);return t?t._hostContainerInfo._topLevelWrapper:null}var f=e(113),h=e(9),m=e(11),v=e(121),g=e(25),y=(e(120),e(33)),_=e(34),C=e(36),b=e(53),E=e(57),x=(e(58),e(59)),w=e(66),T=e(70),k=e(71),P=e(130),N=e(109),S=(e(137),e(115)),M=e(117),I=(e(142),m.ID_ATTRIBUTE_NAME),O=m.ROOT_ATTRIBUTE_NAME,R=1,A=9,D=11,L={},U=1,F=function(){this.rootID=U++};F.prototype.isReactComponent={},F.prototype.render=function(){return this.props.child},F.isReactTopLevelWrapper=!0;var V={TopLevelWrapper:F,_instancesByReactRootID:L,scrollMonitor:function(e,t){t()},_updateRootComponent:function(e,t,n,r,o){return V.scrollMonitor(r,function(){T.enqueueElementInternal(e,t,n),o&&T.enqueueCallbackInternal(e,o)}),e},_renderNewRootComponent:function(e,t,n,r){c(t)?void 0:f(\"37\"),g.ensureScrollValueMonitoring();var o=N(e,!1);k.batchedUpdates(s,o,t,n,r);var i=o._instance.rootID;return L[i]=o,o},renderSubtreeIntoContainer:function(e,t,n,r){return null!=e&&E.has(e)?void 0:f(\"38\"),V._renderSubtreeIntoContainer(e,t,n,r)},_renderSubtreeIntoContainer:function(e,t,n,r){T.validateCallback(r,\"ReactDOM.render\"),v.isValidElement(t)?void 0:f(\"39\",\"string\"==typeof t?\" Instead of passing a string like 'div', pass React.createElement('div') or <div />.\":\"function\"==typeof t?\" Instead of passing a class like Foo, pass React.createElement(Foo) or <Foo />.\":null!=t&&void 0!==t.props?\" This may be caused by unintentionally loading two independent copies of React.\":\"\");var a,s=v.createElement(F,{child:t});if(e){var u=E.get(e);a=u._processChildContext(u._context)}else a=P;var c=d(n);if(c){var p=c._currentElement,h=p.props.child;if(M(h,t)){var m=c._renderedComponent.getPublicInstance(),g=r&&function(){r.call(m)};return V._updateRootComponent(c,s,a,n,g),m}V.unmountComponentAtNode(n)}var y=o(n),_=y&&!!i(y),C=l(n),b=_&&!c&&!C,x=V._renderNewRootComponent(s,n,b,a)._renderedComponent.getPublicInstance();return r&&r.call(x),x},render:function(e,t,n){return V._renderSubtreeIntoContainer(null,e,t,n)},unmountComponentAtNode:function(e){c(e)?void 0:f(\"40\");var t=d(e);return t?(delete L[t._instance.rootID],k.batchedUpdates(u,t,e,!1),!0):(l(e),1===e.nodeType&&e.hasAttribute(O),!1)},_mountImageIntoNode:function(e,t,n,i,a){if(c(t)?void 0:f(\"41\"),i){var s=o(t);if(x.canReuseMarkup(e,s))return void y.precacheNode(n,s);var u=s.getAttribute(x.CHECKSUM_ATTR_NAME);s.removeAttribute(x.CHECKSUM_ATTR_NAME);var l=s.outerHTML;s.setAttribute(x.CHECKSUM_ATTR_NAME,u);var p=e,d=r(p,l),m=\" (client) \"+p.substring(d-20,d+20)+\"\\n (server) \"+l.substring(d-20,d+20);t.nodeType===A?f(\"42\",m):void 0}if(t.nodeType===A?f(\"43\"):void 0,a.useCreateElement){for(;t.lastChild;)t.removeChild(t.lastChild);h.insertTreeBefore(t,e,null)}else S(t,e),y.precacheNode(n,t.firstChild)}};t.exports=V},{109:109,11:11,113:113,115:115,117:117,120:120,121:121,130:130,137:137,142:142,25:25,33:33,34:34,36:36,53:53,57:57,58:58,59:59,66:66,70:70,71:71,9:9}],61:[function(e,t,n){\"use strict\";function r(e,t,n){return{type:\"INSERT_MARKUP\",content:e,fromIndex:null,fromNode:null,toIndex:n,afterNode:t}}function o(e,t,n){return{type:\"MOVE_EXISTING\",content:null,fromIndex:e._mountIndex,fromNode:d.getHostNode(e),toIndex:n,afterNode:t}}function i(e,t){return{type:\"REMOVE_NODE\",content:null,fromIndex:e._mountIndex,fromNode:t,toIndex:null,afterNode:null}}function a(e){return{type:\"SET_MARKUP\",content:e,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function s(e){return{type:\"TEXT_CONTENT\",content:e,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function u(e,t){return t&&(e=e||[],e.push(t)),e}function l(e,t){p.processChildrenUpdates(e,t)}var c=e(113),p=e(28),d=(e(57),e(58),e(120),e(66)),f=e(26),h=(e(129),e(97)),m=(e(137),{Mixin:{_reconcilerInstantiateChildren:function(e,t,n){return f.instantiateChildren(e,t,n)},_reconcilerUpdateChildren:function(e,t,n,r,o,i){var a,s=0;return a=h(t,s),f.updateChildren(e,a,n,r,o,this,this._hostContainerInfo,i,s),a},mountChildren:function(e,t,n){var r=this._reconcilerInstantiateChildren(e,t,n);this._renderedChildren=r;var o=[],i=0;for(var a in r)if(r.hasOwnProperty(a)){var s=r[a],u=0,l=d.mountComponent(s,t,this,this._hostContainerInfo,n,u);s._mountIndex=i++,o.push(l)}return o},updateTextContent:function(e){var t=this._renderedChildren;f.unmountChildren(t,!1);for(var n in t)t.hasOwnProperty(n)&&c(\"118\");var r=[s(e)];l(this,r)},updateMarkup:function(e){var t=this._renderedChildren;f.unmountChildren(t,!1);for(var n in t)t.hasOwnProperty(n)&&c(\"118\");var r=[a(e)];l(this,r)},updateChildren:function(e,t,n){this._updateChildren(e,t,n)},_updateChildren:function(e,t,n){var r=this._renderedChildren,o={},i=[],a=this._reconcilerUpdateChildren(r,e,i,o,t,n);if(a||r){var s,c=null,p=0,f=0,h=0,m=null;for(s in a)if(a.hasOwnProperty(s)){var v=r&&r[s],g=a[s];v===g?(c=u(c,this.moveChild(v,m,p,f)),f=Math.max(v._mountIndex,f),v._mountIndex=p):(v&&(f=Math.max(v._mountIndex,f)),c=u(c,this._mountChildAtIndex(g,i[h],m,p,t,n)),h++),p++,m=d.getHostNode(g)}for(s in o)o.hasOwnProperty(s)&&(c=u(c,this._unmountChild(r[s],o[s])));c&&l(this,c),this._renderedChildren=a}},unmountChildren:function(e){var t=this._renderedChildren;f.unmountChildren(t,e),this._renderedChildren=null},moveChild:function(e,t,n,r){if(e._mountIndex<r)return o(e,t,n)},createChild:function(e,t,n){return r(n,t,e._mountIndex)},removeChild:function(e,t){return i(e,t)},_mountChildAtIndex:function(e,t,n,r,o,i){return e._mountIndex=r,this.createChild(e,n,t)},_unmountChild:function(e,t){var n=this.removeChild(e,t);return e._mountIndex=null,n}}});t.exports=m},{113:113,120:120,129:129,137:137,26:26,28:28,57:57,58:58,66:66,97:97}],62:[function(e,t,n){\"use strict\";var r=e(113),o=e(121),i=(e(137),{HOST:0,COMPOSITE:1,EMPTY:2,getType:function(e){return null===e||e===!1?i.EMPTY:o.isValidElement(e)?\"function\"==typeof e.type?i.COMPOSITE:i.HOST:void r(\"26\",e)}});t.exports=i},{113:113,121:121,137:137}],63:[function(e,t,n){\"use strict\";function r(e){return!(!e||\"function\"!=typeof e.attachRef||\"function\"!=typeof e.detachRef)}var o=e(113),i=(e(137),{addComponentAsRefTo:function(e,t,n){r(n)?void 0:o(\"119\"),n.attachRef(t,e)},removeComponentAsRefFrom:function(e,t,n){r(n)?void 0:o(\"120\");var i=n.getPublicInstance();i&&i.refs[t]===e.getPublicInstance()&&n.detachRef(t)}});t.exports=i},{113:113,137:137}],64:[function(e,t,n){\"use strict\";var r=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\";t.exports=r},{}],65:[function(e,t,n){\"use strict\";function r(e){this.reinitializeTransaction(),this.renderToStaticMarkup=!1,this.reactMountReady=i.getPooled(null),this.useCreateElement=e}var o=e(143),i=e(6),a=e(24),s=e(25),u=e(56),l=(e(58),e(89)),c=e(70),p={initialize:u.getSelectionInformation,close:u.restoreSelection},d={initialize:function(){var e=s.isEnabled();return s.setEnabled(!1),e},close:function(e){s.setEnabled(e)}},f={initialize:function(){this.reactMountReady.reset()},close:function(){this.reactMountReady.notifyAll()}},h=[p,d,f],m={getTransactionWrappers:function(){return h},getReactMountReady:function(){return this.reactMountReady},getUpdateQueue:function(){return c},checkpoint:function(){return this.reactMountReady.checkpoint()},rollback:function(e){this.reactMountReady.rollback(e)},destructor:function(){i.release(this.reactMountReady),this.reactMountReady=null}};o(r.prototype,l,m),a.addPoolingTo(r),t.exports=r},{143:143,24:24,25:25,56:56,58:58,6:6,70:70,89:89}],66:[function(e,t,n){\"use strict\";function r(){o.attachRefs(this,this._currentElement)}var o=e(67),i=(e(58),e(142),{mountComponent:function(e,t,n,o,i,a){var s=e.mountComponent(t,n,o,i,a);return e._currentElement&&null!=e._currentElement.ref&&t.getReactMountReady().enqueue(r,e),s},getHostNode:function(e){return e.getHostNode()},unmountComponent:function(e,t){o.detachRefs(e,e._currentElement),e.unmountComponent(t)},receiveComponent:function(e,t,n,i){var a=e._currentElement;if(t!==a||i!==e._context){var s=o.shouldUpdateRefs(a,t);s&&o.detachRefs(e,a),e.receiveComponent(t,n,i),s&&e._currentElement&&null!=e._currentElement.ref&&n.getReactMountReady().enqueue(r,e)}},performUpdateIfNecessary:function(e,t,n){e._updateBatchNumber===n&&e.performUpdateIfNecessary(t)}});t.exports=i},{142:142,58:58,67:67}],67:[function(e,t,n){\"use strict\";function r(e,t,n){\"function\"==typeof e?e(t.getPublicInstance()):i.addComponentAsRefTo(t,e,n)}function o(e,t,n){\"function\"==typeof e?e(null):i.removeComponentAsRefFrom(t,e,n)}var i=e(63),a={};a.attachRefs=function(e,t){if(null!==t&&\"object\"==typeof t){var n=t.ref;null!=n&&r(n,e,t._owner)}},a.shouldUpdateRefs=function(e,t){var n=null,r=null;null!==e&&\"object\"==typeof e&&(n=e.ref,r=e._owner);var o=null,i=null;return null!==t&&\"object\"==typeof t&&(o=t.ref,i=t._owner),n!==o||\"string\"==typeof o&&i!==r},a.detachRefs=function(e,t){if(null!==t&&\"object\"==typeof t){var n=t.ref;null!=n&&o(n,e,t._owner)}},t.exports=a},{63:63}],68:[function(e,t,n){\"use strict\";function r(e){this.reinitializeTransaction(),this.renderToStaticMarkup=e,this.useCreateElement=!1,this.updateQueue=new s(this)}var o=e(143),i=e(24),a=e(89),s=(e(58),e(69)),u=[],l={enqueue:function(){}},c={getTransactionWrappers:function(){return u},getReactMountReady:function(){return l},getUpdateQueue:function(){return this.updateQueue},destructor:function(){},checkpoint:function(){},rollback:function(){}};o(r.prototype,a,c),i.addPoolingTo(r),t.exports=r},{143:143,24:24,58:58,69:69,89:89}],69:[function(e,t,n){\"use strict\";function r(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function o(e,t){}var i=e(70),a=(e(142),function(){function e(t){r(this,e),this.transaction=t}return e.prototype.isMounted=function(e){return!1},e.prototype.enqueueCallback=function(e,t,n){this.transaction.isInTransaction()&&i.enqueueCallback(e,t,n)},e.prototype.enqueueForceUpdate=function(e){this.transaction.isInTransaction()?i.enqueueForceUpdate(e):o(e,\"forceUpdate\")},e.prototype.enqueueReplaceState=function(e,t){this.transaction.isInTransaction()?i.enqueueReplaceState(e,t):o(e,\"replaceState\")},e.prototype.enqueueSetState=function(e,t){this.transaction.isInTransaction()?i.enqueueSetState(e,t):o(e,\"setState\")},e}());t.exports=a},{142:142,70:70}],70:[function(e,t,n){\"use strict\";function r(e){u.enqueueUpdate(e)}function o(e){var t=typeof e;if(\"object\"!==t)return t;var n=e.constructor&&e.constructor.name||t,r=Object.keys(e);return r.length>0&&r.length<20?n+\" (keys: \"+r.join(\", \")+\")\":n}function i(e,t){var n=s.get(e);return n?n:null}var a=e(113),s=(e(120),e(57)),u=(e(58),e(71)),l=(e(137),e(142),{isMounted:function(e){var t=s.get(e);return!!t&&!!t._renderedComponent},enqueueCallback:function(e,t,n){l.validateCallback(t,n);var o=i(e);return o?(o._pendingCallbacks?o._pendingCallbacks.push(t):o._pendingCallbacks=[t],void r(o)):null},enqueueCallbackInternal:function(e,t){e._pendingCallbacks?e._pendingCallbacks.push(t):e._pendingCallbacks=[t],r(e)},enqueueForceUpdate:function(e){var t=i(e,\"forceUpdate\");t&&(t._pendingForceUpdate=!0,r(t))},enqueueReplaceState:function(e,t){var n=i(e,\"replaceState\");n&&(n._pendingStateQueue=[t],n._pendingReplaceState=!0,r(n))},enqueueSetState:function(e,t){var n=i(e,\"setState\");if(n){var o=n._pendingStateQueue||(n._pendingStateQueue=[]);o.push(t),r(n)}},enqueueElementInternal:function(e,t,n){e._pendingElement=t,e._context=n,r(e)},validateCallback:function(e,t){e&&\"function\"!=typeof e?a(\"122\",t,o(e)):void 0}});t.exports=l},{113:113,120:120,137:137,142:142,57:57,58:58,71:71}],71:[function(e,t,n){\"use strict\";function r(){P.ReactReconcileTransaction&&b?void 0:c(\"123\")}function o(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=d.getPooled(),this.reconcileTransaction=P.ReactReconcileTransaction.getPooled(!0)}function i(e,t,n,o,i,a){return r(),b.batchedUpdates(e,t,n,o,i,a)}function a(e,t){return e._mountOrder-t._mountOrder}function s(e){var t=e.dirtyComponentsLength;t!==g.length?c(\"124\",t,g.length):void 0,g.sort(a),y++;for(var n=0;n<t;n++){var r=g[n],o=r._pendingCallbacks;r._pendingCallbacks=null;var i;if(h.logTopLevelRenders){var s=r;r._currentElement.type.isReactTopLevelWrapper&&(s=r._renderedComponent),i=\"React update: \"+s.getName(),console.time(i)}if(m.performUpdateIfNecessary(r,e.reconcileTransaction,y),i&&console.timeEnd(i),o)for(var u=0;u<o.length;u++)e.callbackQueue.enqueue(o[u],r.getPublicInstance())}}function u(e){return r(),b.isBatchingUpdates?(g.push(e),void(null==e._updateBatchNumber&&(e._updateBatchNumber=y+1))):void b.batchedUpdates(u,e)}function l(e,t){b.isBatchingUpdates?void 0:c(\"125\"),_.enqueue(e,t),C=!0}var c=e(113),p=e(143),d=e(6),f=e(24),h=e(53),m=e(66),v=e(89),g=(e(137),[]),y=0,_=d.getPooled(),C=!1,b=null,E={initialize:function(){this.dirtyComponentsLength=g.length},close:function(){this.dirtyComponentsLength!==g.length?(g.splice(0,this.dirtyComponentsLength),T()):g.length=0}},x={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},w=[E,x];p(o.prototype,v,{getTransactionWrappers:function(){return w},destructor:function(){this.dirtyComponentsLength=null,d.release(this.callbackQueue),this.callbackQueue=null,P.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(e,t,n){return v.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,t,n)}}),f.addPoolingTo(o);var T=function(){for(;g.length||C;){if(g.length){var e=o.getPooled();e.perform(s,null,e),o.release(e)}if(C){C=!1;var t=_;_=d.getPooled(),t.notifyAll(),d.release(t)}}},k={injectReconcileTransaction:function(e){e?void 0:c(\"126\"),P.ReactReconcileTransaction=e},injectBatchingStrategy:function(e){e?void 0:c(\"127\"),\"function\"!=typeof e.batchedUpdates?c(\"128\"):void 0,\"boolean\"!=typeof e.isBatchingUpdates?c(\"129\"):void 0,b=e}},P={ReactReconcileTransaction:null,batchedUpdates:i,enqueueUpdate:u,flushBatchedUpdates:T,injection:k,asap:l};t.exports=P},{113:113,137:137,143:143,24:24,53:53,6:6,66:66,89:89}],72:[function(e,t,n){\"use strict\";t.exports=\"15.4.2\"},{}],73:[function(e,t,n){\"use strict\";var r={xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\"},o={accentHeight:\"accent-height\",accumulate:0,additive:0,alignmentBaseline:\"alignment-baseline\",allowReorder:\"allowReorder\",alphabetic:0,amplitude:0,arabicForm:\"arabic-form\",ascent:0,attributeName:\"attributeName\",attributeType:\"attributeType\",autoReverse:\"autoReverse\",azimuth:0,baseFrequency:\"baseFrequency\",baseProfile:\"baseProfile\",baselineShift:\"baseline-shift\",bbox:0,begin:0,bias:0,by:0,calcMode:\"calcMode\",capHeight:\"cap-height\",clip:0,clipPath:\"clip-path\",clipRule:\"clip-rule\",clipPathUnits:\"clipPathUnits\",colorInterpolation:\"color-interpolation\",colorInterpolationFilters:\"color-interpolation-filters\",colorProfile:\"color-profile\",colorRendering:\"color-rendering\",contentScriptType:\"contentScriptType\",contentStyleType:\"contentStyleType\",cursor:0,cx:0,cy:0,d:0,decelerate:0,descent:0,diffuseConstant:\"diffuseConstant\",direction:0,display:0,divisor:0,dominantBaseline:\"dominant-baseline\",dur:0,dx:0,dy:0,edgeMode:\"edgeMode\",elevation:0,enableBackground:\"enable-background\",end:0,exponent:0,externalResourcesRequired:\"externalResourcesRequired\",fill:0,fillOpacity:\"fill-opacity\",fillRule:\"fill-rule\",filter:0,filterRes:\"filterRes\",filterUnits:\"filterUnits\",floodColor:\"flood-color\",floodOpacity:\"flood-opacity\",focusable:0,fontFamily:\"font-family\",fontSize:\"font-size\",fontSizeAdjust:\"font-size-adjust\",fontStretch:\"font-stretch\",fontStyle:\"font-style\",fontVariant:\"font-variant\",fontWeight:\"font-weight\",format:0,from:0,fx:0,fy:0,g1:0,g2:0,glyphName:\"glyph-name\",glyphOrientationHorizontal:\"glyph-orientation-horizontal\",glyphOrientationVertical:\"glyph-orientation-vertical\",glyphRef:\"glyphRef\",gradientTransform:\"gradientTransform\",gradientUnits:\"gradientUnits\",hanging:0,horizAdvX:\"horiz-adv-x\",horizOriginX:\"horiz-origin-x\",ideographic:0,imageRendering:\"image-rendering\",in:0,in2:0,intercept:0,k:0,k1:0,k2:0,k3:0,k4:0,kernelMatrix:\"kernelMatrix\",kernelUnitLength:\"kernelUnitLength\",kerning:0,keyPoints:\"keyPoints\",keySplines:\"keySplines\",keyTimes:\"keyTimes\",lengthAdjust:\"lengthAdjust\",letterSpacing:\"letter-spacing\",lightingColor:\"lighting-color\",limitingConeAngle:\"limitingConeAngle\",local:0,markerEnd:\"marker-end\",markerMid:\"marker-mid\",markerStart:\"marker-start\",markerHeight:\"markerHeight\",markerUnits:\"markerUnits\",markerWidth:\"markerWidth\",mask:0,maskContentUnits:\"maskContentUnits\",maskUnits:\"maskUnits\",mathematical:0,mode:0,numOctaves:\"numOctaves\",offset:0,opacity:0,operator:0,order:0,orient:0,orientation:0,origin:0,overflow:0,overlinePosition:\"overline-position\",overlineThickness:\"overline-thickness\",paintOrder:\"paint-order\",panose1:\"panose-1\",pathLength:\"pathLength\",patternContentUnits:\"patternContentUnits\",patternTransform:\"patternTransform\",patternUnits:\"patternUnits\",pointerEvents:\"pointer-events\",points:0,pointsAtX:\"pointsAtX\",pointsAtY:\"pointsAtY\",pointsAtZ:\"pointsAtZ\",preserveAlpha:\"preserveAlpha\",preserveAspectRatio:\"preserveAspectRatio\",primitiveUnits:\"primitiveUnits\",r:0,radius:0,refX:\"refX\",refY:\"refY\",renderingIntent:\"rendering-intent\",repeatCount:\"repeatCount\",repeatDur:\"repeatDur\",requiredExtensions:\"requiredExtensions\",requiredFeatures:\"requiredFeatures\",restart:0,result:0,rotate:0,rx:0,ry:0,scale:0,seed:0,shapeRendering:\"shape-rendering\",slope:0,spacing:0,specularConstant:\"specularConstant\",specularExponent:\"specularExponent\",speed:0,spreadMethod:\"spreadMethod\",startOffset:\"startOffset\",stdDeviation:\"stdDeviation\",stemh:0,stemv:0,stitchTiles:\"stitchTiles\",stopColor:\"stop-color\",stopOpacity:\"stop-opacity\",strikethroughPosition:\"strikethrough-position\",strikethroughThickness:\"strikethrough-thickness\",string:0,stroke:0,strokeDasharray:\"stroke-dasharray\",strokeDashoffset:\"stroke-dashoffset\",strokeLinecap:\"stroke-linecap\",strokeLinejoin:\"stroke-linejoin\",strokeMiterlimit:\"stroke-miterlimit\",strokeOpacity:\"stroke-opacity\",strokeWidth:\"stroke-width\",surfaceScale:\"surfaceScale\",systemLanguage:\"systemLanguage\",tableValues:\"tableValues\",targetX:\"targetX\",targetY:\"targetY\",textAnchor:\"text-anchor\",textDecoration:\"text-decoration\",textRendering:\"text-rendering\",textLength:\"textLength\",to:0,transform:0,u1:0,u2:0,underlinePosition:\"underline-position\",underlineThickness:\"underline-thickness\",unicode:0,unicodeBidi:\"unicode-bidi\",unicodeRange:\"unicode-range\",unitsPerEm:\"units-per-em\",vAlphabetic:\"v-alphabetic\",vHanging:\"v-hanging\",vIdeographic:\"v-ideographic\",vMathematical:\"v-mathematical\",values:0,vectorEffect:\"vector-effect\",version:0,vertAdvY:\"vert-adv-y\",vertOriginX:\"vert-origin-x\",vertOriginY:\"vert-origin-y\",viewBox:\"viewBox\",viewTarget:\"viewTarget\",visibility:0,widths:0,wordSpacing:\"word-spacing\",writingMode:\"writing-mode\",x:0,xHeight:\"x-height\",x1:0,x2:0,xChannelSelector:\"xChannelSelector\",xlinkActuate:\"xlink:actuate\",xlinkArcrole:\"xlink:arcrole\",xlinkHref:\"xlink:href\",xlinkRole:\"xlink:role\",xlinkShow:\"xlink:show\",xlinkTitle:\"xlink:title\",xlinkType:\"xlink:type\",xmlBase:\"xml:base\",xmlns:0,xmlnsXlink:\"xmlns:xlink\",xmlLang:\"xml:lang\",xmlSpace:\"xml:space\",y:0,y1:0,y2:0,yChannelSelector:\"yChannelSelector\",z:0,zoomAndPan:\"zoomAndPan\"},i={Properties:{},DOMAttributeNamespaces:{xlinkActuate:r.xlink,xlinkArcrole:r.xlink,xlinkHref:r.xlink,xlinkRole:r.xlink,xlinkShow:r.xlink,xlinkTitle:r.xlink,xlinkType:r.xlink,xmlBase:r.xml,xmlLang:r.xml,xmlSpace:r.xml},DOMAttributeNames:{}};Object.keys(o).forEach(function(e){i.Properties[e]=0,o[e]&&(i.DOMAttributeNames[e]=o[e])}),t.exports=i},{}],74:[function(e,t,n){\"use strict\";function r(e){if(\"selectionStart\"in e&&u.hasSelectionCapabilities(e))return{start:e.selectionStart,end:e.selectionEnd};if(window.getSelection){var t=window.getSelection();return{anchorNode:t.anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset}}if(document.selection){var n=document.selection.createRange();return{parentElement:n.parentElement(),text:n.text,top:n.boundingTop,left:n.boundingLeft}}}function o(e,t){if(y||null==m||m!==c())return null;var n=r(m);if(!g||!d(g,n)){g=n;var o=l.getPooled(h.select,v,e,t);return o.type=\"select\",o.target=m,i.accumulateTwoPhaseDispatches(o),o}return null}var i=e(19),a=e(123),s=e(33),u=e(56),l=e(80),c=e(132),p=e(111),d=e(141),f=a.canUseDOM&&\"documentMode\"in document&&document.documentMode<=11,h={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:[\"topBlur\",\"topContextMenu\",\"topFocus\",\"topKeyDown\",\"topKeyUp\",\"topMouseDown\",\"topMouseUp\",\"topSelectionChange\"]}},m=null,v=null,g=null,y=!1,_=!1,C={eventTypes:h,extractEvents:function(e,t,n,r){if(!_)return null;var i=t?s.getNodeFromInstance(t):window;switch(e){case\"topFocus\":(p(i)||\"true\"===i.contentEditable)&&(m=i,v=t,g=null);break;case\"topBlur\":m=null,v=null,g=null;break;case\"topMouseDown\":y=!0;break;case\"topContextMenu\":case\"topMouseUp\":return y=!1,\no(n,r);case\"topSelectionChange\":if(f)break;case\"topKeyDown\":case\"topKeyUp\":return o(n,r)}return null},didPutListener:function(e,t,n){\"onSelect\"===t&&(_=!0)}};t.exports=C},{111:111,123:123,132:132,141:141,19:19,33:33,56:56,80:80}],75:[function(e,t,n){\"use strict\";function r(e){return\".\"+e._rootNodeID}function o(e){return\"button\"===e||\"input\"===e||\"select\"===e||\"textarea\"===e}var i=e(113),a=e(122),s=e(19),u=e(33),l=e(76),c=e(77),p=e(80),d=e(81),f=e(83),h=e(84),m=e(79),v=e(85),g=e(86),y=e(87),_=e(88),C=e(129),b=e(99),E=(e(137),{}),x={};[\"abort\",\"animationEnd\",\"animationIteration\",\"animationStart\",\"blur\",\"canPlay\",\"canPlayThrough\",\"click\",\"contextMenu\",\"copy\",\"cut\",\"doubleClick\",\"drag\",\"dragEnd\",\"dragEnter\",\"dragExit\",\"dragLeave\",\"dragOver\",\"dragStart\",\"drop\",\"durationChange\",\"emptied\",\"encrypted\",\"ended\",\"error\",\"focus\",\"input\",\"invalid\",\"keyDown\",\"keyPress\",\"keyUp\",\"load\",\"loadedData\",\"loadedMetadata\",\"loadStart\",\"mouseDown\",\"mouseMove\",\"mouseOut\",\"mouseOver\",\"mouseUp\",\"paste\",\"pause\",\"play\",\"playing\",\"progress\",\"rateChange\",\"reset\",\"scroll\",\"seeked\",\"seeking\",\"stalled\",\"submit\",\"suspend\",\"timeUpdate\",\"touchCancel\",\"touchEnd\",\"touchMove\",\"touchStart\",\"transitionEnd\",\"volumeChange\",\"waiting\",\"wheel\"].forEach(function(e){var t=e[0].toUpperCase()+e.slice(1),n=\"on\"+t,r=\"top\"+t,o={phasedRegistrationNames:{bubbled:n,captured:n+\"Capture\"},dependencies:[r]};E[e]=o,x[r]=o});var w={},T={eventTypes:E,extractEvents:function(e,t,n,r){var o=x[e];if(!o)return null;var a;switch(e){case\"topAbort\":case\"topCanPlay\":case\"topCanPlayThrough\":case\"topDurationChange\":case\"topEmptied\":case\"topEncrypted\":case\"topEnded\":case\"topError\":case\"topInput\":case\"topInvalid\":case\"topLoad\":case\"topLoadedData\":case\"topLoadedMetadata\":case\"topLoadStart\":case\"topPause\":case\"topPlay\":case\"topPlaying\":case\"topProgress\":case\"topRateChange\":case\"topReset\":case\"topSeeked\":case\"topSeeking\":case\"topStalled\":case\"topSubmit\":case\"topSuspend\":case\"topTimeUpdate\":case\"topVolumeChange\":case\"topWaiting\":a=p;break;case\"topKeyPress\":if(0===b(n))return null;case\"topKeyDown\":case\"topKeyUp\":a=f;break;case\"topBlur\":case\"topFocus\":a=d;break;case\"topClick\":if(2===n.button)return null;case\"topDoubleClick\":case\"topMouseDown\":case\"topMouseMove\":case\"topMouseUp\":case\"topMouseOut\":case\"topMouseOver\":case\"topContextMenu\":a=h;break;case\"topDrag\":case\"topDragEnd\":case\"topDragEnter\":case\"topDragExit\":case\"topDragLeave\":case\"topDragOver\":case\"topDragStart\":case\"topDrop\":a=m;break;case\"topTouchCancel\":case\"topTouchEnd\":case\"topTouchMove\":case\"topTouchStart\":a=v;break;case\"topAnimationEnd\":case\"topAnimationIteration\":case\"topAnimationStart\":a=l;break;case\"topTransitionEnd\":a=g;break;case\"topScroll\":a=y;break;case\"topWheel\":a=_;break;case\"topCopy\":case\"topCut\":case\"topPaste\":a=c}a?void 0:i(\"86\",e);var u=a.getPooled(o,t,n,r);return s.accumulateTwoPhaseDispatches(u),u},didPutListener:function(e,t,n){if(\"onClick\"===t&&!o(e._tag)){var i=r(e),s=u.getNodeFromInstance(e);w[i]||(w[i]=a.listen(s,\"click\",C))}},willDeleteListener:function(e,t){if(\"onClick\"===t&&!o(e._tag)){var n=r(e);w[n].remove(),delete w[n]}}};t.exports=T},{113:113,122:122,129:129,137:137,19:19,33:33,76:76,77:77,79:79,80:80,81:81,83:83,84:84,85:85,86:86,87:87,88:88,99:99}],76:[function(e,t,n){\"use strict\";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(80),i={animationName:null,elapsedTime:null,pseudoElement:null};o.augmentClass(r,i),t.exports=r},{80:80}],77:[function(e,t,n){\"use strict\";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(80),i={clipboardData:function(e){return\"clipboardData\"in e?e.clipboardData:window.clipboardData}};o.augmentClass(r,i),t.exports=r},{80:80}],78:[function(e,t,n){\"use strict\";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(80),i={data:null};o.augmentClass(r,i),t.exports=r},{80:80}],79:[function(e,t,n){\"use strict\";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(84),i={dataTransfer:null};o.augmentClass(r,i),t.exports=r},{84:84}],80:[function(e,t,n){\"use strict\";function r(e,t,n,r){this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n;var o=this.constructor.Interface;for(var i in o)if(o.hasOwnProperty(i)){var s=o[i];s?this[i]=s(n):\"target\"===i?this.target=r:this[i]=n[i]}var u=null!=n.defaultPrevented?n.defaultPrevented:n.returnValue===!1;return u?this.isDefaultPrevented=a.thatReturnsTrue:this.isDefaultPrevented=a.thatReturnsFalse,this.isPropagationStopped=a.thatReturnsFalse,this}var o=e(143),i=e(24),a=e(129),s=(e(142),\"function\"==typeof Proxy,[\"dispatchConfig\",\"_targetInst\",\"nativeEvent\",\"isDefaultPrevented\",\"isPropagationStopped\",\"_dispatchListeners\",\"_dispatchInstances\"]),u={type:null,target:null,currentTarget:a.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};o(r.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():\"unknown\"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=a.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():\"unknown\"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=a.thatReturnsTrue)},persist:function(){this.isPersistent=a.thatReturnsTrue},isPersistent:a.thatReturnsFalse,destructor:function(){var e=this.constructor.Interface;for(var t in e)this[t]=null;for(var n=0;n<s.length;n++)this[s[n]]=null}}),r.Interface=u,r.augmentClass=function(e,t){var n=this,r=function(){};r.prototype=n.prototype;var a=new r;o(a,e.prototype),e.prototype=a,e.prototype.constructor=e,e.Interface=o({},n.Interface,t),e.augmentClass=n.augmentClass,i.addPoolingTo(e,i.fourArgumentPooler)},i.addPoolingTo(r,i.fourArgumentPooler),t.exports=r},{129:129,142:142,143:143,24:24}],81:[function(e,t,n){\"use strict\";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(87),i={relatedTarget:null};o.augmentClass(r,i),t.exports=r},{87:87}],82:[function(e,t,n){\"use strict\";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(80),i={data:null};o.augmentClass(r,i),t.exports=r},{80:80}],83:[function(e,t,n){\"use strict\";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(87),i=e(99),a=e(100),s=e(101),u={key:a,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:s,charCode:function(e){return\"keypress\"===e.type?i(e):0},keyCode:function(e){return\"keydown\"===e.type||\"keyup\"===e.type?e.keyCode:0},which:function(e){return\"keypress\"===e.type?i(e):\"keydown\"===e.type||\"keyup\"===e.type?e.keyCode:0}};o.augmentClass(r,u),t.exports=r},{100:100,101:101,87:87,99:99}],84:[function(e,t,n){\"use strict\";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(87),i=e(90),a=e(101),s={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:a,button:function(e){var t=e.button;return\"which\"in e?t:2===t?2:4===t?1:0},buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},pageX:function(e){return\"pageX\"in e?e.pageX:e.clientX+i.currentScrollLeft},pageY:function(e){return\"pageY\"in e?e.pageY:e.clientY+i.currentScrollTop}};o.augmentClass(r,s),t.exports=r},{101:101,87:87,90:90}],85:[function(e,t,n){\"use strict\";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(87),i=e(101),a={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:i};o.augmentClass(r,a),t.exports=r},{101:101,87:87}],86:[function(e,t,n){\"use strict\";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(80),i={propertyName:null,elapsedTime:null,pseudoElement:null};o.augmentClass(r,i),t.exports=r},{80:80}],87:[function(e,t,n){\"use strict\";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(80),i=e(102),a={view:function(e){if(e.view)return e.view;var t=i(e);if(t.window===t)return t;var n=t.ownerDocument;return n?n.defaultView||n.parentWindow:window},detail:function(e){return e.detail||0}};o.augmentClass(r,a),t.exports=r},{102:102,80:80}],88:[function(e,t,n){\"use strict\";function r(e,t,n,r){return o.call(this,e,t,n,r)}var o=e(84),i={deltaX:function(e){return\"deltaX\"in e?e.deltaX:\"wheelDeltaX\"in e?-e.wheelDeltaX:0},deltaY:function(e){return\"deltaY\"in e?e.deltaY:\"wheelDeltaY\"in e?-e.wheelDeltaY:\"wheelDelta\"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null};o.augmentClass(r,i),t.exports=r},{84:84}],89:[function(e,t,n){\"use strict\";var r=e(113),o=(e(137),{}),i={reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(e,t,n,o,i,a,s,u){this.isInTransaction()?r(\"27\"):void 0;var l,c;try{this._isInTransaction=!0,l=!0,this.initializeAll(0),c=e.call(t,n,o,i,a,s,u),l=!1}finally{try{if(l)try{this.closeAll(0)}catch(e){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return c},initializeAll:function(e){for(var t=this.transactionWrappers,n=e;n<t.length;n++){var r=t[n];try{this.wrapperInitData[n]=o,this.wrapperInitData[n]=r.initialize?r.initialize.call(this):null}finally{if(this.wrapperInitData[n]===o)try{this.initializeAll(n+1)}catch(e){}}}},closeAll:function(e){this.isInTransaction()?void 0:r(\"28\");for(var t=this.transactionWrappers,n=e;n<t.length;n++){var i,a=t[n],s=this.wrapperInitData[n];try{i=!0,s!==o&&a.close&&a.close.call(this,s),i=!1}finally{if(i)try{this.closeAll(n+1)}catch(e){}}}this.wrapperInitData.length=0}};t.exports=i},{113:113,137:137}],90:[function(e,t,n){\"use strict\";var r={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function(e){r.currentScrollLeft=e.x,r.currentScrollTop=e.y}};t.exports=r},{}],91:[function(e,t,n){\"use strict\";function r(e,t){return null==t?o(\"30\"):void 0,null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}var o=e(113);e(137);t.exports=r},{113:113,137:137}],92:[function(e,t,n){\"use strict\";function r(e){for(var t=1,n=0,r=0,i=e.length,a=i&-4;r<a;){for(var s=Math.min(r+4096,a);r<s;r+=4)n+=(t+=e.charCodeAt(r))+(t+=e.charCodeAt(r+1))+(t+=e.charCodeAt(r+2))+(t+=e.charCodeAt(r+3));t%=o,n%=o}for(;r<i;r++)n+=t+=e.charCodeAt(r);return t%=o,n%=o,t|n<<16}var o=65521;t.exports=r},{}],93:[function(e,t,n){\"use strict\";var r=function(e){return\"undefined\"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n,r,o)})}:e};t.exports=r},{}],94:[function(e,t,n){\"use strict\";function r(e,t,n){var r=null==t||\"boolean\"==typeof t||\"\"===t;if(r)return\"\";var o=isNaN(t);return o||0===t||i.hasOwnProperty(e)&&i[e]?\"\"+t:(\"string\"==typeof t&&(t=t.trim()),t+\"px\")}var o=e(4),i=(e(142),o.isUnitlessNumber);t.exports=r},{142:142,4:4}],95:[function(e,t,n){\"use strict\";function r(e){var t=\"\"+e,n=i.exec(t);if(!n)return t;var r,o=\"\",a=0,s=0;for(a=n.index;a<t.length;a++){switch(t.charCodeAt(a)){case 34:r=\"&quot;\";break;case 38:r=\"&amp;\";break;case 39:r=\"&#x27;\";break;case 60:r=\"&lt;\";break;case 62:r=\"&gt;\";break;default:continue}s!==a&&(o+=t.substring(s,a)),s=a+1,o+=r}return s!==a?o+t.substring(s,a):o}function o(e){return\"boolean\"==typeof e||\"number\"==typeof e?\"\"+e:r(e)}var i=/[\"'&<>]/;t.exports=o},{}],96:[function(e,t,n){\"use strict\";function r(e){if(null==e)return null;if(1===e.nodeType)return e;var t=a.get(e);return t?(t=s(t),t?i.getNodeFromInstance(t):null):void(\"function\"==typeof e.render?o(\"44\"):o(\"45\",Object.keys(e)))}var o=e(113),i=(e(120),e(33)),a=e(57),s=e(103);e(137),e(142);t.exports=r},{103:103,113:113,120:120,137:137,142:142,33:33,57:57}],97:[function(e,t,n){(function(n){\"use strict\";function r(e,t,n,r){if(e&&\"object\"==typeof e){var o=e,i=void 0===o[n];i&&null!=t&&(o[n]=t)}}function o(e,t){if(null==e)return e;var n={};return i(e,r,n),n}var i=(e(22),e(118));e(142);\"undefined\"!=typeof n&&n.env,t.exports=o}).call(this,void 0)},{118:118,142:142,22:22}],98:[function(e,t,n){\"use strict\";function r(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}t.exports=r},{}],99:[function(e,t,n){\"use strict\";function r(e){var t,n=e.keyCode;return\"charCode\"in e?(t=e.charCode,0===t&&13===n&&(t=13)):t=n,t>=32||13===t?t:0}t.exports=r},{}],100:[function(e,t,n){\"use strict\";function r(e){if(e.key){var t=i[e.key]||e.key;if(\"Unidentified\"!==t)return t}if(\"keypress\"===e.type){var n=o(e);return 13===n?\"Enter\":String.fromCharCode(n)}return\"keydown\"===e.type||\"keyup\"===e.type?a[e.keyCode]||\"Unidentified\":\"\"}var o=e(99),i={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},a={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"};t.exports=r},{99:99}],101:[function(e,t,n){\"use strict\";function r(e){var t=this,n=t.nativeEvent;if(n.getModifierState)return n.getModifierState(e);var r=i[e];return!!r&&!!n[r]}function o(e){return r}var i={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};t.exports=o},{}],102:[function(e,t,n){\"use strict\";function r(e){var t=e.target||e.srcElement||window;return t.correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}t.exports=r},{}],103:[function(e,t,n){\"use strict\";function r(e){for(var t;(t=e._renderedNodeType)===o.COMPOSITE;)e=e._renderedComponent;return t===o.HOST?e._renderedComponent:t===o.EMPTY?null:void 0}var o=e(62);t.exports=r},{62:62}],104:[function(e,t,n){\"use strict\";function r(e){var t=e&&(o&&e[o]||e[i]);if(\"function\"==typeof t)return t}var o=\"function\"==typeof Symbol&&Symbol.iterator,i=\"@@iterator\";t.exports=r},{}],105:[function(e,t,n){\"use strict\";function r(){return o++}var o=1;t.exports=r},{}],106:[function(e,t,n){\"use strict\";function r(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function o(e){for(;e;){if(e.nextSibling)return e.nextSibling;e=e.parentNode}}function i(e,t){for(var n=r(e),i=0,a=0;n;){if(3===n.nodeType){if(a=i+n.textContent.length,i<=t&&a>=t)return{node:n,offset:t-i};i=a}n=r(o(n))}}t.exports=i},{}],107:[function(e,t,n){\"use strict\";function r(){return!i&&o.canUseDOM&&(i=\"textContent\"in document.documentElement?\"textContent\":\"innerText\"),i}var o=e(123),i=null;t.exports=r},{123:123}],108:[function(e,t,n){\"use strict\";function r(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n[\"Webkit\"+e]=\"webkit\"+t,n[\"Moz\"+e]=\"moz\"+t,n[\"ms\"+e]=\"MS\"+t,n[\"O\"+e]=\"o\"+t.toLowerCase(),n}function o(e){if(s[e])return s[e];if(!a[e])return e;var t=a[e];for(var n in t)if(t.hasOwnProperty(n)&&n in u)return s[e]=t[n];return\"\"}var i=e(123),a={animationend:r(\"Animation\",\"AnimationEnd\"),animationiteration:r(\"Animation\",\"AnimationIteration\"),animationstart:r(\"Animation\",\"AnimationStart\"),transitionend:r(\"Transition\",\"TransitionEnd\")},s={},u={};i.canUseDOM&&(u=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete a.animationend.animation,delete a.animationiteration.animation,delete a.animationstart.animation),\"TransitionEvent\"in window||delete a.transitionend.transition),t.exports=o},{123:123}],109:[function(e,t,n){\"use strict\";function r(e){if(e){var t=e.getName();if(t)return\" Check the render method of `\"+t+\"`.\"}return\"\"}function o(e){return\"function\"==typeof e&&\"undefined\"!=typeof e.prototype&&\"function\"==typeof e.prototype.mountComponent&&\"function\"==typeof e.prototype.receiveComponent}function i(e,t){var n;if(null===e||e===!1)n=l.create(i);else if(\"object\"==typeof e){var s=e,u=s.type;if(\"function\"!=typeof u&&\"string\"!=typeof u){var d=\"\";d+=r(s._owner),a(\"130\",null==u?u:typeof u,d)}\"string\"==typeof s.type?n=c.createInternalComponent(s):o(s.type)?(n=new s.type(s),n.getHostNode||(n.getHostNode=n.getNativeNode)):n=new p(s)}else\"string\"==typeof e||\"number\"==typeof e?n=c.createInstanceForText(e):a(\"131\",typeof e);return n._mountIndex=0,n._mountImage=null,n}var a=e(113),s=e(143),u=e(29),l=e(49),c=e(54),p=(e(105),e(137),e(142),function(e){this.construct(e)});s(p.prototype,u,{_instantiateReactComponent:i}),t.exports=i},{105:105,113:113,137:137,142:142,143:143,29:29,49:49,54:54}],110:[function(e,t,n){\"use strict\";function r(e,t){if(!i.canUseDOM||t&&!(\"addEventListener\"in document))return!1;var n=\"on\"+e,r=n in document;if(!r){var a=document.createElement(\"div\");a.setAttribute(n,\"return;\"),r=\"function\"==typeof a[n]}return!r&&o&&\"wheel\"===e&&(r=document.implementation.hasFeature(\"Events.wheel\",\"3.0\")),r}var o,i=e(123);i.canUseDOM&&(o=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature(\"\",\"\")!==!0),t.exports=r},{123:123}],111:[function(e,t,n){\"use strict\";function r(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return\"input\"===t?!!o[e.type]:\"textarea\"===t}var o={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};t.exports=r},{}],112:[function(e,t,n){\"use strict\";function r(e){return'\"'+o(e)+'\"'}var o=e(95);t.exports=r},{95:95}],113:[function(e,t,n){\"use strict\";function r(e){for(var t=arguments.length-1,n=\"Minified React error #\"+e+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant=\"+e,r=0;r<t;r++)n+=\"&args[]=\"+encodeURIComponent(arguments[r+1]);n+=\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\";var o=new Error(n);throw o.name=\"Invariant Violation\",o.framesToPop=1,o}t.exports=r},{}],114:[function(e,t,n){\"use strict\";var r=e(60);t.exports=r.renderSubtreeIntoContainer},{60:60}],115:[function(e,t,n){\"use strict\";var r,o=e(123),i=e(10),a=/^[ \\r\\n\\t\\f]/,s=/<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/,u=e(93),l=u(function(e,t){if(e.namespaceURI!==i.svg||\"innerHTML\"in e)e.innerHTML=t;else{r=r||document.createElement(\"div\"),r.innerHTML=\"<svg>\"+t+\"</svg>\";for(var n=r.firstChild;n.firstChild;)e.appendChild(n.firstChild)}});if(o.canUseDOM){var c=document.createElement(\"div\");c.innerHTML=\" \",\"\"===c.innerHTML&&(l=function(e,t){if(e.parentNode&&e.parentNode.replaceChild(e,e),a.test(t)||\"<\"===t[0]&&s.test(t)){e.innerHTML=String.fromCharCode(65279)+t;var n=e.firstChild;1===n.data.length?e.removeChild(n):n.deleteData(0,1)}else e.innerHTML=t}),c=null}t.exports=l},{10:10,123:123,93:93}],116:[function(e,t,n){\"use strict\";var r=e(123),o=e(95),i=e(115),a=function(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t};r.canUseDOM&&(\"textContent\"in document.documentElement||(a=function(e,t){return 3===e.nodeType?void(e.nodeValue=t):void i(e,o(t))})),t.exports=a},{115:115,123:123,95:95}],117:[function(e,t,n){\"use strict\";function r(e,t){var n=null===e||e===!1,r=null===t||t===!1;if(n||r)return n===r;var o=typeof e,i=typeof t;return\"string\"===o||\"number\"===o?\"string\"===i||\"number\"===i:\"object\"===i&&e.type===t.type&&e.key===t.key}t.exports=r},{}],118:[function(e,t,n){\"use strict\";function r(e,t){return e&&\"object\"==typeof e&&null!=e.key?l.escape(e.key):t.toString(36)}function o(e,t,n,i){var d=typeof e;if(\"undefined\"!==d&&\"boolean\"!==d||(e=null),null===e||\"string\"===d||\"number\"===d||\"object\"===d&&e.$$typeof===s)return n(i,e,\"\"===t?c+r(e,0):t),1;var f,h,m=0,v=\"\"===t?c:t+p;if(Array.isArray(e))for(var g=0;g<e.length;g++)f=e[g],h=v+r(f,g),m+=o(f,h,n,i);else{var y=u(e);if(y){var _,C=y.call(e);if(y!==e.entries)for(var b=0;!(_=C.next()).done;)f=_.value,h=v+r(f,b++),m+=o(f,h,n,i);else for(;!(_=C.next()).done;){var E=_.value;E&&(f=E[1],h=v+l.escape(E[0])+p+r(f,0),m+=o(f,h,n,i))}}else if(\"object\"===d){var x=\"\",w=String(e);a(\"31\",\"[object Object]\"===w?\"object with keys {\"+Object.keys(e).join(\", \")+\"}\":w,x)}}return m}function i(e,t,n){return null==e?0:o(e,\"\",t,n)}var a=e(113),s=(e(120),e(48)),u=e(104),l=(e(137),e(22)),c=(e(142),\".\"),p=\":\";t.exports=i},{104:104,113:113,120:120,137:137,142:142,22:22,48:48}],119:[function(e,t,n){\"use strict\";var r=(e(143),e(129)),o=(e(142),r);t.exports=o},{129:129,142:142,143:143}],120:[function(t,n,r){\"use strict\";var o=e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;n.exports=o.ReactCurrentOwner},{}],121:[function(t,n,r){\"use strict\";n.exports=e},{}],122:[function(e,t,n){\"use strict\";var r=e(129),o={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent(\"on\"+t,n),{remove:function(){e.detachEvent(\"on\"+t,n)}}):void 0},capture:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function(){e.removeEventListener(t,n,!0)}}):{remove:r}},registerDefault:function(){}};t.exports=o},{129:129}],123:[function(e,t,n){\"use strict\";var r=!(\"undefined\"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:\"undefined\"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};t.exports=o},{}],124:[function(e,t,n){\"use strict\";function r(e){return e.replace(o,function(e,t){return t.toUpperCase()})}var o=/-(.)/g;t.exports=r},{}],125:[function(e,t,n){\"use strict\";function r(e){return o(e.replace(i,\"ms-\"))}var o=e(124),i=/^-ms-/;t.exports=r},{124:124}],126:[function(e,t,n){\"use strict\";function r(e,t){return!(!e||!t)&&(e===t||!o(e)&&(o(t)?r(e,t.parentNode):\"contains\"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}var o=e(139);t.exports=r},{139:139}],127:[function(e,t,n){\"use strict\";function r(e){var t=e.length;if(Array.isArray(e)||\"object\"!=typeof e&&\"function\"!=typeof e?a(!1):void 0,\"number\"!=typeof t?a(!1):void 0,0===t||t-1 in e?void 0:a(!1),\"function\"==typeof e.callee?a(!1):void 0,e.hasOwnProperty)try{return Array.prototype.slice.call(e)}catch(e){}for(var n=Array(t),r=0;r<t;r++)n[r]=e[r];return n}function o(e){return!!e&&(\"object\"==typeof e||\"function\"==typeof e)&&\"length\"in e&&!(\"setInterval\"in e)&&\"number\"!=typeof e.nodeType&&(Array.isArray(e)||\"callee\"in e||\"item\"in e)}function i(e){return o(e)?Array.isArray(e)?e.slice():r(e):[e]}var a=e(137);t.exports=i},{137:137}],128:[function(e,t,n){\"use strict\";function r(e){var t=e.match(c);return t&&t[1].toLowerCase()}function o(e,t){var n=l;l?void 0:u(!1);var o=r(e),i=o&&s(o);if(i){n.innerHTML=i[1]+e+i[2];for(var c=i[0];c--;)n=n.lastChild}else n.innerHTML=e;var p=n.getElementsByTagName(\"script\");p.length&&(t?void 0:u(!1),a(p).forEach(t));for(var d=Array.from(n.childNodes);n.lastChild;)n.removeChild(n.lastChild);return d}var i=e(123),a=e(127),s=e(133),u=e(137),l=i.canUseDOM?document.createElement(\"div\"):null,c=/^\\s*<(\\w+)/;t.exports=o},{123:123,127:127,133:133,137:137}],129:[function(e,t,n){\"use strict\";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},t.exports=o},{}],130:[function(e,t,n){\"use strict\";var r={};t.exports=r},{}],131:[function(e,t,n){\"use strict\";function r(e){try{e.focus()}catch(e){}}t.exports=r},{}],132:[function(e,t,n){\"use strict\";function r(){if(\"undefined\"==typeof document)return null;try{return document.activeElement||document.body}catch(e){return document.body}}t.exports=r},{}],133:[function(e,t,n){\"use strict\";function r(e){return a?void 0:i(!1),d.hasOwnProperty(e)||(e=\"*\"),s.hasOwnProperty(e)||(\"*\"===e?a.innerHTML=\"<link />\":a.innerHTML=\"<\"+e+\"></\"+e+\">\",s[e]=!a.firstChild),s[e]?d[e]:null}var o=e(123),i=e(137),a=o.canUseDOM?document.createElement(\"div\"):null,s={},u=[1,'<select multiple=\"true\">',\"</select>\"],l=[1,\"<table>\",\"</table>\"],c=[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],p=[1,'<svg xmlns=\"http://www.w3.org/2000/svg\">',\"</svg>\"],d={\"*\":[1,\"?<div>\",\"</div>\"],area:[1,\"<map>\",\"</map>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],param:[1,\"<object>\",\"</object>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],optgroup:u,option:u,caption:l,colgroup:l,tbody:l,tfoot:l,thead:l,td:c,th:c},f=[\"circle\",\"clipPath\",\"defs\",\"ellipse\",\"g\",\"image\",\"line\",\"linearGradient\",\"mask\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"radialGradient\",\"rect\",\"stop\",\"text\",\"tspan\"];f.forEach(function(e){d[e]=p,s[e]=!0}),t.exports=r},{123:123,137:137}],134:[function(e,t,n){\"use strict\";function r(e){return e===window?{x:window.pageXOffset||document.documentElement.scrollLeft,y:window.pageYOffset||document.documentElement.scrollTop}:{x:e.scrollLeft,y:e.scrollTop}}t.exports=r},{}],135:[function(e,t,n){\"use strict\";function r(e){return e.replace(o,\"-$1\").toLowerCase()}var o=/([A-Z])/g;t.exports=r},{}],136:[function(e,t,n){\"use strict\";function r(e){return o(e).replace(i,\"-ms-\")}var o=e(135),i=/^ms-/;t.exports=r},{135:135}],137:[function(e,t,n){\"use strict\";function r(e,t,n,r,i,a,s,u){if(o(t),!e){var l;if(void 0===t)l=new Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var c=[n,r,i,a,s,u],p=0;l=new Error(t.replace(/%s/g,function(){return c[p++]})),l.name=\"Invariant Violation\"}throw l.framesToPop=1,l}}var o=function(e){};t.exports=r},{}],138:[function(e,t,n){\"use strict\";function r(e){return!(!e||!(\"function\"==typeof Node?e instanceof Node:\"object\"==typeof e&&\"number\"==typeof e.nodeType&&\"string\"==typeof e.nodeName))}t.exports=r},{}],139:[function(e,t,n){\"use strict\";function r(e){return o(e)&&3==e.nodeType}var o=e(138);t.exports=r},{138:138}],140:[function(e,t,n){\"use strict\";function r(e){var t={};return function(n){return t.hasOwnProperty(n)||(t[n]=e.call(this,n)),t[n]}}t.exports=r},{}],141:[function(e,t,n){\"use strict\";function r(e,t){return e===t?0!==e||0!==t||1/e===1/t:e!==e&&t!==t}function o(e,t){if(r(e,t))return!0;if(\"object\"!=typeof e||null===e||\"object\"!=typeof t||null===t)return!1;var n=Object.keys(e),o=Object.keys(t);if(n.length!==o.length)return!1;for(var a=0;a<n.length;a++)if(!i.call(t,n[a])||!r(e[n[a]],t[n[a]]))return!1;return!0}var i=Object.prototype.hasOwnProperty;t.exports=o},{}],142:[function(e,t,n){\"use strict\";var r=e(129),o=r;t.exports=o},{129:129}],143:[function(e,t,n){\"use strict\";function r(e){if(null===e||void 0===e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}function o(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t[\"_\"+String.fromCharCode(n)]=n;var r=Object.getOwnPropertyNames(t).map(function(e){return t[e]});if(\"0123456789\"!==r.join(\"\"))return!1;var o={};return\"abcdefghijklmnopqrst\".split(\"\").forEach(function(e){o[e]=e}),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},o)).join(\"\")}catch(e){return!1}}var i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;t.exports=o()?Object.assign:function(e,t){for(var n,o,s=r(e),u=1;u<arguments.length;u++){n=Object(arguments[u]);for(var l in n)i.call(n,l)&&(s[l]=n[l]);if(Object.getOwnPropertySymbols){o=Object.getOwnPropertySymbols(n);for(var c=0;c<o.length;c++)a.call(n,o[c])&&(s[o[c]]=n[o[c]])}}return s}},{}]},{},[45])(45)})});"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 125095
        },
        "cache": {},
        "timings": {
          "blocked": 3.3160001039505,
          "dns": -1,
          "connect": -1,
          "send": 0.08199992589652982,
          "wait": 2059.911000076683,
          "receive": 68391.78399997763,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.166Z",
        "time": 57725.204000016674,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.blog.st-hatena.com/js/external/jquery.min.js%3Fversion=1.12.3",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"0-17b8b\""
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "content-length",
              "value": "97163"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 97163,
            "mimeType": "text/plain",
            "text": "/*! jQuery v1.12.4 | (c) jQuery Foundation | jquery.org/license */\n!function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=a.document,e=c.slice,f=c.concat,g=c.push,h=c.indexOf,i={},j=i.toString,k=i.hasOwnProperty,l={},m=\"1.12.4\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return e.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:e.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a){return n.each(this,a)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(e.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:g,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&&(j&&c&&(n.isPlainObject(c)||(b=n.isArray(c)))?(b?(b=!1,f=a&&n.isArray(a)?a:[]):f=a&&n.isPlainObject(a)?a:{},g[d]=n.extend(j,f,c)):void 0!==c&&(g[d]=c));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray||function(a){return\"array\"===n.type(a)},isWindow:function(a){return null!=a&&a==a.window},isNumeric:function(a){var b=a&&a.toString();return!n.isArray(a)&&b-parseFloat(b)+1>=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||\"object\"!==n.type(a)||a.nodeType||n.isWindow(a))return!1;try{if(a.constructor&&!k.call(a,\"constructor\")&&!k.call(a.constructor.prototype,\"isPrototypeOf\"))return!1}catch(c){return!1}if(!l.ownFirst)for(b in a)return k.call(a,b);for(b in a);return void 0===b||k.call(a,b)},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?i[j.call(a)]||\"object\":typeof a},globalEval:function(b){b&&n.trim(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(s(a)){for(c=a.length;c>d;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):g.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(h)return h.call(b,a,c);for(d=b.length,c=c?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c>d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,g=0,h=[];if(s(a))for(d=a.length;d>g;g++)e=b(a[g],g,c),null!=e&&h.push(e);else for(g in a)e=b(a[g],g,c),null!=e&&h.push(e);return f.apply([],h)},guid:1,proxy:function(a,b){var c,d,f;return\"string\"==typeof b&&(f=a[b],b=a,a=f),n.isFunction(a)?(c=e.call(arguments,2),d=function(){return a.apply(b||this,c.concat(e.call(arguments)))},d.guid=a.guid=a.guid||n.guid++,d):void 0},now:function(){return+new Date},support:l}),\"function\"==typeof Symbol&&(n.fn[Symbol.iterator]=c[Symbol.iterator]),n.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(a,b){i[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ga(),z=ga(),A=ga(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",L=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",M=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",N=\"\\\\[\"+L+\"*(\"+M+\")(?:\"+L+\"*([*^$|!~]?=)\"+L+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+M+\"))|)\"+L+\"*\\\\]\",O=\":(\"+M+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+N+\")*)|.*)\\\\)|)\",P=new RegExp(L+\"+\",\"g\"),Q=new RegExp(\"^\"+L+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+L+\"+$\",\"g\"),R=new RegExp(\"^\"+L+\"*,\"+L+\"*\"),S=new RegExp(\"^\"+L+\"*([>+~]|\"+L+\")\"+L+\"*\"),T=new RegExp(\"=\"+L+\"*([^\\\\]'\\\"]*?)\"+L+\"*\\\\]\",\"g\"),U=new RegExp(O),V=new RegExp(\"^\"+M+\"$\"),W={ID:new RegExp(\"^#(\"+M+\")\"),CLASS:new RegExp(\"^\\\\.(\"+M+\")\"),TAG:new RegExp(\"^(\"+M+\"|[*])\"),ATTR:new RegExp(\"^\"+N),PSEUDO:new RegExp(\"^\"+O),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+L+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+L+\"*(?:([+-]|)\"+L+\"*(\\\\d+)|))\"+L+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+K+\")$\",\"i\"),needsContext:new RegExp(\"^\"+L+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+L+\"*((?:-\\\\d)?\\\\d*)\"+L+\"*\\\\)|)(?=[^-]|$)\",\"i\")},X=/^(?:input|select|textarea|button)$/i,Y=/^h\\d$/i,Z=/^[^{]+\\{\\s*\\[native \\w/,$=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,_=/[+~]/,aa=/'|\\\\/g,ba=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+L+\"?|(\"+L+\")|.)\",\"ig\"),ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},da=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(ea){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ha(a){return a[u]=!0,a}function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=fa.support={},f=fa.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=fa.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener(\"unload\",da,!1):e.attachEvent&&e.attachEvent(\"onunload\",da)),c.attributes=ia(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ia(function(a){return a.appendChild(n.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=Z.test(n.getElementsByClassName),c.getById=ia(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ba,ca);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ba,ca);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return\"undefined\"!=typeof b.getElementsByClassName&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=Z.test(n.querySelectorAll))&&(ia(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+L+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+L+\"*(?:value|\"+K+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),ia(function(a){var b=n.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+L+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=Z.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ia(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",O)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=Z.test(o.compareDocumentPosition),t=b||Z.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return ka(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?ka(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},fa.matches=function(a,b){return fa(a,null,null,b)},fa.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(T,\"='$1']\"),c.matchesSelector&&p&&!A[b+\" \"]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fa(b,n,null,[a]).length>0},fa.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fa.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fa.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},fa.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fa.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fa.selectors={cacheLength:50,createPseudo:ha,match:W,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ba,ca),a[3]=(a[3]||a[4]||a[5]||\"\").replace(ba,ca),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||fa.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&fa.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return W.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&U.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ba,ca).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+L+\")\"+a+\"(\"+L+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=fa.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(P,\" \")+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fa.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ha(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ha(function(a){var b=[],c=[],d=h(a.replace(Q,\"$1\"));return d[u]?ha(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ha(function(a){return function(b){return fa(a,b).length>0}}),contains:ha(function(a){return a=a.replace(ba,ca),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ha(function(a){return V.test(a||\"\")||fa.error(\"unsupported lang: \"+a),a=a.replace(ba,ca).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Y.test(a.nodeName)},input:function(a){return X.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:na(function(){return[0]}),last:na(function(a,b){return[b-1]}),eq:na(function(a,b,c){return[0>c?c+b:c]}),even:na(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:na(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:na(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:na(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=la(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=ma(b);function pa(){}pa.prototype=d.filters=d.pseudos,d.setFilters=new pa,g=fa.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=R.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=S.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(Q,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=W[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fa.error(a):z(a,i).slice(0)};function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}return h=fa.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xa(e,d)),f.selector=a}return f},i=fa.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ba,ca),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=W.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ba,ca),_.test(j[0].type)&&oa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qa(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,!b||_.test(a)&&oa(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ia(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),ia(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||ja(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ia(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||ja(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ia(function(a){return null==a.getAttribute(\"disabled\")})||ja(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fa}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.uniqueSort=n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},w=n.expr.match.needsContext,x=/^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/,y=/^.[^:#\\[\\.,]*$/;function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=[],d=this,e=d.length;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;e>b;b++)if(n.contains(d[b],this))return!0}));for(b=0;e>b;b++)n.find(a,d[b],c);return c=this.pushStack(e>1?n.unique(c):c),c.selector=this.selector?this.selector+\" \"+a:a,c},filter:function(a){return this.pushStack(z(this,a||[],!1))},not:function(a){return this.pushStack(z(this,a||[],!0))},is:function(a){return!!z(this,\"string\"==typeof a&&w.test(a)?n(a):a||[],!1).length}});var A,B=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,C=n.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||A,\"string\"==typeof a){if(e=\"<\"===a.charAt(0)&&\">\"===a.charAt(a.length-1)&&a.length>=3?[null,a,null]:B.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),x.test(e[1])&&n.isPlainObject(b))for(e in b)n.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}if(f=d.getElementById(e[2]),f&&f.parentNode){if(f.id!==e[2])return A.find(a);this.length=1,this[0]=f}return this.context=d,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\"undefined\"!=typeof c.ready?c.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};C.prototype=n.fn,A=n(d);var D=/^(?:parents|prev(?:Until|All))/,E={children:!0,contents:!0,next:!0,prev:!0};n.fn.extend({has:function(a){var b,c=n(a,this),d=c.length;return this.filter(function(){for(b=0;d>b;b++)if(n.contains(this,c[b]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=w.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.uniqueSort(f):f)},index:function(a){return a?\"string\"==typeof a?n.inArray(this[0],n(a)):n.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.uniqueSort(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return u(a,\"parentNode\")},parentsUntil:function(a,b,c){return u(a,\"parentNode\",c)},next:function(a){return F(a,\"nextSibling\")},prev:function(a){return F(a,\"previousSibling\")},nextAll:function(a){return u(a,\"nextSibling\")},prevAll:function(a){return u(a,\"previousSibling\")},nextUntil:function(a,b,c){return u(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return u(a,\"previousSibling\",c)},siblings:function(a){return v((a.parentNode||{}).firstChild,a)},children:function(a){return v(a.firstChild)},contents:function(a){return n.nodeName(a,\"iframe\")?a.contentDocument||a.contentWindow.document:n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(E[a]||(e=n.uniqueSort(e)),D.test(a)&&(e=e.reverse())),this.pushStack(e)}});var G=/\\S+/g;function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?H(a):n.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){n.each(b,function(b,c){n.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&\"string\"!==n.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return n.each(arguments,function(a,b){var c;while((c=n.inArray(b,f,c))>-1)f.splice(c,1),h>=c&&h--}),this},has:function(a){return a?n.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\"\",this},disabled:function(){return!f},lock:function(){return e=!0,c||j.disable(),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().progress(c.notify).done(c.resolve).fail(c.reject):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=e.call(arguments),d=c.length,f=1!==d||a&&n.isFunction(a.promise)?d:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(d>1)for(i=new Array(d),j=new Array(d),k=new Array(d);d>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().progress(h(b,j,i)).done(h(b,k,c)).fail(g.reject):--f;return f||g.resolveWith(k,c),g.promise()}});var I;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(I.resolveWith(d,[n]),n.fn.triggerHandler&&(n(d).triggerHandler(\"ready\"),n(d).off(\"ready\"))))}});function J(){d.addEventListener?(d.removeEventListener(\"DOMContentLoaded\",K),a.removeEventListener(\"load\",K)):(d.detachEvent(\"onreadystatechange\",K),a.detachEvent(\"onload\",K))}function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}n.ready.promise=function(b){if(!I)if(I=n.Deferred(),\"complete\"===d.readyState||\"loading\"!==d.readyState&&!d.documentElement.doScroll)a.setTimeout(n.ready);else if(d.addEventListener)d.addEventListener(\"DOMContentLoaded\",K),a.addEventListener(\"load\",K);else{d.attachEvent(\"onreadystatechange\",K),a.attachEvent(\"onload\",K);var c=!1;try{c=null==a.frameElement&&d.documentElement}catch(e){}c&&c.doScroll&&!function f(){if(!n.isReady){try{c.doScroll(\"left\")}catch(b){return a.setTimeout(f,50)}J(),n.ready()}}()}return I.promise(b)},n.ready.promise();var L;for(L in n(l))break;l.ownFirst=\"0\"===L,l.inlineBlockNeedsLayout=!1,n(function(){var a,b,c,e;c=d.getElementsByTagName(\"body\")[0],c&&c.style&&(b=d.createElement(\"div\"),e=d.createElement(\"div\"),e.style.cssText=\"position:absolute;border:0;width:0;height:0;top:0;left:-9999px\",c.appendChild(e).appendChild(b),\"undefined\"!=typeof b.style.zoom&&(b.style.cssText=\"display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1\",l.inlineBlockNeedsLayout=a=3===b.offsetWidth,a&&(c.style.zoom=1)),c.removeChild(e))}),function(){var a=d.createElement(\"div\");l.deleteExpando=!0;try{delete a.test}catch(b){l.deleteExpando=!1}a=null}();var M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b},N=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,O=/([A-Z])/g;function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}n.extend({cache:{},noData:{\"applet \":!0,\"embed \":!0,\"object \":\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"},hasData:function(a){return a=a.nodeType?n.cache[a[n.expando]]:a[n.expando],!!a&&!Q(a)},data:function(a,b,c){return R(a,b,c)},removeData:function(a,b){return S(a,b)},_data:function(a,b,c){return R(a,b,c,!0)},_removeData:function(a,b){return S(a,b,!0)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=n.data(f),1===f.nodeType&&!n._data(f,\"parsedAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));n._data(f,\"parsedAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){n.data(this,a)}):arguments.length>1?this.each(function(){n.data(this,a,b)}):f?P(f,a,n.data(f,a)):void 0},removeData:function(a){return this.each(function(){n.removeData(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=n._data(a,b),c&&(!d||n.isArray(c)?d=n._data(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return n._data(a,c)||n._data(a,c,{empty:n.Callbacks(\"once memory\").add(function(){n._removeData(a,b+\"queue\"),n._removeData(a,c)})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=n._data(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}}),function(){var a;l.shrinkWrapBlocks=function(){if(null!=a)return a;a=!1;var b,c,e;return c=d.getElementsByTagName(\"body\")[0],c&&c.style?(b=d.createElement(\"div\"),e=d.createElement(\"div\"),e.style.cssText=\"position:absolute;border:0;width:0;height:0;top:0;left:-9999px\",c.appendChild(e).appendChild(b),\"undefined\"!=typeof b.style.zoom&&(b.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1\",b.appendChild(d.createElement(\"div\")).style.width=\"5px\",a=3!==b.offsetWidth),c.removeChild(e),a):void 0}}();var T=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,U=new RegExp(\"^(?:([+-])=|)(\"+T+\")([a-z%]*)$\",\"i\"),V=[\"Top\",\"Right\",\"Bottom\",\"Left\"],W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)};function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},Z=/^(?:checkbox|radio)$/i,$=/<([\\w:-]+)/,_=/^$|\\/(?:java|ecma)script/i,aa=/^\\s+/,ba=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|dialog|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|picture|progress|section|summary|template|time|video\";function ca(a){var b=ba.split(\"|\"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}!function(){var a=d.createElement(\"div\"),b=d.createDocumentFragment(),c=d.createElement(\"input\");a.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",l.leadingWhitespace=3===a.firstChild.nodeType,l.tbody=!a.getElementsByTagName(\"tbody\").length,l.htmlSerialize=!!a.getElementsByTagName(\"link\").length,l.html5Clone=\"<:nav></:nav>\"!==d.createElement(\"nav\").cloneNode(!0).outerHTML,c.type=\"checkbox\",c.checked=!0,b.appendChild(c),l.appendChecked=c.checked,a.innerHTML=\"<textarea>x</textarea>\",l.noCloneChecked=!!a.cloneNode(!0).lastChild.defaultValue,b.appendChild(a),c=d.createElement(\"input\"),c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),a.appendChild(c),l.checkClone=a.cloneNode(!0).cloneNode(!0).lastChild.checked,l.noCloneEvent=!!a.addEventListener,a[n.expando]=1,l.attributes=!a.getAttribute(n.expando)}();var da={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],area:[1,\"<map>\",\"</map>\"],param:[1,\"<object>\",\"</object>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:l.htmlSerialize?[0,\"\",\"\"]:[1,\"X<div>\",\"</div>\"]};da.optgroup=da.option,da.tbody=da.tfoot=da.colgroup=da.caption=da.thead,da.th=da.td;function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}function fa(a,b){for(var c,d=0;null!=(c=a[d]);d++)n._data(c,\"globalEval\",!b||n._data(b[d],\"globalEval\"))}var ga=/<|&#?\\w+;/,ha=/<tbody/i;function ia(a){Z.test(a.type)&&(a.defaultChecked=a.checked)}function ja(a,b,c,d,e){for(var f,g,h,i,j,k,m,o=a.length,p=ca(b),q=[],r=0;o>r;r++)if(g=a[r],g||0===g)if(\"object\"===n.type(g))n.merge(q,g.nodeType?[g]:g);else if(ga.test(g)){i=i||p.appendChild(b.createElement(\"div\")),j=($.exec(g)||[\"\",\"\"])[1].toLowerCase(),m=da[j]||da._default,i.innerHTML=m[1]+n.htmlPrefilter(g)+m[2],f=m[0];while(f--)i=i.lastChild;if(!l.leadingWhitespace&&aa.test(g)&&q.push(b.createTextNode(aa.exec(g)[0])),!l.tbody){g=\"table\"!==j||ha.test(g)?\"<table>\"!==m[1]||ha.test(g)?0:i:i.firstChild,f=g&&g.childNodes.length;while(f--)n.nodeName(k=g.childNodes[f],\"tbody\")&&!k.childNodes.length&&g.removeChild(k)}n.merge(q,i.childNodes),i.textContent=\"\";while(i.firstChild)i.removeChild(i.firstChild);i=p.lastChild}else q.push(b.createTextNode(g));i&&p.removeChild(i),l.appendChecked||n.grep(ea(q,\"input\"),ia),r=0;while(g=q[r++])if(d&&n.inArray(g,d)>-1)e&&e.push(g);else if(h=n.contains(g.ownerDocument,g),i=ea(p.appendChild(g),\"script\"),h&&fa(i),c){f=0;while(g=i[f++])_.test(g.type||\"\")&&c.push(g)}return i=null,p}!function(){var b,c,e=d.createElement(\"div\");for(b in{submit:!0,change:!0,focusin:!0})c=\"on\"+b,(l[b]=c in a)||(e.setAttribute(c,\"t\"),l[b]=e.attributes[c].expando===!1);e=null}();var ka=/^(?:input|select|textarea)$/i,la=/^key/,ma=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,na=/^(?:focusinfocus|focusoutblur)$/,oa=/^([^.]*)(?:\\.(.+)|)/;function pa(){return!0}function qa(){return!1}function ra(){try{return d.activeElement}catch(a){}}function sa(a,b,c,d,e,f){var g,h;if(\"object\"==typeof b){\"string\"!=typeof c&&(d=d||c,c=void 0);for(h in b)sa(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&(\"string\"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=qa;else if(!e)return a;return 1===f&&(g=e,e=function(a){return n().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=n.guid++)),a.each(function(){n.event.add(this,b,e,d,c)})}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=n._data(a);if(r){c.handler&&(i=c,c=i.handler,e=i.selector),c.guid||(c.guid=n.guid++),(g=r.events)||(g=r.events={}),(k=r.handle)||(k=r.handle=function(a){return\"undefined\"==typeof n||a&&n.event.triggered===a.type?void 0:n.event.dispatch.apply(k.elem,arguments)},k.elem=a),b=(b||\"\").match(G)||[\"\"],h=b.length;while(h--)f=oa.exec(b[h])||[],o=q=f[1],p=(f[2]||\"\").split(\".\").sort(),o&&(j=n.event.special[o]||{},o=(e?j.delegateType:j.bindType)||o,j=n.event.special[o]||{},l=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},i),(m=g[o])||(m=g[o]=[],m.delegateCount=0,j.setup&&j.setup.call(a,d,p,k)!==!1||(a.addEventListener?a.addEventListener(o,k,!1):a.attachEvent&&a.attachEvent(\"on\"+o,k))),j.add&&(j.add.call(a,l),l.handler.guid||(l.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,l):m.push(l),n.event.global[o]=!0);a=null}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=n.hasData(a)&&n._data(a);if(r&&(k=r.events)){b=(b||\"\").match(G)||[\"\"],j=b.length;while(j--)if(h=oa.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=k[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),i=f=m.length;while(f--)g=m[f],!e&&q!==g.origType||c&&c.guid!==g.guid||h&&!h.test(g.namespace)||d&&d!==g.selector&&(\"**\"!==d||!g.selector)||(m.splice(f,1),g.selector&&m.delegateCount--,l.remove&&l.remove.call(a,g));i&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete k[o])}else for(o in k)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(k)&&(delete r.handle,n._removeData(a,\"events\"))}},trigger:function(b,c,e,f){var g,h,i,j,l,m,o,p=[e||d],q=k.call(b,\"type\")?b.type:b,r=k.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(i=m=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!na.test(q+n.event.triggered)&&(q.indexOf(\".\")>-1&&(r=q.split(\".\"),q=r.shift(),r.sort()),h=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=r.join(\".\"),b.rnamespace=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:n.makeArray(c,[b]),l=n.event.special[q]||{},f||!l.trigger||l.trigger.apply(e,c)!==!1)){if(!f&&!l.noBubble&&!n.isWindow(e)){for(j=l.delegateType||q,na.test(j+q)||(i=i.parentNode);i;i=i.parentNode)p.push(i),m=i;m===(e.ownerDocument||d)&&p.push(m.defaultView||m.parentWindow||a)}o=0;while((i=p[o++])&&!b.isPropagationStopped())b.type=o>1?j:l.bindType||q,g=(n._data(i,\"events\")||{})[b.type]&&n._data(i,\"handle\"),g&&g.apply(i,c),g=h&&i[h],g&&g.apply&&M(i)&&(b.result=g.apply(i,c),b.result===!1&&b.preventDefault());if(b.type=q,!f&&!b.isDefaultPrevented()&&(!l._default||l._default.apply(p.pop(),c)===!1)&&M(e)&&h&&e[q]&&!n.isWindow(e)){m=e[h],m&&(e[h]=null),n.event.triggered=q;try{e[q]()}catch(s){}n.event.triggered=void 0,m&&(e[h]=m)}return b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,d,f,g,h=[],i=e.call(arguments),j=(n._data(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())a.rnamespace&&!a.rnamespace.test(g.namespace)||(a.handleObj=g,a.data=g.data,d=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==d&&(a.result=d)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(\"click\"!==a.type||isNaN(a.button)||a.button<1))for(;i!=this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||\"click\"!==a.type)){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>-1:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},fix:function(a){if(a[n.expando])return a;var b,c,e,f=a.type,g=a,h=this.fixHooks[f];h||(this.fixHooks[f]=h=ma.test(f)?this.mouseHooks:la.test(f)?this.keyHooks:{}),e=h.props?this.props.concat(h.props):this.props,a=new n.Event(g),b=e.length;while(b--)c=e[b],a[c]=g[c];return a.target||(a.target=g.srcElement||d),3===a.target.nodeType&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,h.filter?h.filter(a,g):a},props:\"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,e,f,g=b.button,h=b.fromElement;return null==a.pageX&&null!=b.clientX&&(e=a.target.ownerDocument||d,f=e.documentElement,c=e.body,a.pageX=b.clientX+(f&&f.scrollLeft||c&&c.scrollLeft||0)-(f&&f.clientLeft||c&&c.clientLeft||0),a.pageY=b.clientY+(f&&f.scrollTop||c&&c.scrollTop||0)-(f&&f.clientTop||c&&c.clientTop||0)),!a.relatedTarget&&h&&(a.relatedTarget=h===a.target?b.toElement:h),a.which||void 0===g||(a.which=1&g?1:2&g?3:4&g?2:0),a}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==ra()&&this.focus)try{return this.focus(),!1}catch(a){}},delegateType:\"focusin\"},blur:{trigger:function(){return this===ra()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return n.nodeName(this,\"input\")&&\"checkbox\"===this.type&&this.click?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c){var d=n.extend(new n.Event,c,{type:a,isSimulated:!0});n.event.trigger(d,null,b),d.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=d.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)}:function(a,b,c){var d=\"on\"+b;a.detachEvent&&(\"undefined\"==typeof a[d]&&(a[d]=null),a.detachEvent(d,c))},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?pa:qa):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={constructor:n.Event,isDefaultPrevented:qa,isPropagationStopped:qa,isImmediatePropagationStopped:qa,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=pa,a&&(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=pa,a&&!this.isSimulated&&(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=pa,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||n.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),l.submit||(n.event.special.submit={setup:function(){return n.nodeName(this,\"form\")?!1:void n.event.add(this,\"click._submit keypress._submit\",function(a){var b=a.target,c=n.nodeName(b,\"input\")||n.nodeName(b,\"button\")?n.prop(b,\"form\"):void 0;c&&!n._data(c,\"submit\")&&(n.event.add(c,\"submit._submit\",function(a){a._submitBubble=!0}),n._data(c,\"submit\",!0))})},postDispatch:function(a){a._submitBubble&&(delete a._submitBubble,this.parentNode&&!a.isTrigger&&n.event.simulate(\"submit\",this.parentNode,a))},teardown:function(){return n.nodeName(this,\"form\")?!1:void n.event.remove(this,\"._submit\")}}),l.change||(n.event.special.change={setup:function(){return ka.test(this.nodeName)?(\"checkbox\"!==this.type&&\"radio\"!==this.type||(n.event.add(this,\"propertychange._change\",function(a){\"checked\"===a.originalEvent.propertyName&&(this._justChanged=!0)}),n.event.add(this,\"click._change\",function(a){this._justChanged&&!a.isTrigger&&(this._justChanged=!1),n.event.simulate(\"change\",this,a)})),!1):void n.event.add(this,\"beforeactivate._change\",function(a){var b=a.target;ka.test(b.nodeName)&&!n._data(b,\"change\")&&(n.event.add(b,\"change._change\",function(a){!this.parentNode||a.isSimulated||a.isTrigger||n.event.simulate(\"change\",this.parentNode,a)}),n._data(b,\"change\",!0))})},handle:function(a){var b=a.target;return this!==b||a.isSimulated||a.isTrigger||\"radio\"!==b.type&&\"checkbox\"!==b.type?a.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return n.event.remove(this,\"._change\"),!ka.test(this.nodeName)}}),l.focusin||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a))};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=n._data(d,b);e||d.addEventListener(a,c,!0),n._data(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=n._data(d,b)-1;e?n._data(d,b,e):(d.removeEventListener(a,c,!0),n._removeData(d,b))}}}),n.fn.extend({on:function(a,b,c,d){return sa(this,a,b,c,d)},one:function(a,b,c,d){return sa(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&\"function\"!=typeof b||(c=b,b=void 0),c===!1&&(c=qa),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ta=/ jQuery\\d+=\"(?:null|\\d+)\"/g,ua=new RegExp(\"<(?:\"+ba+\")[\\\\s/>]\",\"i\"),va=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,wa=/<script|<style|<link/i,xa=/checked\\s*(?:[^=]|=\\s*.checked.)/i,ya=/^true\\/(.*)/,za=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,Aa=ca(d),Ba=Aa.appendChild(d.createElement(\"div\"));function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}n.extend({htmlPrefilter:function(a){return a.replace(va,\"<$1></$2>\")},clone:function(a,b,c){var d,e,f,g,h,i=n.contains(a.ownerDocument,a);if(l.html5Clone||n.isXMLDoc(a)||!ua.test(\"<\"+a.nodeName+\">\")?f=a.cloneNode(!0):(Ba.innerHTML=a.outerHTML,Ba.removeChild(f=Ba.firstChild)),!(l.noCloneEvent&&l.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(d=ea(f),h=ea(a),g=0;null!=(e=h[g]);++g)d[g]&&Ga(e,d[g]);if(b)if(c)for(h=h||ea(a),d=d||ea(f),g=0;null!=(e=h[g]);g++)Fa(e,d[g]);else Fa(a,f);return d=ea(f,\"script\"),d.length>0&&fa(d,!i&&ea(a,\"script\")),d=h=e=null,f},cleanData:function(a,b){for(var d,e,f,g,h=0,i=n.expando,j=n.cache,k=l.attributes,m=n.event.special;null!=(d=a[h]);h++)if((b||M(d))&&(f=d[i],g=f&&j[f])){if(g.events)for(e in g.events)m[e]?n.event.remove(d,e):n.removeEvent(d,e,g.handle);j[f]&&(delete j[f],k||\"undefined\"==typeof d.removeAttribute?d[i]=void 0:d.removeAttribute(i),c.push(f))}}}),n.fn.extend({domManip:Ha,detach:function(a){return Ia(this,a,!0)},remove:function(a){return Ia(this,a)},text:function(a){return Y(this,function(a){return void 0===a?n.text(this):this.empty().append((this[0]&&this[0].ownerDocument||d).createTextNode(a))},null,a,arguments.length)},append:function(){return Ha(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ca(this,a);b.appendChild(a)}})},prepend:function(){return Ha(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ca(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ha(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ha(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++){1===a.nodeType&&n.cleanData(ea(a,!1));while(a.firstChild)a.removeChild(a.firstChild);a.options&&n.nodeName(a,\"select\")&&(a.options.length=0)}return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return Y(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a)return 1===b.nodeType?b.innerHTML.replace(ta,\"\"):void 0;if(\"string\"==typeof a&&!wa.test(a)&&(l.htmlSerialize||!ua.test(a))&&(l.leadingWhitespace||!aa.test(a))&&!da[($.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=n.htmlPrefilter(a);try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ea(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ha(this,arguments,function(b){var c=this.parentNode;n.inArray(this,a)<0&&(n.cleanData(ea(this)),c&&c.replaceChild(b,this))},a)}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=0,e=[],f=n(a),h=f.length-1;h>=d;d++)c=d===h?this:this.clone(!0),n(f[d])[b](c),g.apply(e,c.get());return this.pushStack(e)}});var Ja,Ka={HTML:\"block\",BODY:\"block\"};function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}var Na=/^margin/,Oa=new RegExp(\"^(\"+T+\")(?!px)[a-z%]+$\",\"i\"),Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e},Qa=d.documentElement;!function(){var b,c,e,f,g,h,i=d.createElement(\"div\"),j=d.createElement(\"div\");if(j.style){j.style.cssText=\"float:left;opacity:.5\",l.opacity=\"0.5\"===j.style.opacity,l.cssFloat=!!j.style.cssFloat,j.style.backgroundClip=\"content-box\",j.cloneNode(!0).style.backgroundClip=\"\",l.clearCloneStyle=\"content-box\"===j.style.backgroundClip,i=d.createElement(\"div\"),i.style.cssText=\"border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute\",j.innerHTML=\"\",i.appendChild(j),l.boxSizing=\"\"===j.style.boxSizing||\"\"===j.style.MozBoxSizing||\"\"===j.style.WebkitBoxSizing,n.extend(l,{reliableHiddenOffsets:function(){return null==b&&k(),f},boxSizingReliable:function(){return null==b&&k(),e},pixelMarginRight:function(){return null==b&&k(),c},pixelPosition:function(){return null==b&&k(),b},reliableMarginRight:function(){return null==b&&k(),g},reliableMarginLeft:function(){return null==b&&k(),h}});function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",j.childNodes[0].style.borderCollapse=\"separate\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}}}();var Ra,Sa,Ta=/^(top|right|bottom|left)$/;a.getComputedStyle?(Ra=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)},Sa=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ra(a),g=c?c.getPropertyValue(b)||c[b]:void 0,\"\"!==g&&void 0!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),c&&!l.pixelMarginRight()&&Oa.test(g)&&Na.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f),void 0===g?g:g+\"\"}):Qa.currentStyle&&(Ra=function(a){return a.currentStyle},Sa=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ra(a),g=c?c[b]:void 0,null==g&&h&&h[b]&&(g=h[b]),Oa.test(g)&&!Ta.test(b)&&(d=h.left,e=a.runtimeStyle,f=e&&e.left,f&&(e.left=a.currentStyle.left),h.left=\"fontSize\"===b?\"1em\":g,g=h.pixelLeft+\"px\",h.left=d,f&&(e.left=f)),void 0===g?g:g+\"\"||\"auto\"});function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Va=/alpha\\([^)]*\\)/i,Wa=/opacity\\s*=\\s*([^)]*)/i,Xa=/^(none|table(?!-c[ea]).+)/,Ya=new RegExp(\"^(\"+T+\")(.*)$\",\"i\"),Za={position:\"absolute\",visibility:\"hidden\",display:\"block\"},$a={letterSpacing:\"0\",fontWeight:\"400\"},_a=[\"Webkit\",\"O\",\"Moz\",\"ms\"],ab=d.createElement(\"div\").style;function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}function fb(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=Ra(a),g=l.boxSizing&&\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=Sa(a,b,f),(0>e||null==e)&&(e=a.style[b]),Oa.test(e))return e;d=g&&(l.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+eb(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Sa(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":l.cssFloat?\"cssFloat\":\"styleFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;if(b=n.cssProps[h]||(n.cssProps[h]=bb(h)||h),g=n.cssHooks[b]||n.cssHooks[h],void 0===c)return g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b];if(f=typeof c,\"string\"===f&&(e=U.exec(c))&&e[1]&&(c=X(a,b,e),f=\"number\"),null!=c&&c===c&&(\"number\"===f&&(c+=e&&e[3]||(n.cssNumber[h]?\"\":\"px\")),l.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),!(g&&\"set\"in g&&void 0===(c=g.set(a,c,d)))))try{i[b]=c}catch(j){}}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=bb(h)||h),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(f=g.get(a,!0,c)),void 0===f&&(f=Sa(a,b,d)),\"normal\"===f&&b in $a&&(f=$a[b]),\"\"===c||c?(e=parseFloat(f),c===!0||isFinite(e)?e||0:f):f}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?Xa.test(n.css(a,\"display\"))&&0===a.offsetWidth?Pa(a,Za,function(){return fb(a,b,d)}):fb(a,b,d):void 0},set:function(a,c,d){var e=d&&Ra(a);return db(a,c,d?eb(a,b,d,l.boxSizing&&\"border-box\"===n.css(a,\"boxSizing\",!1,e),e):0)}}}),l.opacity||(n.cssHooks.opacity={get:function(a,b){return Wa.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||\"\")?.01*parseFloat(RegExp.$1)+\"\":b?\"1\":\"\"},set:function(a,b){var c=a.style,d=a.currentStyle,e=n.isNumeric(b)?\"alpha(opacity=\"+100*b+\")\":\"\",f=d&&d.filter||c.filter||\"\";c.zoom=1,(b>=1||\"\"===b)&&\"\"===n.trim(f.replace(Va,\"\"))&&c.removeAttribute&&(c.removeAttribute(\"filter\"),\"\"===b||d&&!d.filter)||(c.filter=Va.test(f)?f.replace(Va,e):f+\" \"+e)}}),n.cssHooks.marginRight=Ua(l.reliableMarginRight,function(a,b){return b?Pa(a,{display:\"inline-block\"},Sa,[a,\"marginRight\"]):void 0}),n.cssHooks.marginLeft=Ua(l.reliableMarginLeft,function(a,b){return b?(parseFloat(Sa(a,\"marginLeft\"))||(n.contains(a.ownerDocument,a)?a.getBoundingClientRect().left-Pa(a,{\nmarginLeft:0},function(){return a.getBoundingClientRect().left}):0))+\"px\":void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+V[d]+b]=f[d]||f[d-2]||f[0];return e}},Na.test(a)||(n.cssHooks[a+b].set=db)}),n.fn.extend({css:function(a,b){return Y(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=Ra(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return cb(this,!0)},hide:function(){return cb(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){W(this)?n(this).show():n(this).hide()})}});function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}n.Tween=gb,gb.prototype={constructor:gb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||n.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=gb.propHooks[this.prop];return a&&a.get?a.get(this):gb.propHooks._default.get(this)},run:function(a){var b,c=gb.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):gb.propHooks._default.set(this),this}},gb.prototype.init.prototype=gb.prototype,gb.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0)},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[n.cssProps[a.prop]]&&!n.cssHooks[a.prop]?a.elem[a.prop]=a.now:n.style(a.elem,a.prop,a.now+a.unit)}}},gb.propHooks.scrollTop=gb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:\"swing\"},n.fx=gb.prototype.init,n.fx.step={};var hb,ib,jb=/^(?:toggle|show|hide)$/,kb=/queueHooks$/;function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(qb,{tweeners:{\"*\":[function(a,b){var c=this.createTween(a,b);return X(c.elem,a,U.exec(b),c),c}]},tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.match(G);for(var c,d=0,e=a.length;e>d;d++)c=a[d],qb.tweeners[c]=qb.tweeners[c]||[],qb.tweeners[c].unshift(b)},prefilters:[ob],prefilter:function(a,b){b?qb.prefilters.unshift(a):qb.prefilters.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,null!=d.queue&&d.queue!==!0||(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(W).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=qb(this,n.extend({},a),f);(e||n._data(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=n._data(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&kb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=n._data(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(mb(b,!0),a,d,e)}}),n.each({slideDown:mb(\"show\"),slideUp:mb(\"hide\"),slideToggle:mb(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=n.timers,c=0;for(hb=n.now();c<b.length;c++)a=b[c],a()||b[c]!==a||b.splice(c--,1);b.length||n.fx.stop(),hb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){ib||(ib=a.setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){a.clearInterval(ib),ib=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(b,c){return b=n.fx?n.fx.speeds[b]||b:b,c=c||\"fx\",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a,b=d.createElement(\"input\"),c=d.createElement(\"div\"),e=d.createElement(\"select\"),f=e.appendChild(d.createElement(\"option\"));c=d.createElement(\"div\"),c.setAttribute(\"className\",\"t\"),c.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",a=c.getElementsByTagName(\"a\")[0],b.setAttribute(\"type\",\"checkbox\"),c.appendChild(b),a=c.getElementsByTagName(\"a\")[0],a.style.cssText=\"top:1px\",l.getSetAttribute=\"t\"!==c.className,l.style=/top/.test(a.getAttribute(\"style\")),l.hrefNormalized=\"/a\"===a.getAttribute(\"href\"),l.checkOn=!!b.value,l.optSelected=f.selected,l.enctype=!!d.createElement(\"form\").enctype,e.disabled=!0,l.optDisabled=!f.disabled,b=d.createElement(\"input\"),b.setAttribute(\"value\",\"\"),l.input=\"\"===b.getAttribute(\"value\"),b.value=\"t\",b.setAttribute(\"type\",\"radio\"),l.radioValue=\"t\"===b.value}();var rb=/\\r/g,sb=/[\\x20\\t\\r\\n\\f]+/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(rb,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a)).replace(sb,\" \")}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],(c.selected||i===e)&&(l.optDisabled?!c.disabled:null===c.getAttribute(\"disabled\"))&&(!c.parentNode.disabled||!n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)if(d=e[g],n.inArray(n.valHooks.option.get(d),f)>-1)try{d.selected=c=!0}catch(h){d.scrollHeight}else d.selected=!1;return c||(a.selectedIndex=-1),e}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>-1:void 0}},l.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})});var tb,ub,vb=n.expr.attrHandle,wb=/^(?:checked|selected)$/i,xb=l.getSetAttribute,yb=l.input;n.fn.extend({attr:function(a,b){return Y(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return\"undefined\"==typeof a.getAttribute?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),e=n.attrHooks[b]||(n.expr.match.bool.test(b)?ub:tb)),void 0!==c?null===c?void n.removeAttr(a,b):e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+\"\"),c):e&&\"get\"in e&&null!==(d=e.get(a,b))?d:(d=n.find.attr(a,b),null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!l.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(G);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)?yb&&xb||!wb.test(c)?a[d]=!1:a[n.camelCase(\"default-\"+c)]=a[d]=!1:n.attr(a,c,\"\"),a.removeAttribute(xb?c:d)}}),ub={set:function(a,b,c){return b===!1?n.removeAttr(a,c):yb&&xb||!wb.test(c)?a.setAttribute(!xb&&n.propFix[c]||c,c):a[n.camelCase(\"default-\"+c)]=a[c]=!0,c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=vb[b]||n.find.attr;yb&&xb||!wb.test(b)?vb[b]=function(a,b,d){var e,f;return d||(f=vb[b],vb[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,vb[b]=f),e}:vb[b]=function(a,b,c){return c?void 0:a[n.camelCase(\"default-\"+b)]?b.toLowerCase():null}}),yb&&xb||(n.attrHooks.value={set:function(a,b,c){return n.nodeName(a,\"input\")?void(a.defaultValue=b):tb&&tb.set(a,b,c)}}),xb||(tb={set:function(a,b,c){var d=a.getAttributeNode(c);return d||a.setAttributeNode(d=a.ownerDocument.createAttribute(c)),d.value=b+=\"\",\"value\"===c||b===a.getAttribute(c)?b:void 0}},vb.id=vb.name=vb.coords=function(a,b,c){var d;return c?void 0:(d=a.getAttributeNode(b))&&\"\"!==d.value?d.value:null},n.valHooks.button={get:function(a,b){var c=a.getAttributeNode(b);return c&&c.specified?c.value:void 0},set:tb.set},n.attrHooks.contenteditable={set:function(a,b,c){tb.set(a,\"\"===b?!1:b,c)}},n.each([\"width\",\"height\"],function(a,b){n.attrHooks[b]={set:function(a,c){return\"\"===c?(a.setAttribute(b,\"auto\"),c):void 0}}})),l.style||(n.attrHooks.style={get:function(a){return a.style.cssText||void 0},set:function(a,b){return a.style.cssText=b+\"\"}});var zb=/^(?:input|select|textarea|button|object)$/i,Ab=/^(?:a|area)$/i;n.fn.extend({prop:function(a,b){return Y(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return a=n.propFix[a]||a,this.each(function(){try{this[a]=void 0,delete this[a]}catch(b){}})}}),n.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&n.isXMLDoc(a)||(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=n.find.attr(a,\"tabindex\");return b?parseInt(b,10):zb.test(a.nodeName)||Ab.test(a.nodeName)&&a.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),l.hrefNormalized||n.each([\"href\",\"src\"],function(a,b){n.propHooks[b]={get:function(a){return a.getAttribute(b,4)}}}),l.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this}),l.enctype||(n.propFix.enctype=\"encoding\");var Bb=/[\\t\\r\\n\\f]/g;function Cb(a){return n.attr(a,\"class\")||\"\"}n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,Cb(this)))});if(\"string\"==typeof a&&a){b=a.match(G)||[];while(c=this[i++])if(e=Cb(c),d=1===c.nodeType&&(\" \"+e+\" \").replace(Bb,\" \")){g=0;while(f=b[g++])d.indexOf(\" \"+f+\" \")<0&&(d+=f+\" \");h=n.trim(d),e!==h&&n.attr(c,\"class\",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,Cb(this)))});if(!arguments.length)return this.attr(\"class\",\"\");if(\"string\"==typeof a&&a){b=a.match(G)||[];while(c=this[i++])if(e=Cb(c),d=1===c.nodeType&&(\" \"+e+\" \").replace(Bb,\" \")){g=0;while(f=b[g++])while(d.indexOf(\" \"+f+\" \")>-1)d=d.replace(\" \"+f+\" \",\" \");h=n.trim(d),e!==h&&n.attr(c,\"class\",h)}}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):n.isFunction(a)?this.each(function(c){n(this).toggleClass(a.call(this,c,Cb(this),b),b)}):this.each(function(){var b,d,e,f;if(\"string\"===c){d=0,e=n(this),f=a.match(G)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&\"boolean\"!==c||(b=Cb(this),b&&n._data(this,\"__className__\",b),n.attr(this,\"class\",b||a===!1?\"\":n._data(this,\"__className__\")||\"\"))})},hasClass:function(a){var b,c,d=0;b=\" \"+a+\" \";while(c=this[d++])if(1===c.nodeType&&(\" \"+Cb(c)+\" \").replace(Bb,\" \").indexOf(b)>-1)return!0;return!1}}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var Db=a.location,Eb=n.now(),Fb=/\\?/,Gb=/(,)|(\\[|{)|(}|])|\"(?:[^\"\\\\\\r\\n]|\\\\[\"\\\\\\/bfnrt]|\\\\u[\\da-fA-F]{4})*\"\\s*:?|true|false|null|-?(?!0\\d)\\d+(?:\\.\\d+|)(?:[eE][+-]?\\d+|)/g;n.parseJSON=function(b){if(a.JSON&&a.JSON.parse)return a.JSON.parse(b+\"\");var c,d=null,e=n.trim(b+\"\");return e&&!n.trim(e.replace(Gb,function(a,b,e,f){return c&&b&&(d=0),0===d?a:(c=e||b,d+=!f-!e,\"\")}))?Function(\"return \"+e)():n.error(\"Invalid JSON: \"+b)},n.parseXML=function(b){var c,d;if(!b||\"string\"!=typeof b)return null;try{a.DOMParser?(d=new a.DOMParser,c=d.parseFromString(b,\"text/xml\")):(c=new a.ActiveXObject(\"Microsoft.XMLDOM\"),c.async=\"false\",c.loadXML(b))}catch(e){c=void 0}return c&&c.documentElement&&!c.getElementsByTagName(\"parsererror\").length||n.error(\"Invalid XML: \"+b),c};var Hb=/#.*$/,Ib=/([?&])_=[^&]*/,Jb=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/gm,Kb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Lb=/^(?:GET|HEAD)$/,Mb=/^\\/\\//,Nb=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,Ob={},Pb={},Qb=\"*/\".concat(\"*\"),Rb=Db.href,Sb=Nb.exec(Rb.toLowerCase())||[];function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Rb,type:\"GET\",isLocal:Kb.test(Sb[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Qb,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Vb(Vb(a,n.ajaxSettings),b):Vb(n.ajaxSettings,a)},ajaxPrefilter:Tb(Ob),ajaxTransport:Tb(Pb),ajax:function(b,c){\"object\"==typeof b&&(c=b,b=void 0),c=c||{};var d,e,f,g,h,i,j,k,l=n.ajaxSetup({},c),m=l.context||l,o=l.context&&(m.nodeType||m.jquery)?n(m):n.event,p=n.Deferred(),q=n.Callbacks(\"once memory\"),r=l.statusCode||{},s={},t={},u=0,v=\"canceled\",w={readyState:0,getResponseHeader:function(a){var b;if(2===u){if(!k){k={};while(b=Jb.exec(g))k[b[1].toLowerCase()]=b[2]}b=k[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===u?g:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return u||(a=t[c]=t[c]||a,s[a]=b),this},overrideMimeType:function(a){return u||(l.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>u)for(b in a)r[b]=[r[b],a[b]];else w.always(a[w.status]);return this},abort:function(a){var b=a||v;return j&&j.abort(b),y(0,b),this}};if(p.promise(w).complete=q.add,w.success=w.done,w.error=w.fail,l.url=((b||l.url||Rb)+\"\").replace(Hb,\"\").replace(Mb,Sb[1]+\"//\"),l.type=c.method||c.type||l.method||l.type,l.dataTypes=n.trim(l.dataType||\"*\").toLowerCase().match(G)||[\"\"],null==l.crossDomain&&(d=Nb.exec(l.url.toLowerCase()),l.crossDomain=!(!d||d[1]===Sb[1]&&d[2]===Sb[2]&&(d[3]||(\"http:\"===d[1]?\"80\":\"443\"))===(Sb[3]||(\"http:\"===Sb[1]?\"80\":\"443\")))),l.data&&l.processData&&\"string\"!=typeof l.data&&(l.data=n.param(l.data,l.traditional)),Ub(Ob,l,c,w),2===u)return w;i=n.event&&l.global,i&&0===n.active++&&n.event.trigger(\"ajaxStart\"),l.type=l.type.toUpperCase(),l.hasContent=!Lb.test(l.type),f=l.url,l.hasContent||(l.data&&(f=l.url+=(Fb.test(f)?\"&\":\"?\")+l.data,delete l.data),l.cache===!1&&(l.url=Ib.test(f)?f.replace(Ib,\"$1_=\"+Eb++):f+(Fb.test(f)?\"&\":\"?\")+\"_=\"+Eb++)),l.ifModified&&(n.lastModified[f]&&w.setRequestHeader(\"If-Modified-Since\",n.lastModified[f]),n.etag[f]&&w.setRequestHeader(\"If-None-Match\",n.etag[f])),(l.data&&l.hasContent&&l.contentType!==!1||c.contentType)&&w.setRequestHeader(\"Content-Type\",l.contentType),w.setRequestHeader(\"Accept\",l.dataTypes[0]&&l.accepts[l.dataTypes[0]]?l.accepts[l.dataTypes[0]]+(\"*\"!==l.dataTypes[0]?\", \"+Qb+\"; q=0.01\":\"\"):l.accepts[\"*\"]);for(e in l.headers)w.setRequestHeader(e,l.headers[e]);if(l.beforeSend&&(l.beforeSend.call(m,w,l)===!1||2===u))return w.abort();v=\"abort\";for(e in{success:1,error:1,complete:1})w[e](l[e]);if(j=Ub(Pb,l,c,w)){if(w.readyState=1,i&&o.trigger(\"ajaxSend\",[w,l]),2===u)return w;l.async&&l.timeout>0&&(h=a.setTimeout(function(){w.abort(\"timeout\")},l.timeout));try{u=1,j.send(s,y)}catch(x){if(!(2>u))throw x;y(-1,x)}}else y(-1,\"No Transport\");function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}return w},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax(n.extend({url:a,type:b,dataType:e,data:c,success:d},n.isPlainObject(a)&&a))}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",cache:!0,async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){if(n.isFunction(a))return this.each(function(b){n(this).wrapAll(a.call(this,b))});if(this[0]){var b=n(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&1===a.firstChild.nodeType)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return n.isFunction(a)?this.each(function(b){n(this).wrapInner(a.call(this,b))}):this.each(function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}});function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}function Zb(a){if(!n.contains(a.ownerDocument||d,a))return!0;while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}n.expr.filters.hidden=function(a){return l.reliableHiddenOffsets()?a.offsetWidth<=0&&a.offsetHeight<=0&&!a.getClientRects().length:Zb(a)},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var $b=/%20/g,_b=/\\[\\]$/,ac=/\\r?\\n/g,bc=/^(?:submit|button|image|reset|file)$/i,cc=/^(?:input|select|textarea|keygen)/i;function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)dc(c,a[c],b,e);return d.join(\"&\").replace($b,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&cc.test(this.nodeName)&&!bc.test(a)&&(this.checked||!Z.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(ac,\"\\r\\n\")}}):{name:b.name,value:c.replace(ac,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=void 0!==a.ActiveXObject?function(){return this.isLocal?ic():d.documentMode>8?hc():/^(get|post|head|put|delete|options)$/i.test(this.type)&&hc()||ic()}:hc;var ec=0,fc={},gc=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent(\"onunload\",function(){for(var a in fc)fc[a](void 0,!0)}),l.cors=!!gc&&\"withCredentials\"in gc,gc=l.ajax=!!gc,gc&&n.ajaxTransport(function(b){if(!b.crossDomain||l.cors){var c;return{send:function(d,e){var f,g=b.xhr(),h=++ec;if(g.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(f in b.xhrFields)g[f]=b.xhrFields[f];b.mimeType&&g.overrideMimeType&&g.overrideMimeType(b.mimeType),b.crossDomain||d[\"X-Requested-With\"]||(d[\"X-Requested-With\"]=\"XMLHttpRequest\");for(f in d)void 0!==d[f]&&g.setRequestHeader(f,d[f]+\"\");g.send(b.hasContent&&b.data||null),c=function(a,d){var f,i,j;if(c&&(d||4===g.readyState))if(delete fc[h],c=void 0,g.onreadystatechange=n.noop,d)4!==g.readyState&&g.abort();else{j={},f=g.status,\"string\"==typeof g.responseText&&(j.text=g.responseText);try{i=g.statusText}catch(k){i=\"\"}f||!b.isLocal||b.crossDomain?1223===f&&(f=204):f=j.text?200:404}j&&e(f,i,j,g.getAllResponseHeaders())},b.async?4===g.readyState?a.setTimeout(c):g.onreadystatechange=fc[h]=c:c()},abort:function(){c&&c(void 0,!0)}}}});function hc(){try{return new a.XMLHttpRequest}catch(b){}}function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\",a.global=!1)}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c=d.head||n(\"head\")[0]||d.documentElement;return{send:function(e,f){b=d.createElement(\"script\"),b.async=!0,a.scriptCharset&&(b.charset=a.scriptCharset),b.src=a.url,b.onload=b.onreadystatechange=function(a,c){(c||!b.readyState||/loaded|complete/.test(b.readyState))&&(b.onload=b.onreadystatechange=null,b.parentNode&&b.parentNode.removeChild(b),b=null,c||f(200,\"success\"))},c.insertBefore(b,c.firstChild)},abort:function(){b&&b.onload(void 0,!0)}}}});var jc=[],kc=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=jc.pop()||n.expando+\"_\"+Eb++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(kc.test(b.url)?\"url\":\"string\"==typeof b.data&&0===(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&kc.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(kc,\"$1\"+e):b.jsonp!==!1&&(b.url+=(Fb.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?n(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,jc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||d;var e=x.exec(a),f=!c&&[];return e?[b.createElement(e[1])]:(e=ja([a],b,f),f&&f.length&&n(f).remove(),n.merge([],e.childNodes))};var lc=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&lc)return lc.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>-1&&(d=n.trim(a.slice(h,a.length)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e||\"GET\",dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&n.inArray(\"auto\",[f,i])>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,n.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d={top:0,left:0},e=this[0],f=e&&e.ownerDocument;if(f)return b=f.documentElement,n.contains(b,e)?(\"undefined\"!=typeof e.getBoundingClientRect&&(d=e.getBoundingClientRect()),c=mc(f),{top:d.top+(c.pageYOffset||b.scrollTop)-(b.clientTop||0),left:d.left+(c.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}):d},position:function(){if(this[0]){var a,b,c={top:0,left:0},d=this[0];return\"fixed\"===n.css(d,\"position\")?b=d.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(c=a.offset()),c.top+=n.css(a[0],\"borderTopWidth\",!0),c.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-c.top-n.css(d,\"marginTop\",!0),left:b.left-c.left-n.css(d,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&!n.nodeName(a,\"html\")&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Qa})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(a,b){var c=/Y/.test(b);n.fn[a]=function(d){return Y(this,function(a,d,e){var f=mc(a);return void 0===e?f?b in f?f[b]:f.document.documentElement[d]:a[d]:void(f?f.scrollTo(c?n(f).scrollLeft():e,c?e:n(f).scrollTop()):a[d]=e)},a,d,arguments.length,null)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=Ua(l.pixelPosition,function(a,c){return c?(c=Sa(a,b),Oa.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({\npadding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return Y(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var nc=a.jQuery,oc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=oc),b&&a.jQuery===n&&(a.jQuery=nc),n},b||(a.jQuery=a.$=n),n});\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 97284
        },
        "cache": {},
        "timings": {
          "blocked": 3.2070002052933,
          "dns": -1,
          "connect": -1,
          "send": 0.08299993351102009,
          "wait": 2413.0499998573255,
          "receive": 55308.86400002054,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.166Z",
        "time": 90318.1170001626,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn7.www.st-hatena.com/js/jquery/jquery-ui.1.10.0.custom.min.js",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Thu, 12 Nov 2015 03:45:01 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"56440b3d-377bb\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "application/javascript"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 227259,
            "mimeType": "application/javascript",
            "text": "/*! jQuery UI - v1.10.0 - 2013-01-18\n* http://jqueryui.com\n* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.menu.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js, jquery.ui.effect.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js\n* Copyright (c) 2013 jQuery Foundation and other contributors Licensed MIT */\n\n(function(e,t){function i(t,n){var r,i,o,u=t.nodeName.toLowerCase();return\"area\"===u?(r=t.parentNode,i=r.name,!t.href||!i||r.nodeName.toLowerCase()!==\"map\"?!1:(o=e(\"img[usemap=#\"+i+\"]\")[0],!!o&&s(o))):(/input|select|textarea|button|object/.test(u)?!t.disabled:\"a\"===u?t.href||n:n)&&s(t)}function s(t){return e.expr.filters.visible(t)&&!e(t).parents().addBack().filter(function(){return e.css(this,\"visibility\")===\"hidden\"}).length}var n=0,r=/^ui-id-\\d+$/;e.ui=e.ui||{};if(e.ui.version)return;e.extend(e.ui,{version:\"1.10.0\",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,n){return typeof t==\"number\"?this.each(function(){var r=this;setTimeout(function(){e(r).focus(),n&&n.call(r)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return e.ui.ie&&/(static|relative)/.test(this.css(\"position\"))||/absolute/.test(this.css(\"position\"))?t=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,\"position\"))&&/(auto|scroll)/.test(e.css(this,\"overflow\")+e.css(this,\"overflow-y\")+e.css(this,\"overflow-x\"))}).eq(0):t=this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,\"overflow\")+e.css(this,\"overflow-y\")+e.css(this,\"overflow-x\"))}).eq(0),/fixed/.test(this.css(\"position\"))||!t.length?e(document):t},zIndex:function(n){if(n!==t)return this.css(\"zIndex\",n);if(this.length){var r=e(this[0]),i,s;while(r.length&&r[0]!==document){i=r.css(\"position\");if(i===\"absolute\"||i===\"relative\"||i===\"fixed\"){s=parseInt(r.css(\"zIndex\"),10);if(!isNaN(s)&&s!==0)return s}r=r.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id=\"ui-id-\"+ ++n)})},removeUniqueId:function(){return this.each(function(){r.test(this.id)&&e(this).removeAttr(\"id\")})}}),e.extend(e.expr[\":\"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(n){return!!e.data(n,t)}}):function(t,n,r){return!!e.data(t,r[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,\"tabindex\")))},tabbable:function(t){var n=e.attr(t,\"tabindex\"),r=isNaN(n);return(r||n>=0)&&i(t,!r)}}),e(\"<a>\").outerWidth(1).jquery||e.each([\"Width\",\"Height\"],function(n,r){function u(t,n,r,s){return e.each(i,function(){n-=parseFloat(e.css(t,\"padding\"+this))||0,r&&(n-=parseFloat(e.css(t,\"border\"+this+\"Width\"))||0),s&&(n-=parseFloat(e.css(t,\"margin\"+this))||0)}),n}var i=r===\"Width\"?[\"Left\",\"Right\"]:[\"Top\",\"Bottom\"],s=r.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn[\"inner\"+r]=function(n){return n===t?o[\"inner\"+r].call(this):this.each(function(){e(this).css(s,u(this,n)+\"px\")})},e.fn[\"outer\"+r]=function(t,n){return typeof t!=\"number\"?o[\"outer\"+r].call(this,t):this.each(function(){e(this).css(s,u(this,t,!0,n)+\"px\")})}}),e.fn.addBack||(e.fn.addBack=function(e){return this.add(e==null?this.prevObject:this.prevObject.filter(e))}),e(\"<a>\").data(\"a-b\",\"a\").removeData(\"a-b\").data(\"a-b\")&&(e.fn.removeData=function(t){return function(n){return arguments.length?t.call(this,e.camelCase(n)):t.call(this)}}(e.fn.removeData)),e.ui.ie=!!/msie [\\w.]+/.exec(navigator.userAgent.toLowerCase()),e.support.selectstart=\"onselectstart\"in document.createElement(\"div\"),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?\"selectstart\":\"mousedown\")+\".ui-disableSelection\",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(\".ui-disableSelection\")}}),e.extend(e.ui,{plugin:{add:function(t,n,r){var i,s=e.ui[t].prototype;for(i in r)s.plugins[i]=s.plugins[i]||[],s.plugins[i].push([n,r[i]])},call:function(e,t,n){var r,i=e.plugins[t];if(!i||!e.element[0].parentNode||e.element[0].parentNode.nodeType===11)return;for(r=0;r<i.length;r++)e.options[i[r][0]]&&i[r][1].apply(e.element,n)}},hasScroll:function(t,n){if(e(t).css(\"overflow\")===\"hidden\")return!1;var r=n&&n===\"left\"?\"scrollLeft\":\"scrollTop\",i=!1;return t[r]>0?!0:(t[r]=1,i=t[r]>0,t[r]=0,i)}})})(jQuery);(function(e,t){var n=0,r=Array.prototype.slice,i=e.cleanData;e.cleanData=function(t){for(var n=0,r;(r=t[n])!=null;n++)try{e(r).triggerHandler(\"remove\")}catch(s){}i(t)},e.widget=function(t,n,r){var i,s,o,u,a={},f=t.split(\".\")[0];t=t.split(\".\")[1],i=f+\"-\"+t,r||(r=n,n=e.Widget),e.expr[\":\"][i.toLowerCase()]=function(t){return!!e.data(t,i)},e[f]=e[f]||{},s=e[f][t],o=e[f][t]=function(e,t){if(!this._createWidget)return new o(e,t);arguments.length&&this._createWidget(e,t)},e.extend(o,s,{version:r.version,_proto:e.extend({},r),_childConstructors:[]}),u=new n,u.options=e.widget.extend({},u.options),e.each(r,function(t,r){if(!e.isFunction(r)){a[t]=r;return}a[t]=function(){var e=function(){return n.prototype[t].apply(this,arguments)},i=function(e){return n.prototype[t].apply(this,e)};return function(){var t=this._super,n=this._superApply,s;return this._super=e,this._superApply=i,s=r.apply(this,arguments),this._super=t,this._superApply=n,s}}()}),o.prototype=e.widget.extend(u,{widgetEventPrefix:s?u.widgetEventPrefix:t},a,{constructor:o,namespace:f,widgetName:t,widgetFullName:i}),s?(e.each(s._childConstructors,function(t,n){var r=n.prototype;e.widget(r.namespace+\".\"+r.widgetName,o,n._proto)}),delete s._childConstructors):n._childConstructors.push(o),e.widget.bridge(t,o)},e.widget.extend=function(n){var i=r.call(arguments,1),s=0,o=i.length,u,a;for(;s<o;s++)for(u in i[s])a=i[s][u],i[s].hasOwnProperty(u)&&a!==t&&(e.isPlainObject(a)?n[u]=e.isPlainObject(n[u])?e.widget.extend({},n[u],a):e.widget.extend({},a):n[u]=a);return n},e.widget.bridge=function(n,i){var s=i.prototype.widgetFullName||n;e.fn[n]=function(o){var u=typeof o==\"string\",a=r.call(arguments,1),f=this;return o=!u&&a.length?e.widget.extend.apply(null,[o].concat(a)):o,u?this.each(function(){var r,i=e.data(this,s);if(!i)return e.error(\"cannot call methods on \"+n+\" prior to initialization; \"+\"attempted to call method '\"+o+\"'\");if(!e.isFunction(i[o])||o.charAt(0)===\"_\")return e.error(\"no such method '\"+o+\"' for \"+n+\" widget instance\");r=i[o].apply(i,a);if(r!==i&&r!==t)return f=r&&r.jquery?f.pushStack(r.get()):r,!1}):this.each(function(){var t=e.data(this,s);t?t.option(o||{})._init():e.data(this,s,new i(o,this))}),f}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:\"widget\",widgetEventPrefix:\"\",defaultElement:\"<div>\",options:{disabled:!1,create:null},_createWidget:function(t,r){r=e(r||this.defaultElement||this)[0],this.element=e(r),this.uuid=n++,this.eventNamespace=\".\"+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),r!==this&&(e.data(r,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===r&&this.destroy()}}),this.document=e(r.style?r.ownerDocument:r.document||r),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger(\"create\",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr(\"aria-disabled\").removeClass(this.widgetFullName+\"-disabled \"+\"ui-state-disabled\"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass(\"ui-state-hover\"),this.focusable.removeClass(\"ui-state-focus\")},_destroy:e.noop,widget:function(){return this.element},option:function(n,r){var i=n,s,o,u;if(arguments.length===0)return e.widget.extend({},this.options);if(typeof n==\"string\"){i={},s=n.split(\".\"),n=s.shift();if(s.length){o=i[n]=e.widget.extend({},this.options[n]);for(u=0;u<s.length-1;u++)o[s[u]]=o[s[u]]||{},o=o[s[u]];n=s.pop();if(r===t)return o[n]===t?null:o[n];o[n]=r}else{if(r===t)return this.options[n]===t?null:this.options[n];i[n]=r}}return this._setOptions(i),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,e===\"disabled\"&&(this.widget().toggleClass(this.widgetFullName+\"-disabled ui-state-disabled\",!!t).attr(\"aria-disabled\",t),this.hoverable.removeClass(\"ui-state-hover\"),this.focusable.removeClass(\"ui-state-focus\")),this},enable:function(){return this._setOption(\"disabled\",!1)},disable:function(){return this._setOption(\"disabled\",!0)},_on:function(t,n,r){var i,s=this;typeof t!=\"boolean\"&&(r=n,n=t,t=!1),r?(n=i=e(n),this.bindings=this.bindings.add(n)):(r=n,n=this.element,i=this.widget()),e.each(r,function(r,o){function u(){if(!t&&(s.options.disabled===!0||e(this).hasClass(\"ui-state-disabled\")))return;return(typeof o==\"string\"?s[o]:o).apply(s,arguments)}typeof o!=\"string\"&&(u.guid=o.guid=o.guid||u.guid||e.guid++);var a=r.match(/^(\\w+)\\s*(.*)$/),f=a[1]+s.eventNamespace,l=a[2];l?i.delegate(l,f,u):n.bind(f,u)})},_off:function(e,t){t=(t||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function n(){return(typeof e==\"string\"?r[e]:e).apply(r,arguments)}var r=this;return setTimeout(n,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass(\"ui-state-hover\")},mouseleave:function(t){e(t.currentTarget).removeClass(\"ui-state-hover\")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass(\"ui-state-focus\")},focusout:function(t){e(t.currentTarget).removeClass(\"ui-state-focus\")}})},_trigger:function(t,n,r){var i,s,o=this.options[t];r=r||{},n=e.Event(n),n.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),n.target=this.element[0],s=n.originalEvent;if(s)for(i in s)i in n||(n[i]=s[i]);return this.element.trigger(n,r),!(e.isFunction(o)&&o.apply(this.element[0],[n].concat(r))===!1||n.isDefaultPrevented())}},e.each({show:\"fadeIn\",hide:\"fadeOut\"},function(t,n){e.Widget.prototype[\"_\"+t]=function(r,i,s){typeof i==\"string\"&&(i={effect:i});var o,u=i?i===!0||typeof i==\"number\"?n:i.effect||n:t;i=i||{},typeof i==\"number\"&&(i={duration:i}),o=!e.isEmptyObject(i),i.complete=s,i.delay&&r.delay(i.delay),o&&e.effects&&e.effects.effect[u]?r[t](i):u!==t&&r[u]?r[u](i.duration,i.easing,s):r.queue(function(n){e(this)[t](),s&&s.call(r[0]),n()})}})})(jQuery);(function(e,t){var n=!1;e(document).mouseup(function(){n=!1}),e.widget(\"ui.mouse\",{version:\"1.10.0\",options:{cancel:\"input,textarea,button,select,option\",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind(\"mousedown.\"+this.widgetName,function(e){return t._mouseDown(e)}).bind(\"click.\"+this.widgetName,function(n){if(!0===e.data(n.target,t.widgetName+\".preventClickEvent\"))return e.removeData(n.target,t.widgetName+\".preventClickEvent\"),n.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.unbind(\".\"+this.widgetName),this._mouseMoveDelegate&&e(document).unbind(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).unbind(\"mouseup.\"+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(n)return;this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var r=this,i=t.which===1,s=typeof this.options.cancel==\"string\"&&t.target.nodeName?e(t.target).closest(this.options.cancel).length:!1;if(!i||s||!this._mouseCapture(t))return!0;this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){r.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)){this._mouseStarted=this._mouseStart(t)!==!1;if(!this._mouseStarted)return t.preventDefault(),!0}return!0===e.data(t.target,this.widgetName+\".preventClickEvent\")&&e.removeData(t.target,this.widgetName+\".preventClickEvent\"),this._mouseMoveDelegate=function(e){return r._mouseMove(e)},this._mouseUpDelegate=function(e){return r._mouseUp(e)},e(document).bind(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).bind(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),t.preventDefault(),n=!0,!0},_mouseMove:function(t){return e.ui.ie&&(!document.documentMode||document.documentMode<9)&&!t.button?this._mouseUp(t):this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted)},_mouseUp:function(t){return e(document).unbind(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).unbind(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+\".preventClickEvent\",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})})(jQuery);(function(e,t){function h(e,t,n){return[parseInt(e[0],10)*(l.test(e[0])?t/100:1),parseInt(e[1],10)*(l.test(e[1])?n/100:1)]}function p(t,n){return parseInt(e.css(t,n),10)||0}function d(t){var n=t[0];return n.nodeType===9?{width:t.width(),height:t.height(),offset:{top:0,left:0}}:e.isWindow(n)?{width:t.width(),height:t.height(),offset:{top:t.scrollTop(),left:t.scrollLeft()}}:n.preventDefault?{width:0,height:0,offset:{top:n.pageY,left:n.pageX}}:{width:t.outerWidth(),height:t.outerHeight(),offset:t.offset()}}e.ui=e.ui||{};var n,r=Math.max,i=Math.abs,s=Math.round,o=/left|center|right/,u=/top|center|bottom/,a=/[\\+\\-]\\d+%?/,f=/^\\w+/,l=/%$/,c=e.fn.position;e.position={scrollbarWidth:function(){if(n!==t)return n;var r,i,s=e(\"<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>\"),o=s.children()[0];return e(\"body\").append(s),r=o.offsetWidth,s.css(\"overflow\",\"scroll\"),i=o.offsetWidth,r===i&&(i=s[0].clientWidth),s.remove(),n=r-i},getScrollInfo:function(t){var n=t.isWindow?\"\":t.element.css(\"overflow-x\"),r=t.isWindow?\"\":t.element.css(\"overflow-y\"),i=n===\"scroll\"||n===\"auto\"&&t.width<t.element[0].scrollWidth,s=r===\"scroll\"||r===\"auto\"&&t.height<t.element[0].scrollHeight;return{width:i?e.position.scrollbarWidth():0,height:s?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var n=e(t||window),r=e.isWindow(n[0]);return{element:n,isWindow:r,offset:n.offset()||{left:0,top:0},scrollLeft:n.scrollLeft(),scrollTop:n.scrollTop(),width:r?n.width():n.outerWidth(),height:r?n.height():n.outerHeight()}}},e.fn.position=function(t){if(!t||!t.of)return c.apply(this,arguments);t=e.extend({},t);var n,l,v,m,g,y,b=e(t.of),w=e.position.getWithinInfo(t.within),E=e.position.getScrollInfo(w),S=(t.collision||\"flip\").split(\" \"),x={};return y=d(b),b[0].preventDefault&&(t.at=\"left top\"),l=y.width,v=y.height,m=y.offset,g=e.extend({},m),e.each([\"my\",\"at\"],function(){var e=(t[this]||\"\").split(\" \"),n,r;e.length===1&&(e=o.test(e[0])?e.concat([\"center\"]):u.test(e[0])?[\"center\"].concat(e):[\"center\",\"center\"]),e[0]=o.test(e[0])?e[0]:\"center\",e[1]=u.test(e[1])?e[1]:\"center\",n=a.exec(e[0]),r=a.exec(e[1]),x[this]=[n?n[0]:0,r?r[0]:0],t[this]=[f.exec(e[0])[0],f.exec(e[1])[0]]}),S.length===1&&(S[1]=S[0]),t.at[0]===\"right\"?g.left+=l:t.at[0]===\"center\"&&(g.left+=l/2),t.at[1]===\"bottom\"?g.top+=v:t.at[1]===\"center\"&&(g.top+=v/2),n=h(x.at,l,v),g.left+=n[0],g.top+=n[1],this.each(function(){var o,u,a=e(this),f=a.outerWidth(),c=a.outerHeight(),d=p(this,\"marginLeft\"),y=p(this,\"marginTop\"),T=f+d+p(this,\"marginRight\")+E.width,N=c+y+p(this,\"marginBottom\")+E.height,C=e.extend({},g),k=h(x.my,a.outerWidth(),a.outerHeight());t.my[0]===\"right\"?C.left-=f:t.my[0]===\"center\"&&(C.left-=f/2),t.my[1]===\"bottom\"?C.top-=c:t.my[1]===\"center\"&&(C.top-=c/2),C.left+=k[0],C.top+=k[1],e.support.offsetFractions||(C.left=s(C.left),C.top=s(C.top)),o={marginLeft:d,marginTop:y},e.each([\"left\",\"top\"],function(r,i){e.ui.position[S[r]]&&e.ui.position[S[r]][i](C,{targetWidth:l,targetHeight:v,elemWidth:f,elemHeight:c,collisionPosition:o,collisionWidth:T,collisionHeight:N,offset:[n[0]+k[0],n[1]+k[1]],my:t.my,at:t.at,within:w,elem:a})}),t.using&&(u=function(e){var n=m.left-C.left,s=n+l-f,o=m.top-C.top,u=o+v-c,h={target:{element:b,left:m.left,top:m.top,width:l,height:v},element:{element:a,left:C.left,top:C.top,width:f,height:c},horizontal:s<0?\"left\":n>0?\"right\":\"center\",vertical:u<0?\"top\":o>0?\"bottom\":\"middle\"};l<f&&i(n+s)<l&&(h.horizontal=\"center\"),v<c&&i(o+u)<v&&(h.vertical=\"middle\"),r(i(n),i(s))>r(i(o),i(u))?h.important=\"horizontal\":h.important=\"vertical\",t.using.call(this,e,h)}),a.offset(e.extend(C,{using:u}))})},e.ui.position={fit:{left:function(e,t){var n=t.within,i=n.isWindow?n.scrollLeft:n.offset.left,s=n.width,o=e.left-t.collisionPosition.marginLeft,u=i-o,a=o+t.collisionWidth-s-i,f;t.collisionWidth>s?u>0&&a<=0?(f=e.left+u+t.collisionWidth-s-i,e.left+=u-f):a>0&&u<=0?e.left=i:u>a?e.left=i+s-t.collisionWidth:e.left=i:u>0?e.left+=u:a>0?e.left-=a:e.left=r(e.left-o,e.left)},top:function(e,t){var n=t.within,i=n.isWindow?n.scrollTop:n.offset.top,s=t.within.height,o=e.top-t.collisionPosition.marginTop,u=i-o,a=o+t.collisionHeight-s-i,f;t.collisionHeight>s?u>0&&a<=0?(f=e.top+u+t.collisionHeight-s-i,e.top+=u-f):a>0&&u<=0?e.top=i:u>a?e.top=i+s-t.collisionHeight:e.top=i:u>0?e.top+=u:a>0?e.top-=a:e.top=r(e.top-o,e.top)}},flip:{left:function(e,t){var n=t.within,r=n.offset.left+n.scrollLeft,s=n.width,o=n.isWindow?n.scrollLeft:n.offset.left,u=e.left-t.collisionPosition.marginLeft,a=u-o,f=u+t.collisionWidth-s-o,l=t.my[0]===\"left\"?-t.elemWidth:t.my[0]===\"right\"?t.elemWidth:0,c=t.at[0]===\"left\"?t.targetWidth:t.at[0]===\"right\"?-t.targetWidth:0,h=-2*t.offset[0],p,d;if(a<0){p=e.left+l+c+h+t.collisionWidth-s-r;if(p<0||p<i(a))e.left+=l+c+h}else if(f>0){d=e.left-t.collisionPosition.marginLeft+l+c+h-o;if(d>0||i(d)<f)e.left+=l+c+h}},top:function(e,t){var n=t.within,r=n.offset.top+n.scrollTop,s=n.height,o=n.isWindow?n.scrollTop:n.offset.top,u=e.top-t.collisionPosition.marginTop,a=u-o,f=u+t.collisionHeight-s-o,l=t.my[1]===\"top\",c=l?-t.elemHeight:t.my[1]===\"bottom\"?t.elemHeight:0,h=t.at[1]===\"top\"?t.targetHeight:t.at[1]===\"bottom\"?-t.targetHeight:0,p=-2*t.offset[1],d,v;a<0?(v=e.top+c+h+p+t.collisionHeight-s-r,e.top+c+h+p>a&&(v<0||v<i(a))&&(e.top+=c+h+p)):f>0&&(d=e.top-t.collisionPosition.marginTop+c+h+p-o,e.top+c+h+p>f&&(d>0||i(d)<f)&&(e.top+=c+h+p))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}},function(){var t,n,r,i,s,o=document.getElementsByTagName(\"body\")[0],u=document.createElement(\"div\");t=document.createElement(o?\"div\":\"body\"),r={visibility:\"hidden\",width:0,height:0,border:0,margin:0,background:\"none\"},o&&e.extend(r,{position:\"absolute\",left:\"-1000px\",top:\"-1000px\"});for(s in r)t.style[s]=r[s];t.appendChild(u),n=o||document.documentElement,n.insertBefore(t,n.firstChild),u.style.cssText=\"position: absolute; left: 10.7432222px;\",i=e(u).offset().left,e.support.offsetFractions=i>10&&i<11,t.innerHTML=\"\",n.removeChild(t)}()})(jQuery);(function(e,t){e.widget(\"ui.draggable\",e.ui.mouse,{version:\"1.10.0\",widgetEventPrefix:\"drag\",options:{addClasses:!0,appendTo:\"parent\",axis:!1,connectToSortable:!1,containment:!1,cursor:\"auto\",cursorAt:!1,grid:!1,handle:!1,helper:\"original\",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:\"default\",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:\"both\",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){this.options.helper===\"original\"&&!/^(?:r|a|f)/.test(this.element.css(\"position\"))&&(this.element[0].style.position=\"relative\"),this.options.addClasses&&this.element.addClass(\"ui-draggable\"),this.options.disabled&&this.element.addClass(\"ui-draggable-disabled\"),this._mouseInit()},_destroy:function(){this.element.removeClass(\"ui-draggable ui-draggable-dragging ui-draggable-disabled\"),this._mouseDestroy()},_mouseCapture:function(t){var n=this.options;return this.helper||n.disabled||e(t.target).closest(\".ui-resizable-handle\").length>0?!1:(this.handle=this._getHandle(t),this.handle?(e(n.iframeFix===!0?\"iframe\":n.iframeFix).each(function(){e(\"<div class='ui-draggable-iframeFix' style='background: #fff;'></div>\").css({width:this.offsetWidth+\"px\",height:this.offsetHeight+\"px\",position:\"absolute\",opacity:\"0.001\",zIndex:1e3}).css(e(this).offset()).appendTo(\"body\")}),!0):!1)},_mouseStart:function(t){var n=this.options;return this.helper=this._createHelper(t),this.helper.addClass(\"ui-draggable-dragging\"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css(\"position\"),this.scrollParent=this.helper.scrollParent(),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,n.cursorAt&&this._adjustOffsetFromHelper(n.cursorAt),n.containment&&this._setContainment(),this._trigger(\"start\",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!n.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_mouseDrag:function(t,n){this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo(\"absolute\");if(!n){var r=this._uiHash();if(this._trigger(\"drag\",t,r)===!1)return this._mouseUp({}),!1;this.position=r.position}if(!this.options.axis||this.options.axis!==\"y\")this.helper[0].style.left=this.position.left+\"px\";if(!this.options.axis||this.options.axis!==\"x\")this.helper[0].style.top=this.position.top+\"px\";return e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var n,r=this,i=!1,s=!1;e.ui.ddmanager&&!this.options.dropBehaviour&&(s=e.ui.ddmanager.drop(this,t)),this.dropped&&(s=this.dropped,this.dropped=!1),n=this.element[0];while(n&&(n=n.parentNode))n===document&&(i=!0);return!i&&this.options.helper===\"original\"?!1:(this.options.revert===\"invalid\"&&!s||this.options.revert===\"valid\"&&s||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,s)?e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){r._trigger(\"stop\",t)!==!1&&r._clear()}):this._trigger(\"stop\",t)!==!1&&this._clear(),!1)},_mouseUp:function(t){return e(\"div.ui-draggable-iframeFix\").each(function(){this.parentNode.removeChild(this)}),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(\".ui-draggable-dragging\")?this._mouseUp({}):this._clear(),this},_getHandle:function(t){var n=!this.options.handle||!e(this.options.handle,this.element).length?!0:!1;return e(this.options.handle,this.element).find(\"*\").addBack().each(function(){this===t.target&&(n=!0)}),n},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t])):n.helper===\"clone\"?this.element.clone().removeAttr(\"id\"):this.element;return r.parents(\"body\").length||r.appendTo(n.appendTo===\"parent\"?this.element[0].parentNode:n.appendTo),r[0]!==this.element[0]&&!/(fixed|absolute)/.test(r.css(\"position\"))&&r.css(\"position\",\"absolute\"),r},_adjustOffsetFromHelper:function(t){typeof t==\"string\"&&(t=t.split(\" \")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),\"left\"in t&&(this.offset.click.left=t.left+this.margins.left),\"right\"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),\"top\"in t&&(this.offset.click.top=t.top+this.margins.top),\"bottom\"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition===\"absolute\"&&this.scrollParent[0]!==document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()===\"html\"&&e.ui.ie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:t.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition===\"relative\"){var e=this.element.position();return{top:e.top-(parseInt(this.helper.css(\"top\"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css(\"left\"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css(\"marginLeft\"),10)||0,top:parseInt(this.element.css(\"marginTop\"),10)||0,right:parseInt(this.element.css(\"marginRight\"),10)||0,bottom:parseInt(this.element.css(\"marginBottom\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,n,r,i=this.options;i.containment===\"parent\"&&(i.containment=this.helper[0].parentNode);if(i.containment===\"document\"||i.containment===\"window\")this.containment=[i.containment===\"document\"?0:e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,i.containment===\"document\"?0:e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,(i.containment===\"document\"?0:e(window).scrollLeft())+e(i.containment===\"document\"?document:window).width()-this.helperProportions.width-this.margins.left,(i.containment===\"document\"?0:e(window).scrollTop())+(e(i.containment===\"document\"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(i.containment)&&i.containment.constructor!==Array){n=e(i.containment),r=n[0];if(!r)return;t=e(r).css(\"overflow\")!==\"hidden\",this.containment=[(parseInt(e(r).css(\"borderLeftWidth\"),10)||0)+(parseInt(e(r).css(\"paddingLeft\"),10)||0),(parseInt(e(r).css(\"borderTopWidth\"),10)||0)+(parseInt(e(r).css(\"paddingTop\"),10)||0),(t?Math.max(r.scrollWidth,r.offsetWidth):r.offsetWidth)-(parseInt(e(r).css(\"borderLeftWidth\"),10)||0)-(parseInt(e(r).css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(t?Math.max(r.scrollHeight,r.offsetHeight):r.offsetHeight)-(parseInt(e(r).css(\"borderTopWidth\"),10)||0)-(parseInt(e(r).css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=n}else i.containment.constructor===Array&&(this.containment=i.containment)},_convertPositionTo:function(t,n){n||(n=this.position);var r=t===\"absolute\"?1:-1,i=this.cssPosition!==\"absolute\"||this.scrollParent[0]!==document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,s=/(html|body)/i.test(i[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition===\"fixed\"?-this.scrollParent.scrollTop():s?0:i.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition===\"fixed\"?-this.scrollParent.scrollLeft():s?0:i.scrollLeft())*r}},_generatePosition:function(t){var n,r,i,s,o=this.options,u=this.cssPosition!==\"absolute\"||this.scrollParent[0]!==document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,a=/(html|body)/i.test(u[0].tagName),f=t.pageX,l=t.pageY;return this.originalPosition&&(this.containment&&(this.relative_container?(r=this.relative_container.offset(),n=[this.containment[0]+r.left,this.containment[1]+r.top,this.containment[2]+r.left,this.containment[3]+r.top]):n=this.containment,t.pageX-this.offset.click.left<n[0]&&(f=n[0]+this.offset.click.left),t.pageY-this.offset.click.top<n[1]&&(l=n[1]+this.offset.click.top),t.pageX-this.offset.click.left>n[2]&&(f=n[2]+this.offset.click.left),t.pageY-this.offset.click.top>n[3]&&(l=n[3]+this.offset.click.top)),o.grid&&(i=o.grid[1]?this.originalPageY+Math.round((l-this.originalPageY)/o.grid[1])*o.grid[1]:this.originalPageY,l=n?i-this.offset.click.top>=n[1]||i-this.offset.click.top>n[3]?i:i-this.offset.click.top>=n[1]?i-o.grid[1]:i+o.grid[1]:i,s=o.grid[0]?this.originalPageX+Math.round((f-this.originalPageX)/o.grid[0])*o.grid[0]:this.originalPageX,f=n?s-this.offset.click.left>=n[0]||s-this.offset.click.left>n[2]?s:s-this.offset.click.left>=n[0]?s-o.grid[0]:s+o.grid[0]:s)),{top:l-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition===\"fixed\"?-this.scrollParent.scrollTop():a?0:u.scrollTop()),left:f-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition===\"fixed\"?-this.scrollParent.scrollLeft():a?0:u.scrollLeft())}},_clear:function(){this.helper.removeClass(\"ui-draggable-dragging\"),this.helper[0]!==this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(t,n,r){return r=r||this._uiHash(),e.ui.plugin.call(this,t,[n,r]),t===\"drag\"&&(this.positionAbs=this._convertPositionTo(\"absolute\")),e.Widget.prototype._trigger.call(this,t,n,r)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add(\"draggable\",\"connectToSortable\",{start:function(t,n){var r=e(this).data(\"ui-draggable\"),i=r.options,s=e.extend({},n,{item:r.element});r.sortables=[],e(i.connectToSortable).each(function(){var n=e.data(this,\"ui-sortable\");n&&!n.options.disabled&&(r.sortables.push({instance:n,shouldRevert:n.options.revert}),n.refreshPositions(),n._trigger(\"activate\",t,s))})},stop:function(t,n){var r=e(this).data(\"ui-draggable\"),i=e.extend({},n,{item:r.element});e.each(r.sortables,function(){this.instance.isOver?(this.instance.isOver=0,r.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=!0),this.instance._mouseStop(t),this.instance.options.helper=this.instance.options._helper,r.options.helper===\"original\"&&this.instance.currentItem.css({top:\"auto\",left:\"auto\"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger(\"deactivate\",t,i))})},drag:function(t,n){var r=e(this).data(\"ui-draggable\"),i=this;e.each(r.sortables,function(){var s=!1,o=this;this.instance.positionAbs=r.positionAbs,this.instance.helperProportions=r.helperProportions,this.instance.offset.click=r.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(s=!0,e.each(r.sortables,function(){return this.instance.positionAbs=r.positionAbs,this.instance.helperProportions=r.helperProportions,this.instance.offset.click=r.offset.click,this!==o&&this.instance._intersectsWith(this.instance.containerCache)&&e.ui.contains(o.instance.element[0],this.instance.element[0])&&(s=!1),s})),s?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=e(i).clone().removeAttr(\"id\").appendTo(this.instance.element).data(\"ui-sortable-item\",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return n.helper[0]},t.target=this.instance.currentItem[0],this.instance._mouseCapture(t,!0),this.instance._mouseStart(t,!0,!0),this.instance.offset.click.top=r.offset.click.top,this.instance.offset.click.left=r.offset.click.left,this.instance.offset.parent.left-=r.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=r.offset.parent.top-this.instance.offset.parent.top,r._trigger(\"toSortable\",t),r.dropped=this.instance.element,r.currentItem=r.element,this.instance.fromOutside=r),this.instance.currentItem&&this.instance._mouseDrag(t)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger(\"out\",t,this.instance._uiHash(this.instance)),this.instance._mouseStop(t,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),r._trigger(\"fromSortable\",t),r.dropped=!1)})}}),e.ui.plugin.add(\"draggable\",\"cursor\",{start:function(){var t=e(\"body\"),n=e(this).data(\"ui-draggable\").options;t.css(\"cursor\")&&(n._cursor=t.css(\"cursor\")),t.css(\"cursor\",n.cursor)},stop:function(){var t=e(this).data(\"ui-draggable\").options;t._cursor&&e(\"body\").css(\"cursor\",t._cursor)}}),e.ui.plugin.add(\"draggable\",\"opacity\",{start:function(t,n){var r=e(n.helper),i=e(this).data(\"ui-draggable\").options;r.css(\"opacity\")&&(i._opacity=r.css(\"opacity\")),r.css(\"opacity\",i.opacity)},stop:function(t,n){var r=e(this).data(\"ui-draggable\").options;r._opacity&&e(n.helper).css(\"opacity\",r._opacity)}}),e.ui.plugin.add(\"draggable\",\"scroll\",{start:function(){var t=e(this).data(\"ui-draggable\");t.scrollParent[0]!==document&&t.scrollParent[0].tagName!==\"HTML\"&&(t.overflowOffset=t.scrollParent.offset())},drag:function(t){var n=e(this).data(\"ui-draggable\"),r=n.options,i=!1;if(n.scrollParent[0]!==document&&n.scrollParent[0].tagName!==\"HTML\"){if(!r.axis||r.axis!==\"x\")n.overflowOffset.top+n.scrollParent[0].offsetHeight-t.pageY<r.scrollSensitivity?n.scrollParent[0].scrollTop=i=n.scrollParent[0].scrollTop+r.scrollSpeed:t.pageY-n.overflowOffset.top<r.scrollSensitivity&&(n.scrollParent[0].scrollTop=i=n.scrollParent[0].scrollTop-r.scrollSpeed);if(!r.axis||r.axis!==\"y\")n.overflowOffset.left+n.scrollParent[0].offsetWidth-t.pageX<r.scrollSensitivity?n.scrollParent[0].scrollLeft=i=n.scrollParent[0].scrollLeft+r.scrollSpeed:t.pageX-n.overflowOffset.left<r.scrollSensitivity&&(n.scrollParent[0].scrollLeft=i=n.scrollParent[0].scrollLeft-r.scrollSpeed)}else{if(!r.axis||r.axis!==\"x\")t.pageY-e(document).scrollTop()<r.scrollSensitivity?i=e(document).scrollTop(e(document).scrollTop()-r.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<r.scrollSensitivity&&(i=e(document).scrollTop(e(document).scrollTop()+r.scrollSpeed));if(!r.axis||r.axis!==\"y\")t.pageX-e(document).scrollLeft()<r.scrollSensitivity?i=e(document).scrollLeft(e(document).scrollLeft()-r.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<r.scrollSensitivity&&(i=e(document).scrollLeft(e(document).scrollLeft()+r.scrollSpeed))}i!==!1&&e.ui.ddmanager&&!r.dropBehaviour&&e.ui.ddmanager.prepareOffsets(n,t)}}),e.ui.plugin.add(\"draggable\",\"snap\",{start:function(){var t=e(this).data(\"ui-draggable\"),n=t.options;t.snapElements=[],e(n.snap.constructor!==String?n.snap.items||\":data(ui-draggable)\":n.snap).each(function(){var n=e(this),r=n.offset();this!==t.element[0]&&t.snapElements.push({item:this,width:n.outerWidth(),height:n.outerHeight(),top:r.top,left:r.left})})},drag:function(t,n){var r,i,s,o,u,a,f,l,c,h,p=e(this).data(\"ui-draggable\"),d=p.options,v=d.snapTolerance,m=n.offset.left,g=m+p.helperProportions.width,y=n.offset.top,b=y+p.helperProportions.height;for(c=p.snapElements.length-1;c>=0;c--){u=p.snapElements[c].left,a=u+p.snapElements[c].width,f=p.snapElements[c].top,l=f+p.snapElements[c].height;if(!(u-v<m&&m<a+v&&f-v<y&&y<l+v||u-v<m&&m<a+v&&f-v<b&&b<l+v||u-v<g&&g<a+v&&f-v<y&&y<l+v||u-v<g&&g<a+v&&f-v<b&&b<l+v)){p.snapElements[c].snapping&&p.options.snap.release&&p.options.snap.release.call(p.element,t,e.extend(p._uiHash(),{snapItem:p.snapElements[c].item})),p.snapElements[c].snapping=!1;continue}d.snapMode!==\"inner\"&&(r=Math.abs(f-b)<=v,i=Math.abs(l-y)<=v,s=Math.abs(u-g)<=v,o=Math.abs(a-m)<=v,r&&(n.position.top=p._convertPositionTo(\"relative\",{top:f-p.helperProportions.height,left:0}).top-p.margins.top),i&&(n.position.top=p._convertPositionTo(\"relative\",{top:l,left:0}).top-p.margins.top),s&&(n.position.left=p._convertPositionTo(\"relative\",{top:0,left:u-p.helperProportions.width}).left-p.margins.left),o&&(n.position.left=p._convertPositionTo(\"relative\",{top:0,left:a}).left-p.margins.left)),h=r||i||s||o,d.snapMode!==\"outer\"&&(r=Math.abs(f-y)<=v,i=Math.abs(l-b)<=v,s=Math.abs(u-m)<=v,o=Math.abs(a-g)<=v,r&&(n.position.top=p._convertPositionTo(\"relative\",{top:f,left:0}).top-p.margins.top),i&&(n.position.top=p._convertPositionTo(\"relative\",{top:l-p.helperProportions.height,left:0}).top-p.margins.top),s&&(n.position.left=p._convertPositionTo(\"relative\",{top:0,left:u}).left-p.margins.left),o&&(n.position.left=p._convertPositionTo(\"relative\",{top:0,left:a-p.helperProportions.width}).left-p.margins.left)),!p.snapElements[c].snapping&&(r||i||s||o||h)&&p.options.snap.snap&&p.options.snap.snap.call(p.element,t,e.extend(p._uiHash(),{snapItem:p.snapElements[c].item})),p.snapElements[c].snapping=r||i||s||o||h}}}),e.ui.plugin.add(\"draggable\",\"stack\",{start:function(){var t,n=e(this).data(\"ui-draggable\").options,r=e.makeArray(e(n.stack)).sort(function(t,n){return(parseInt(e(t).css(\"zIndex\"),10)||0)-(parseInt(e(n).css(\"zIndex\"),10)||0)});if(!r.length)return;t=parseInt(r[0].style.zIndex,10)||0,e(r).each(function(e){this.style.zIndex=t+e}),this[0].style.zIndex=t+r.length}}),e.ui.plugin.add(\"draggable\",\"zIndex\",{start:function(t,n){var r=e(n.helper),i=e(this).data(\"ui-draggable\").options;r.css(\"zIndex\")&&(i._zIndex=r.css(\"zIndex\")),r.css(\"zIndex\",i.zIndex)},stop:function(t,n){var r=e(this).data(\"ui-draggable\").options;r._zIndex&&e(n.helper).css(\"zIndex\",r._zIndex)}})})(jQuery);(function(e,t){function n(e,t,n){return e>t&&e<t+n}e.widget(\"ui.droppable\",{version:\"1.10.0\",widgetEventPrefix:\"drop\",options:{accept:\"*\",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:\"default\",tolerance:\"intersect\",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var t=this.options,n=t.accept;this.isover=!1,this.isout=!0,this.accept=e.isFunction(n)?n:function(e){return e.is(n)},this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight},e.ui.ddmanager.droppables[t.scope]=e.ui.ddmanager.droppables[t.scope]||[],e.ui.ddmanager.droppables[t.scope].push(this),t.addClasses&&this.element.addClass(\"ui-droppable\")},_destroy:function(){var t=0,n=e.ui.ddmanager.droppables[this.options.scope];for(;t<n.length;t++)n[t]===this&&n.splice(t,1);this.element.removeClass(\"ui-droppable ui-droppable-disabled\")},_setOption:function(t,n){t===\"accept\"&&(this.accept=e.isFunction(n)?n:function(e){return e.is(n)}),e.Widget.prototype._setOption.apply(this,arguments)},_activate:function(t){var n=e.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),n&&this._trigger(\"activate\",t,this.ui(n))},_deactivate:function(t){var n=e.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),n&&this._trigger(\"deactivate\",t,this.ui(n))},_over:function(t){var n=e.ui.ddmanager.current;if(!n||(n.currentItem||n.element)[0]===this.element[0])return;this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger(\"over\",t,this.ui(n)))},_out:function(t){var n=e.ui.ddmanager.current;if(!n||(n.currentItem||n.element)[0]===this.element[0])return;this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger(\"out\",t,this.ui(n)))},_drop:function(t,n){var r=n||e.ui.ddmanager.current,i=!1;return!r||(r.currentItem||r.element)[0]===this.element[0]?!1:(this.element.find(\":data(ui-droppable)\").not(\".ui-draggable-dragging\").each(function(){var t=e.data(this,\"ui-droppable\");if(t.options.greedy&&!t.options.disabled&&t.options.scope===r.options.scope&&t.accept.call(t.element[0],r.currentItem||r.element)&&e.ui.intersect(r,e.extend(t,{offset:t.element.offset()}),t.options.tolerance))return i=!0,!1}),i?!1:this.accept.call(this.element[0],r.currentItem||r.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger(\"drop\",t,this.ui(r)),this.element):!1)},ui:function(e){return{draggable:e.currentItem||e.element,helper:e.helper,position:e.position,offset:e.positionAbs}}}),e.ui.intersect=function(e,t,r){if(!t.offset)return!1;var i,s,o=(e.positionAbs||e.position.absolute).left,u=o+e.helperProportions.width,a=(e.positionAbs||e.position.absolute).top,f=a+e.helperProportions.height,l=t.offset.left,c=l+t.proportions.width,h=t.offset.top,p=h+t.proportions.height;switch(r){case\"fit\":return l<=o&&u<=c&&h<=a&&f<=p;case\"intersect\":return l<o+e.helperProportions.width/2&&u-e.helperProportions.width/2<c&&h<a+e.helperProportions.height/2&&f-e.helperProportions.height/2<p;case\"pointer\":return i=(e.positionAbs||e.position.absolute).left+(e.clickOffset||e.offset.click).left,s=(e.positionAbs||e.position.absolute).top+(e.clickOffset||e.offset.click).top,n(s,h,t.proportions.height)&&n(i,l,t.proportions.width);case\"touch\":return(a>=h&&a<=p||f>=h&&f<=p||a<h&&f>p)&&(o>=l&&o<=c||u>=l&&u<=c||o<l&&u>c);default:return!1}},e.ui.ddmanager={current:null,droppables:{\"default\":[]},prepareOffsets:function(t,n){var r,i,s=e.ui.ddmanager.droppables[t.options.scope]||[],o=n?n.type:null,u=(t.currentItem||t.element).find(\":data(ui-droppable)\").addBack();e:for(r=0;r<s.length;r++){if(s[r].options.disabled||t&&!s[r].accept.call(s[r].element[0],t.currentItem||t.element))continue;for(i=0;i<u.length;i++)if(u[i]===s[r].element[0]){s[r].proportions.height=0;continue e}s[r].visible=s[r].element.css(\"display\")!==\"none\";if(!s[r].visible)continue;o===\"mousedown\"&&s[r]._activate.call(s[r],n),s[r].offset=s[r].element.offset(),s[r].proportions={width:s[r].element[0].offsetWidth,height:s[r].element[0].offsetHeight}}},drop:function(t,n){var r=!1;return e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(!this.options)return;!this.options.disabled&&this.visible&&e.ui.intersect(t,this,this.options.tolerance)&&(r=this._drop.call(this,n)||r),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],t.currentItem||t.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,n))}),r},dragStart:function(t,n){t.element.parentsUntil(\"body\").bind(\"scroll.droppable\",function(){t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,n)})},drag:function(t,n){t.options.refreshPositions&&e.ui.ddmanager.prepareOffsets(t,n),e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(this.options.disabled||this.greedyChild||!this.visible)return;var r,i,s,o=e.ui.intersect(t,this,this.options.tolerance),u=!o&&this.isover?\"isout\":o&&!this.isover?\"isover\":null;if(!u)return;this.options.greedy&&(i=this.options.scope,s=this.element.parents(\":data(ui-droppable)\").filter(function(){return e.data(this,\"ui-droppable\").options.scope===i}),s.length&&(r=e.data(s[0],\"ui-droppable\"),r.greedyChild=u===\"isover\")),r&&u===\"isover\"&&(r.isover=!1,r.isout=!0,r._out.call(r,n)),this[u]=!0,this[u===\"isout\"?\"isover\":\"isout\"]=!1,this[u===\"isover\"?\"_over\":\"_out\"].call(this,n),r&&u===\"isout\"&&(r.isout=!1,r.isover=!0,r._over.call(r,n))})},dragStop:function(t,n){t.element.parentsUntil(\"body\").unbind(\"scroll.droppable\"),t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,n)}}})(jQuery);(function(e,t){function n(e){return parseInt(e,10)||0}function r(e){return!isNaN(parseInt(e,10))}e.widget(\"ui.resizable\",e.ui.mouse,{version:\"1.10.0\",widgetEventPrefix:\"resize\",options:{alsoResize:!1,animate:!1,animateDuration:\"slow\",animateEasing:\"swing\",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:\"e,s,se\",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_create:function(){var t,n,r,i,s,o=this,u=this.options;this.element.addClass(\"ui-resizable\"),e.extend(this,{_aspectRatio:!!u.aspectRatio,aspectRatio:u.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:u.helper||u.ghost||u.animate?u.helper||\"ui-resizable-helper\":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(e(\"<div class='ui-wrapper' style='overflow: hidden;'></div>\").css({position:this.element.css(\"position\"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css(\"top\"),left:this.element.css(\"left\")})),this.element=this.element.parent().data(\"ui-resizable\",this.element.data(\"ui-resizable\")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css(\"marginLeft\"),marginTop:this.originalElement.css(\"marginTop\"),marginRight:this.originalElement.css(\"marginRight\"),marginBottom:this.originalElement.css(\"marginBottom\")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css(\"resize\"),this.originalElement.css(\"resize\",\"none\"),this._proportionallyResizeElements.push(this.originalElement.css({position:\"static\",zoom:1,display:\"block\"})),this.originalElement.css({margin:this.originalElement.css(\"margin\")}),this._proportionallyResize()),this.handles=u.handles||(e(\".ui-resizable-handle\",this.element).length?{n:\".ui-resizable-n\",e:\".ui-resizable-e\",s:\".ui-resizable-s\",w:\".ui-resizable-w\",se:\".ui-resizable-se\",sw:\".ui-resizable-sw\",ne:\".ui-resizable-ne\",nw:\".ui-resizable-nw\"}:\"e,s,se\");if(this.handles.constructor===String){this.handles===\"all\"&&(this.handles=\"n,e,s,w,se,sw,ne,nw\"),t=this.handles.split(\",\"),this.handles={};for(n=0;n<t.length;n++)r=e.trim(t[n]),s=\"ui-resizable-\"+r,i=e(\"<div class='ui-resizable-handle \"+s+\"'></div>\"),i.css({zIndex:u.zIndex}),\"se\"===r&&i.addClass(\"ui-icon ui-icon-gripsmall-diagonal-se\"),this.handles[r]=\".ui-resizable-\"+r,this.element.append(i)}this._renderAxis=function(t){var n,r,i,s;t=t||this.element;for(n in this.handles){this.handles[n].constructor===String&&(this.handles[n]=e(this.handles[n],this.element).show()),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)&&(r=e(this.handles[n],this.element),s=/sw|ne|nw|se|n|s/.test(n)?r.outerHeight():r.outerWidth(),i=[\"padding\",/ne|nw|n/.test(n)?\"Top\":/se|sw|s/.test(n)?\"Bottom\":/^e$/.test(n)?\"Right\":\"Left\"].join(\"\"),t.css(i,s),this._proportionallyResize());if(!e(this.handles[n]).length)continue}},this._renderAxis(this.element),this._handles=e(\".ui-resizable-handle\",this.element).disableSelection(),this._handles.mouseover(function(){o.resizing||(this.className&&(i=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),o.axis=i&&i[1]?i[1]:\"se\")}),u.autoHide&&(this._handles.hide(),e(this.element).addClass(\"ui-resizable-autohide\").mouseenter(function(){if(u.disabled)return;e(this).removeClass(\"ui-resizable-autohide\"),o._handles.show()}).mouseleave(function(){if(u.disabled)return;o.resizing||(e(this).addClass(\"ui-resizable-autohide\"),o._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t,n=function(t){e(t).removeClass(\"ui-resizable ui-resizable-disabled ui-resizable-resizing\").removeData(\"resizable\").removeData(\"ui-resizable\").unbind(\".resizable\").find(\".ui-resizable-handle\").remove()};return this.elementIsWrapper&&(n(this.element),t=this.element,this.originalElement.css({position:t.css(\"position\"),width:t.outerWidth(),height:t.outerHeight(),top:t.css(\"top\"),left:t.css(\"left\")}).insertAfter(t),t.remove()),this.originalElement.css(\"resize\",this.originalResizeStyle),n(this.originalElement),this},_mouseCapture:function(t){var n,r,i=!1;for(n in this.handles){r=e(this.handles[n])[0];if(r===t.target||e.contains(r,t.target))i=!0}return!this.options.disabled&&i},_mouseStart:function(t){var r,i,s,o=this.options,u=this.element.position(),a=this.element;return this.resizing=!0,/absolute/.test(a.css(\"position\"))?a.css({position:\"absolute\",top:a.css(\"top\"),left:a.css(\"left\")}):a.is(\".ui-draggable\")&&a.css({position:\"absolute\",top:u.top,left:u.left}),this._renderProxy(),r=n(this.helper.css(\"left\")),i=n(this.helper.css(\"top\")),o.containment&&(r+=e(o.containment).scrollLeft()||0,i+=e(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:r,top:i},this.size=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.originalSize=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.originalPosition={left:r,top:i},this.sizeDiff={width:a.outerWidth()-a.width(),height:a.outerHeight()-a.height()},this.originalMousePosition={left:t.pageX,top:t.pageY},this.aspectRatio=typeof o.aspectRatio==\"number\"?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,s=e(\".ui-resizable-\"+this.axis).css(\"cursor\"),e(\"body\").css(\"cursor\",s===\"auto\"?this.axis+\"-resize\":s),a.addClass(\"ui-resizable-resizing\"),this._propagate(\"start\",t),!0},_mouseDrag:function(t){var n,r=this.helper,i={},s=this.originalMousePosition,o=this.axis,u=this.position.top,a=this.position.left,f=this.size.width,l=this.size.height,c=t.pageX-s.left||0,h=t.pageY-s.top||0,p=this._change[o];if(!p)return!1;n=p.apply(this,[t,c,h]),this._updateVirtualBoundaries(t.shiftKey);if(this._aspectRatio||t.shiftKey)n=this._updateRatio(n,t);return n=this._respectSize(n,t),this._updateCache(n),this._propagate(\"resize\",t),this.position.top!==u&&(i.top=this.position.top+\"px\"),this.position.left!==a&&(i.left=this.position.left+\"px\"),this.size.width!==f&&(i.width=this.size.width+\"px\"),this.size.height!==l&&(i.height=this.size.height+\"px\"),r.css(i),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),e.isEmptyObject(i)||this._trigger(\"resize\",t,this.ui()),!1},_mouseStop:function(t){this.resizing=!1;var n,r,i,s,o,u,a,f=this.options,l=this;return this._helper&&(n=this._proportionallyResizeElements,r=n.length&&/textarea/i.test(n[0].nodeName),i=r&&e.ui.hasScroll(n[0],\"left\")?0:l.sizeDiff.height,s=r?0:l.sizeDiff.width,o={width:l.helper.width()-s,height:l.helper.height()-i},u=parseInt(l.element.css(\"left\"),10)+(l.position.left-l.originalPosition.left)||null,a=parseInt(l.element.css(\"top\"),10)+(l.position.top-l.originalPosition.top)||null,f.animate||this.element.css(e.extend(o,{top:a,left:u})),l.helper.height(l.size.height),l.helper.width(l.size.width),this._helper&&!f.animate&&this._proportionallyResize()),e(\"body\").css(\"cursor\",\"auto\"),this.element.removeClass(\"ui-resizable-resizing\"),this._propagate(\"stop\",t),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(e){var t,n,i,s,o,u=this.options;o={minWidth:r(u.minWidth)?u.minWidth:0,maxWidth:r(u.maxWidth)?u.maxWidth:Infinity,minHeight:r(u.minHeight)?u.minHeight:0,maxHeight:r(u.maxHeight)?u.maxHeight:Infinity};if(this._aspectRatio||e)t=o.minHeight*this.aspectRatio,i=o.minWidth/this.aspectRatio,n=o.maxHeight*this.aspectRatio,s=o.maxWidth/this.aspectRatio,t>o.minWidth&&(o.minWidth=t),i>o.minHeight&&(o.minHeight=i),n<o.maxWidth&&(o.maxWidth=n),s<o.maxHeight&&(o.maxHeight=s);this._vBoundaries=o},_updateCache:function(e){this.offset=this.helper.offset(),r(e.left)&&(this.position.left=e.left),r(e.top)&&(this.position.top=e.top),r(e.height)&&(this.size.height=e.height),r(e.width)&&(this.size.width=e.width)},_updateRatio:function(e){var t=this.position,n=this.size,i=this.axis;return r(e.height)?e.width=e.height*this.aspectRatio:r(e.width)&&(e.height=e.width/this.aspectRatio),i===\"sw\"&&(e.left=t.left+(n.width-e.width),e.top=null),i===\"nw\"&&(e.top=t.top+(n.height-e.height),e.left=t.left+(n.width-e.width)),e},_respectSize:function(e){var t=this._vBoundaries,n=this.axis,i=r(e.width)&&t.maxWidth&&t.maxWidth<e.width,s=r(e.height)&&t.maxHeight&&t.maxHeight<e.height,o=r(e.width)&&t.minWidth&&t.minWidth>e.width,u=r(e.height)&&t.minHeight&&t.minHeight>e.height,a=this.originalPosition.left+this.originalSize.width,f=this.position.top+this.size.height,l=/sw|nw|w/.test(n),c=/nw|ne|n/.test(n);return o&&(e.width=t.minWidth),u&&(e.height=t.minHeight),i&&(e.width=t.maxWidth),s&&(e.height=t.maxHeight),o&&l&&(e.left=a-t.minWidth),i&&l&&(e.left=a-t.maxWidth),u&&c&&(e.top=f-t.minHeight),s&&c&&(e.top=f-t.maxHeight),!e.width&&!e.height&&!e.left&&e.top?e.top=null:!e.width&&!e.height&&!e.top&&e.left&&(e.left=null),e},_proportionallyResize:function(){if(!this._proportionallyResizeElements.length)return;var e,t,n,r,i,s=this.helper||this.element;for(e=0;e<this._proportionallyResizeElements.length;e++){i=this._proportionallyResizeElements[e];if(!this.borderDif){this.borderDif=[],n=[i.css(\"borderTopWidth\"),i.css(\"borderRightWidth\"),i.css(\"borderBottomWidth\"),i.css(\"borderLeftWidth\")],r=[i.css(\"paddingTop\"),i.css(\"paddingRight\"),i.css(\"paddingBottom\"),i.css(\"paddingLeft\")];for(t=0;t<n.length;t++)this.borderDif[t]=(parseInt(n[t],10)||0)+(parseInt(r[t],10)||0)}i.css({height:s.height()-this.borderDif[0]-this.borderDif[2]||0,width:s.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var t=this.element,n=this.options;this.elementOffset=t.offset(),this._helper?(this.helper=this.helper||e(\"<div style='overflow:hidden;'></div>\"),this.helper.addClass(this._helper).css({width:this.element.outerWidth()-1,height:this.element.outerHeight()-1,position:\"absolute\",left:this.elementOffset.left+\"px\",top:this.elementOffset.top+\"px\",zIndex:++n.zIndex}),this.helper.appendTo(\"body\").disableSelection()):this.helper=this.element},_change:{e:function(e,t){return{width:this.originalSize.width+t}},w:function(e,t){var n=this.originalSize,r=this.originalPosition;return{left:r.left+t,width:n.width-t}},n:function(e,t,n){var r=this.originalSize,i=this.originalPosition;return{top:i.top+n,height:r.height-n}},s:function(e,t,n){return{height:this.originalSize.height+n}},se:function(t,n,r){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,n,r]))},sw:function(t,n,r){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,n,r]))},ne:function(t,n,r){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,n,r]))},nw:function(t,n,r){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,n,r]))}},_propagate:function(t,n){e.ui.plugin.call(this,t,[n,this.ui()]),t!==\"resize\"&&this._trigger(t,n,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add(\"resizable\",\"animate\",{stop:function(t){var n=e(this).data(\"ui-resizable\"),r=n.options,i=n._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),o=s&&e.ui.hasScroll(i[0],\"left\")?0:n.sizeDiff.height,u=s?0:n.sizeDiff.width,a={width:n.size.width-u,height:n.size.height-o},f=parseInt(n.element.css(\"left\"),10)+(n.position.left-n.originalPosition.left)||null,l=parseInt(n.element.css(\"top\"),10)+(n.position.top-n.originalPosition.top)||null;n.element.animate(e.extend(a,l&&f?{top:l,left:f}:{}),{duration:r.animateDuration,easing:r.animateEasing,step:function(){var r={width:parseInt(n.element.css(\"width\"),10),height:parseInt(n.element.css(\"height\"),10),top:parseInt(n.element.css(\"top\"),10),left:parseInt(n.element.css(\"left\"),10)};i&&i.length&&e(i[0]).css({width:r.width,height:r.height}),n._updateCache(r),n._propagate(\"resize\",t)}})}}),e.ui.plugin.add(\"resizable\",\"containment\",{start:function(){var t,r,i,s,o,u,a,f=e(this).data(\"ui-resizable\"),l=f.options,c=f.element,h=l.containment,p=h instanceof e?h.get(0):/parent/.test(h)?c.parent().get(0):h;if(!p)return;f.containerElement=e(p),/document/.test(h)||h===document?(f.containerOffset={left:0,top:0},f.containerPosition={left:0,top:0},f.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight}):(t=e(p),r=[],e([\"Top\",\"Right\",\"Left\",\"Bottom\"]).each(function(e,i){r[e]=n(t.css(\"padding\"+i))}),f.containerOffset=t.offset(),f.containerPosition=t.position(),f.containerSize={height:t.innerHeight()-r[3],width:t.innerWidth()-r[1]},i=f.containerOffset,s=f.containerSize.height,o=f.containerSize.width,u=e.ui.hasScroll(p,\"left\")?p.scrollWidth:o,a=e.ui.hasScroll(p)?p.scrollHeight:s,f.parentData={element:p,left:i.left,top:i.top,width:u,height:a})},resize:function(t){var n,r,i,s,o=e(this).data(\"ui-resizable\"),u=o.options,a=o.containerOffset,f=o.position,l=o._aspectRatio||t.shiftKey,c={top:0,left:0},h=o.containerElement;h[0]!==document&&/static/.test(h.css(\"position\"))&&(c=a),f.left<(o._helper?a.left:0)&&(o.size.width=o.size.width+(o._helper?o.position.left-a.left:o.position.left-c.left),l&&(o.size.height=o.size.width/o.aspectRatio),o.position.left=u.helper?a.left:0),f.top<(o._helper?a.top:0)&&(o.size.height=o.size.height+(o._helper?o.position.top-a.top:o.position.top),l&&(o.size.width=o.size.height*o.aspectRatio),o.position.top=o._helper?a.top:0),o.offset.left=o.parentData.left+o.position.left,o.offset.top=o.parentData.top+o.position.top,n=Math.abs((o._helper?o.offset.left-c.left:o.offset.left-c.left)+o.sizeDiff.width),r=Math.abs((o._helper?o.offset.top-c.top:o.offset.top-a.top)+o.sizeDiff.height),i=o.containerElement.get(0)===o.element.parent().get(0),s=/relative|absolute/.test(o.containerElement.css(\"position\")),i&&s&&(n-=o.parentData.left),n+o.size.width>=o.parentData.width&&(o.size.width=o.parentData.width-n,l&&(o.size.height=o.size.width/o.aspectRatio)),r+o.size.height>=o.parentData.height&&(o.size.height=o.parentData.height-r,l&&(o.size.width=o.size.height*o.aspectRatio))},stop:function(){var t=e(this).data(\"ui-resizable\"),n=t.options,r=t.containerOffset,i=t.containerPosition,s=t.containerElement,o=e(t.helper),u=o.offset(),a=o.outerWidth()-t.sizeDiff.width,f=o.outerHeight()-t.sizeDiff.height;t._helper&&!n.animate&&/relative/.test(s.css(\"position\"))&&e(this).css({left:u.left-i.left-r.left,width:a,height:f}),t._helper&&!n.animate&&/static/.test(s.css(\"position\"))&&e(this).css({left:u.left-i.left-r.left,width:a,height:f})}}),e.ui.plugin.add(\"resizable\",\"alsoResize\",{start:function(){var t=e(this).data(\"ui-resizable\"),n=t.options,r=function(t){e(t).each(function(){var t=e(this);t.data(\"ui-resizable-alsoresize\",{width:parseInt(t.width(),10),height:parseInt(t.height(),10),left:parseInt(t.css(\"left\"),10),top:parseInt(t.css(\"top\"),10)})})};typeof n.alsoResize==\"object\"&&!n.alsoResize.parentNode?n.alsoResize.length?(n.alsoResize=n.alsoResize[0],r(n.alsoResize)):e.each(n.alsoResize,function(e){r(e)}):r(n.alsoResize)},resize:function(t,n){var r=e(this).data(\"ui-resizable\"),i=r.options,s=r.originalSize,o=r.originalPosition,u={height:r.size.height-s.height||0,width:r.size.width-s.width||0,top:r.position.top-o.top||0,left:r.position.left-o.left||0},a=function(t,r){e(t).each(function(){var t=e(this),i=e(this).data(\"ui-resizable-alsoresize\"),s={},o=r&&r.length?r:t.parents(n.originalElement[0]).length?[\"width\",\"height\"]:[\"width\",\"height\",\"top\",\"left\"];e.each(o,function(e,t){var n=(i[t]||0)+(u[t]||0);n&&n>=0&&(s[t]=n||null)}),t.css(s)})};typeof i.alsoResize==\"object\"&&!i.alsoResize.nodeType?e.each(i.alsoResize,function(e,t){a(e,t)}):a(i.alsoResize)},stop:function(){e(this).removeData(\"resizable-alsoresize\")}}),e.ui.plugin.add(\"resizable\",\"ghost\",{start:function(){var t=e(this).data(\"ui-resizable\"),n=t.options,r=t.size;t.ghost=t.originalElement.clone(),t.ghost.css({opacity:.25,display:\"block\",position:\"relative\",height:r.height,width:r.width,margin:0,left:0,top:0}).addClass(\"ui-resizable-ghost\").addClass(typeof n.ghost==\"string\"?n.ghost:\"\"),t.ghost.appendTo(t.helper)},resize:function(){var t=e(this).data(\"ui-resizable\");t.ghost&&t.ghost.css({position:\"relative\",height:t.size.height,width:t.size.width})},stop:function(){var t=e(this).data(\"ui-resizable\");t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),e.ui.plugin.add(\"resizable\",\"grid\",{resize:function(){var t=e(this).data(\"ui-resizable\"),n=t.options,r=t.size,i=t.originalSize,s=t.originalPosition,o=t.axis,u=typeof n.grid==\"number\"?[n.grid,n.grid]:n.grid,a=u[0]||1,f=u[1]||1,l=Math.round((r.width-i.width)/a)*a,c=Math.round((r.height-i.height)/f)*f,h=i.width+l,p=i.height+c,d=n.maxWidth&&n.maxWidth<h,v=n.maxHeight&&n.maxHeight<p,m=n.minWidth&&n.minWidth>h,g=n.minHeight&&n.minHeight>p;n.grid=u,m&&(h+=a),g&&(p+=f),d&&(h-=a),v&&(p-=f),/^(se|s|e)$/.test(o)?(t.size.width=h,t.size.height=p):/^(ne)$/.test(o)?(t.size.width=h,t.size.height=p,t.position.top=s.top-c):/^(sw)$/.test(o)?(t.size.width=h,t.size.height=p,t.position.left=s.left-l):(t.size.width=h,t.size.height=p,t.position.top=s.top-c,t.position.left=s.left-l)}})})(jQuery);(function(e,t){e.widget(\"ui.selectable\",e.ui.mouse,{version:\"1.10.0\",options:{appendTo:\"body\",autoRefresh:!0,distance:0,filter:\"*\",tolerance:\"touch\",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var t,n=this;this.element.addClass(\"ui-selectable\"),this.dragged=!1,this.refresh=function(){t=e(n.options.filter,n.element[0]),t.addClass(\"ui-selectee\"),t.each(function(){var t=e(this),n=t.offset();e.data(this,\"selectable-item\",{element:this,$element:t,left:n.left,top:n.top,right:n.left+t.outerWidth(),bottom:n.top+t.outerHeight(),startselected:!1,selected:t.hasClass(\"ui-selected\"),selecting:t.hasClass(\"ui-selecting\"),unselecting:t.hasClass(\"ui-unselecting\")})})},this.refresh(),this.selectees=t.addClass(\"ui-selectee\"),this._mouseInit(),this.helper=e(\"<div class='ui-selectable-helper'></div>\")},_destroy:function(){this.selectees.removeClass(\"ui-selectee\").removeData(\"selectable-item\"),this.element.removeClass(\"ui-selectable ui-selectable-disabled\"),this._mouseDestroy()},_mouseStart:function(t){var n=this,r=this.options;this.opos=[t.pageX,t.pageY];if(this.options.disabled)return;this.selectees=e(r.filter,this.element[0]),this._trigger(\"start\",t),e(r.appendTo).append(this.helper),this.helper.css({left:t.pageX,top:t.pageY,width:0,height:0}),r.autoRefresh&&this.refresh(),this.selectees.filter(\".ui-selected\").each(function(){var r=e.data(this,\"selectable-item\");r.startselected=!0,!t.metaKey&&!t.ctrlKey&&(r.$element.removeClass(\"ui-selected\"),r.selected=!1,r.$element.addClass(\"ui-unselecting\"),r.unselecting=!0,n._trigger(\"unselecting\",t,{unselecting:r.element}))}),e(t.target).parents().addBack().each(function(){var r,i=e.data(this,\"selectable-item\");if(i)return r=!t.metaKey&&!t.ctrlKey||!i.$element.hasClass(\"ui-selected\"),i.$element.removeClass(r?\"ui-unselecting\":\"ui-selected\").addClass(r?\"ui-selecting\":\"ui-unselecting\"),i.unselecting=!r,i.selecting=r,i.selected=r,r?n._trigger(\"selecting\",t,{selecting:i.element}):n._trigger(\"unselecting\",t,{unselecting:i.element}),!1})},_mouseDrag:function(t){this.dragged=!0;if(this.options.disabled)return;var n,r=this,i=this.options,s=this.opos[0],o=this.opos[1],u=t.pageX,a=t.pageY;return s>u&&(n=u,u=s,s=n),o>a&&(n=a,a=o,o=n),this.helper.css({left:s,top:o,width:u-s,height:a-o}),this.selectees.each(function(){var n=e.data(this,\"selectable-item\"),f=!1;if(!n||n.element===r.element[0])return;i.tolerance===\"touch\"?f=!(n.left>u||n.right<s||n.top>a||n.bottom<o):i.tolerance===\"fit\"&&(f=n.left>s&&n.right<u&&n.top>o&&n.bottom<a),f?(n.selected&&(n.$element.removeClass(\"ui-selected\"),n.selected=!1),n.unselecting&&(n.$element.removeClass(\"ui-unselecting\"),n.unselecting=!1),n.selecting||(n.$element.addClass(\"ui-selecting\"),n.selecting=!0,r._trigger(\"selecting\",t,{selecting:n.element}))):(n.selecting&&((t.metaKey||t.ctrlKey)&&n.startselected?(n.$element.removeClass(\"ui-selecting\"),n.selecting=!1,n.$element.addClass(\"ui-selected\"),n.selected=!0):(n.$element.removeClass(\"ui-selecting\"),n.selecting=!1,n.startselected&&(n.$element.addClass(\"ui-unselecting\"),n.unselecting=!0),r._trigger(\"unselecting\",t,{unselecting:n.element}))),n.selected&&!t.metaKey&&!t.ctrlKey&&!n.startselected&&(n.$element.removeClass(\"ui-selected\"),n.selected=!1,n.$element.addClass(\"ui-unselecting\"),n.unselecting=!0,r._trigger(\"unselecting\",t,{unselecting:n.element})))}),!1},_mouseStop:function(t){var n=this;return this.dragged=!1,e(\".ui-unselecting\",this.element[0]).each(function(){var r=e.data(this,\"selectable-item\");r.$element.removeClass(\"ui-unselecting\"),r.unselecting=!1,r.startselected=!1,n._trigger(\"unselected\",t,{unselected:r.element})}),e(\".ui-selecting\",this.element[0]).each(function(){var r=e.data(this,\"selectable-item\");r.$element.removeClass(\"ui-selecting\").addClass(\"ui-selected\"),r.selecting=!1,r.selected=!0,r.startselected=!0,n._trigger(\"selected\",t,{selected:r.element})}),this._trigger(\"stop\",t),this.helper.remove(),!1}})})(jQuery);(function(e,t){function n(e,t,n){return e>t&&e<t+n}e.widget(\"ui.sortable\",e.ui.mouse,{version:\"1.10.0\",widgetEventPrefix:\"sort\",ready:!1,options:{appendTo:\"parent\",axis:!1,connectWith:!1,containment:!1,cursor:\"auto\",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:\"original\",items:\"> *\",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:\"default\",tolerance:\"intersect\",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_create:function(){var e=this.options;this.containerCache={},this.element.addClass(\"ui-sortable\"),this.refresh(),this.floating=this.items.length?e.axis===\"x\"||/left|right/.test(this.items[0].item.css(\"float\"))||/inline|table-cell/.test(this.items[0].item.css(\"display\")):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},_destroy:function(){this.element.removeClass(\"ui-sortable ui-sortable-disabled\"),this._mouseDestroy();for(var e=this.items.length-1;e>=0;e--)this.items[e].item.removeData(this.widgetName+\"-item\");return this},_setOption:function(t,n){t===\"disabled\"?(this.options[t]=n,this.widget().toggleClass(\"ui-sortable-disabled\",!!n)):e.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(t,n){var r=null,i=!1,s=this;if(this.reverting)return!1;if(this.options.disabled||this.options.type===\"static\")return!1;this._refreshItems(t),e(t.target).parents().each(function(){if(e.data(this,s.widgetName+\"-item\")===s)return r=e(this),!1}),e.data(t.target,s.widgetName+\"-item\")===s&&(r=e(t.target));if(!r)return!1;if(this.options.handle&&!n){e(this.options.handle,r).find(\"*\").addBack().each(function(){this===t.target&&(i=!0)});if(!i)return!1}return this.currentItem=r,this._removeCurrentsFromItems(),!0},_mouseStart:function(t,n,r){var i,s=this.options;this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(t),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css(\"position\",\"absolute\"),this.cssPosition=this.helper.css(\"position\"),this.originalPosition=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,s.cursorAt&&this._adjustOffsetFromHelper(s.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),s.containment&&this._setContainment(),s.cursor&&(e(\"body\").css(\"cursor\")&&(this._storedCursor=e(\"body\").css(\"cursor\")),e(\"body\").css(\"cursor\",s.cursor)),s.opacity&&(this.helper.css(\"opacity\")&&(this._storedOpacity=this.helper.css(\"opacity\")),this.helper.css(\"opacity\",s.opacity)),s.zIndex&&(this.helper.css(\"zIndex\")&&(this._storedZIndex=this.helper.css(\"zIndex\")),this.helper.css(\"zIndex\",s.zIndex)),this.scrollParent[0]!==document&&this.scrollParent[0].tagName!==\"HTML\"&&(this.overflowOffset=this.scrollParent.offset()),this._trigger(\"start\",t,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions();if(!r)for(i=this.containers.length-1;i>=0;i--)this.containers[i]._trigger(\"activate\",t,this._uiHash(this));return e.ui.ddmanager&&(e.ui.ddmanager.current=this),e.ui.ddmanager&&!s.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this.dragging=!0,this.helper.addClass(\"ui-sortable-helper\"),this._mouseDrag(t),!0},_mouseDrag:function(t){var n,r,i,s,o=this.options,u=!1;this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo(\"absolute\"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==document&&this.scrollParent[0].tagName!==\"HTML\"?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-t.pageY<o.scrollSensitivity?this.scrollParent[0].scrollTop=u=this.scrollParent[0].scrollTop+o.scrollSpeed:t.pageY-this.overflowOffset.top<o.scrollSensitivity&&(this.scrollParent[0].scrollTop=u=this.scrollParent[0].scrollTop-o.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-t.pageX<o.scrollSensitivity?this.scrollParent[0].scrollLeft=u=this.scrollParent[0].scrollLeft+o.scrollSpeed:t.pageX-this.overflowOffset.left<o.scrollSensitivity&&(this.scrollParent[0].scrollLeft=u=this.scrollParent[0].scrollLeft-o.scrollSpeed)):(t.pageY-e(document).scrollTop()<o.scrollSensitivity?u=e(document).scrollTop(e(document).scrollTop()-o.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<o.scrollSensitivity&&(u=e(document).scrollTop(e(document).scrollTop()+o.scrollSpeed)),t.pageX-e(document).scrollLeft()<o.scrollSensitivity?u=e(document).scrollLeft(e(document).scrollLeft()-o.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<o.scrollSensitivity&&(u=e(document).scrollLeft(e(document).scrollLeft()+o.scrollSpeed))),u!==!1&&e.ui.ddmanager&&!o.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t)),this.positionAbs=this._convertPositionTo(\"absolute\");if(!this.options.axis||this.options.axis!==\"y\")this.helper[0].style.left=this.position.left+\"px\";if(!this.options.axis||this.options.axis!==\"x\")this.helper[0].style.top=this.position.top+\"px\";for(n=this.items.length-1;n>=0;n--){r=this.items[n],i=r.item[0],s=this._intersectsWithPointer(r);if(!s)continue;if(r.instance!==this.currentContainer)continue;if(i!==this.currentItem[0]&&this.placeholder[s===1?\"next\":\"prev\"]()[0]!==i&&!e.contains(this.placeholder[0],i)&&(this.options.type===\"semi-dynamic\"?!e.contains(this.element[0],i):!0)){this.direction=s===1?\"down\":\"up\";if(this.options.tolerance!==\"pointer\"&&!this._intersectsWithSides(r))break;this._rearrange(t,r),this._trigger(\"change\",t,this._uiHash());break}}return this._contactContainers(t),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),this._trigger(\"sort\",t,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(t,n){if(!t)return;e.ui.ddmanager&&!this.options.dropBehaviour&&e.ui.ddmanager.drop(this,t);if(this.options.revert){var r=this,i=this.placeholder.offset();this.reverting=!0,e(this.helper).animate({left:i.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollLeft),top:i.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){r._clear(t)})}else this._clear(t,n);return!1},cancel:function(){if(this.dragging){this._mouseUp({target:null}),this.options.helper===\"original\"?this.currentItem.css(this._storedCSS).removeClass(\"ui-sortable-helper\"):this.currentItem.show();for(var t=this.containers.length-1;t>=0;t--)this.containers[t]._trigger(\"deactivate\",null,this._uiHash(this)),this.containers[t].containerCache.over&&(this.containers[t]._trigger(\"out\",null,this._uiHash(this)),this.containers[t].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.options.helper!==\"original\"&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),e.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?e(this.domPosition.prev).after(this.currentItem):e(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},e(n).each(function(){var n=(e(t.item||this).attr(t.attribute||\"id\")||\"\").match(t.expression||/(.+)[\\-=_](.+)/);n&&r.push((t.key||n[1]+\"[]\")+\"=\"+(t.key&&t.expression?n[1]:n[2]))}),!r.length&&t.key&&r.push(t.key+\"=\"),r.join(\"&\")},toArray:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},n.each(function(){r.push(e(t.item||this).attr(t.attribute||\"id\")||\"\")}),r},_intersectsWith:function(e){var t=this.positionAbs.left,n=t+this.helperProportions.width,r=this.positionAbs.top,i=r+this.helperProportions.height,s=e.left,o=s+e.width,u=e.top,a=u+e.height,f=this.offset.click.top,l=this.offset.click.left,c=r+f>u&&r+f<a&&t+l>s&&t+l<o;return this.options.tolerance===\"pointer\"||this.options.forcePointerForContainers||this.options.tolerance!==\"pointer\"&&this.helperProportions[this.floating?\"width\":\"height\"]>e[this.floating?\"width\":\"height\"]?c:s<t+this.helperProportions.width/2&&n-this.helperProportions.width/2<o&&u<r+this.helperProportions.height/2&&i-this.helperProportions.height/2<a},_intersectsWithPointer:function(e){var t=this.options.axis===\"x\"||n(this.positionAbs.top+this.offset.click.top,e.top,e.height),r=this.options.axis===\"y\"||n(this.positionAbs.left+this.offset.click.left,e.left,e.width),i=t&&r,s=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return i?this.floating?o&&o===\"right\"||s===\"down\"?2:1:s&&(s===\"down\"?2:1):!1},_intersectsWithSides:function(e){var t=n(this.positionAbs.top+this.offset.click.top,e.top+e.height/2,e.height),r=n(this.positionAbs.left+this.offset.click.left,e.left+e.width/2,e.width),i=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?s===\"right\"&&r||s===\"left\"&&!r:i&&(i===\"down\"&&t||i===\"up\"&&!t)},_getDragVerticalDirection:function(){var e=this.positionAbs.top-this.lastPositionAbs.top;return e!==0&&(e>0?\"down\":\"up\")},_getDragHorizontalDirection:function(){var e=this.positionAbs.left-this.lastPositionAbs.left;return e!==0&&(e>0?\"right\":\"left\")},refresh:function(e){return this._refreshItems(e),this.refreshPositions(),this},_connectWith:function(){var e=this.options;return e.connectWith.constructor===String?[e.connectWith]:e.connectWith},_getItemsAsjQuery:function(t){var n,r,i,s,o=[],u=[],a=this._connectWith();if(a&&t)for(n=a.length-1;n>=0;n--){i=e(a[n]);for(r=i.length-1;r>=0;r--)s=e.data(i[r],this.widgetFullName),s&&s!==this&&!s.options.disabled&&u.push([e.isFunction(s.options.items)?s.options.items.call(s.element):e(s.options.items,s.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),s])}u.push([e.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):e(this.options.items,this.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),this]);for(n=u.length-1;n>=0;n--)u[n][0].each(function(){o.push(this)});return e(o)},_removeCurrentsFromItems:function(){var t=this.currentItem.find(\":data(\"+this.widgetName+\"-item)\");this.items=e.grep(this.items,function(e){for(var n=0;n<t.length;n++)if(t[n]===e.item[0])return!1;return!0})},_refreshItems:function(t){this.items=[],this.containers=[this];var n,r,i,s,o,u,a,f,l=this.items,c=[[e.isFunction(this.options.items)?this.options.items.call(this.element[0],t,{item:this.currentItem}):e(this.options.items,this.element),this]],h=this._connectWith();if(h&&this.ready)for(n=h.length-1;n>=0;n--){i=e(h[n]);for(r=i.length-1;r>=0;r--)s=e.data(i[r],this.widgetFullName),s&&s!==this&&!s.options.disabled&&(c.push([e.isFunction(s.options.items)?s.options.items.call(s.element[0],t,{item:this.currentItem}):e(s.options.items,s.element),s]),this.containers.push(s))}for(n=c.length-1;n>=0;n--){o=c[n][1],u=c[n][0];for(r=0,f=u.length;r<f;r++)a=e(u[r]),a.data(this.widgetName+\"-item\",o),l.push({item:a,instance:o,width:0,height:0,left:0,top:0})}},refreshPositions:function(t){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var n,r,i,s;for(n=this.items.length-1;n>=0;n--){r=this.items[n];if(r.instance!==this.currentContainer&&this.currentContainer&&r.item[0]!==this.currentItem[0])continue;i=this.options.toleranceElement?e(this.options.toleranceElement,r.item):r.item,t||(r.width=i.outerWidth(),r.height=i.outerHeight()),s=i.offset(),r.left=s.left,r.top=s.top}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(n=this.containers.length-1;n>=0;n--)s=this.containers[n].element.offset(),this.containers[n].containerCache.left=s.left,this.containers[n].containerCache.top=s.top,this.containers[n].containerCache.width=this.containers[n].element.outerWidth(),this.containers[n].containerCache.height=this.containers[n].element.outerHeight();return this},_createPlaceholder:function(t){t=t||this;var n,r=t.options;if(!r.placeholder||r.placeholder.constructor===String)n=r.placeholder,r.placeholder={element:function(){var r=e(document.createElement(t.currentItem[0].nodeName)).addClass(n||t.currentItem[0].className+\" ui-sortable-placeholder\").removeClass(\"ui-sortable-helper\")[0];return n||(r.style.visibility=\"hidden\"),r},update:function(e,i){if(n&&!r.forcePlaceholderSize)return;i.height()||i.height(t.currentItem.innerHeight()-parseInt(t.currentItem.css(\"paddingTop\")||0,10)-parseInt(t.currentItem.css(\"paddingBottom\")||0,10)),i.width()||i.width(t.currentItem.innerWidth()-parseInt(t.currentItem.css(\"paddingLeft\")||0,10)-parseInt(t.currentItem.css(\"paddingRight\")||0,10))}};t.placeholder=e(r.placeholder.element.call(t.element,t.currentItem)),t.currentItem.after(t.placeholder),r.placeholder.update(t,t.placeholder)},_contactContainers:function(t){var n,r,i,s,o,u,a,f,l,c=null,h=null;for(n=this.containers.length-1;n>=0;n--){if(e.contains(this.currentItem[0],this.containers[n].element[0]))continue;if(this._intersectsWith(this.containers[n].containerCache)){if(c&&e.contains(this.containers[n].element[0],c.element[0]))continue;c=this.containers[n],h=n}else this.containers[n].containerCache.over&&(this.containers[n]._trigger(\"out\",t,this._uiHash(this)),this.containers[n].containerCache.over=0)}if(!c)return;if(this.containers.length===1)this.containers[h]._trigger(\"over\",t,this._uiHash(this)),this.containers[h].containerCache.over=1;else{i=1e4,s=null,o=this.containers[h].floating?\"left\":\"top\",u=this.containers[h].floating?\"width\":\"height\",a=this.positionAbs[o]+this.offset.click[o];for(r=this.items.length-1;r>=0;r--){if(!e.contains(this.containers[h].element[0],this.items[r].item[0]))continue;if(this.items[r].item[0]===this.currentItem[0])continue;f=this.items[r].item.offset()[o],l=!1,Math.abs(f-a)>Math.abs(f+this.items[r][u]-a)&&(l=!0,f+=this.items[r][u]),Math.abs(f-a)<i&&(i=Math.abs(f-a),s=this.items[r],this.direction=l?\"up\":\"down\")}if(!s&&!this.options.dropOnEmpty)return;this.currentContainer=this.containers[h],s?this._rearrange(t,s,null,!0):this._rearrange(t,null,this.containers[h].element,!0),this._trigger(\"change\",t,this._uiHash()),this.containers[h]._trigger(\"change\",t,this._uiHash(this)),this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[h]._trigger(\"over\",t,this._uiHash(this)),this.containers[h].containerCache.over=1}},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t,this.currentItem])):n.helper===\"clone\"?this.currentItem.clone():this.currentItem;return r.parents(\"body\").length||e(n.appendTo!==\"parent\"?n.appendTo:this.currentItem[0].parentNode)[0].appendChild(r[0]),r[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css(\"position\"),top:this.currentItem.css(\"top\"),left:this.currentItem.css(\"left\")}),(!r[0].style.width||n.forceHelperSize)&&r.width(this.currentItem.width()),(!r[0].style.height||n.forceHelperSize)&&r.height(this.currentItem.height()),r},_adjustOffsetFromHelper:function(t){typeof t==\"string\"&&(t=t.split(\" \")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),\"left\"in t&&(this.offset.click.left=t.left+this.margins.left),\"right\"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),\"top\"in t&&(this.offset.click.top=t.top+this.margins.top),\"bottom\"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition===\"absolute\"&&this.scrollParent[0]!==document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()===\"html\"&&e.ui.ie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:t.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition===\"relative\"){var e=this.currentItem.position();return{top:e.top-(parseInt(this.helper.css(\"top\"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css(\"left\"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css(\"marginLeft\"),10)||0,top:parseInt(this.currentItem.css(\"marginTop\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,n,r,i=this.options;i.containment===\"parent\"&&(i.containment=this.helper[0].parentNode);if(i.containment===\"document\"||i.containment===\"window\")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,e(i.containment===\"document\"?document:window).width()-this.helperProportions.width-this.margins.left,(e(i.containment===\"document\"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];/^(document|window|parent)$/.test(i.containment)||(t=e(i.containment)[0],n=e(i.containment).offset(),r=e(t).css(\"overflow\")!==\"hidden\",this.containment=[n.left+(parseInt(e(t).css(\"borderLeftWidth\"),10)||0)+(parseInt(e(t).css(\"paddingLeft\"),10)||0)-this.margins.left,n.top+(parseInt(e(t).css(\"borderTopWidth\"),10)||0)+(parseInt(e(t).css(\"paddingTop\"),10)||0)-this.margins.top,n.left+(r?Math.max(t.scrollWidth,t.offsetWidth):t.offsetWidth)-(parseInt(e(t).css(\"borderLeftWidth\"),10)||0)-(parseInt(e(t).css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left,n.top+(r?Math.max(t.scrollHeight,t.offsetHeight):t.offsetHeight)-(parseInt(e(t).css(\"borderTopWidth\"),10)||0)-(parseInt(e(t).css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(t,n){n||(n=this.position);var r=t===\"absolute\"?1:-1,i=this.cssPosition!==\"absolute\"||this.scrollParent[0]!==document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,s=/(html|body)/i.test(i[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition===\"fixed\"?-this.scrollParent.scrollTop():s?0:i.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition===\"fixed\"?-this.scrollParent.scrollLeft():s?0:i.scrollLeft())*r}},_generatePosition:function(t){var n,r,i=this.options,s=t.pageX,o=t.pageY,u=this.cssPosition!==\"absolute\"||this.scrollParent[0]!==document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,a=/(html|body)/i.test(u[0].tagName);return this.cssPosition===\"relative\"&&(this.scrollParent[0]===document||this.scrollParent[0]===this.offsetParent[0])&&(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(t.pageX-this.offset.click.left<this.containment[0]&&(s=this.containment[0]+this.offset.click.left),t.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),t.pageX-this.offset.click.left>this.containment[2]&&(s=this.containment[2]+this.offset.click.left),t.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top)),i.grid&&(n=this.originalPageY+Math.round((o-this.originalPageY)/i.grid[1])*i.grid[1],o=this.containment?n-this.offset.click.top>=this.containment[1]&&n-this.offset.click.top<=this.containment[3]?n:n-this.offset.click.top>=this.containment[1]?n-i.grid[1]:n+i.grid[1]:n,r=this.originalPageX+Math.round((s-this.originalPageX)/i.grid[0])*i.grid[0],s=this.containment?r-this.offset.click.left>=this.containment[0]&&r-this.offset.click.left<=this.containment[2]?r:r-this.offset.click.left>=this.containment[0]?r-i.grid[0]:r+i.grid[0]:r)),{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition===\"fixed\"?-this.scrollParent.scrollTop():a?0:u.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition===\"fixed\"?-this.scrollParent.scrollLeft():a?0:u.scrollLeft())}},_rearrange:function(e,t,n,r){n?n[0].appendChild(this.placeholder[0]):t.item[0].parentNode.insertBefore(this.placeholder[0],this.direction===\"down\"?t.item[0]:t.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var i=this.counter;this._delay(function(){i===this.counter&&this.refreshPositions(!r)})},_clear:function(t,n){this.reverting=!1;var r,i=[];!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null;if(this.helper[0]===this.currentItem[0]){for(r in this._storedCSS)if(this._storedCSS[r]===\"auto\"||this._storedCSS[r]===\"static\")this._storedCSS[r]=\"\";this.currentItem.css(this._storedCSS).removeClass(\"ui-sortable-helper\")}else this.currentItem.show();this.fromOutside&&!n&&i.push(function(e){this._trigger(\"receive\",e,this._uiHash(this.fromOutside))}),(this.fromOutside||this.domPosition.prev!==this.currentItem.prev().not(\".ui-sortable-helper\")[0]||this.domPosition.parent!==this.currentItem.parent()[0])&&!n&&i.push(function(e){this._trigger(\"update\",e,this._uiHash())}),this!==this.currentContainer&&(n||(i.push(function(e){this._trigger(\"remove\",e,this._uiHash())}),i.push(function(e){return function(t){e._trigger(\"receive\",t,this._uiHash(this))}}.call(this,this.currentContainer)),i.push(function(e){return function(t){e._trigger(\"update\",t,this._uiHash(this))}}.call(this,this.currentContainer))));for(r=this.containers.length-1;r>=0;r--)n||i.push(function(e){return function(t){e._trigger(\"deactivate\",t,this._uiHash(this))}}.call(this,this.containers[r])),this.containers[r].containerCache.over&&(i.push(function(e){return function(t){e._trigger(\"out\",t,this._uiHash(this))}}.call(this,this.containers[r])),this.containers[r].containerCache.over=0);this._storedCursor&&e(\"body\").css(\"cursor\",this._storedCursor),this._storedOpacity&&this.helper.css(\"opacity\",this._storedOpacity),this._storedZIndex&&this.helper.css(\"zIndex\",this._storedZIndex===\"auto\"?\"\":this._storedZIndex),this.dragging=!1;if(this.cancelHelperRemoval){if(!n){this._trigger(\"beforeStop\",t,this._uiHash());for(r=0;r<i.length;r++)i[r].call(this,t);this._trigger(\"stop\",t,this._uiHash())}return this.fromOutside=!1,!1}n||this._trigger(\"beforeStop\",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null;if(!n){for(r=0;r<i.length;r++)i[r].call(this,t);this._trigger(\"stop\",t,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){e.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(t){var n=t||this;return{helper:n.helper,placeholder:n.placeholder||e([]),position:n.position,originalPosition:n.originalPosition,offset:n.positionAbs,item:n.currentItem,sender:t?t.element:null}}})})(jQuery);(function(e,t){var n=0,r={},i={};r.height=r.paddingTop=r.paddingBottom=r.borderTopWidth=r.borderBottomWidth=\"hide\",i.height=i.paddingTop=i.paddingBottom=i.borderTopWidth=i.borderBottomWidth=\"show\",e.widget(\"ui.accordion\",{version:\"1.10.0\",options:{active:0,animate:{},collapsible:!1,event:\"click\",header:\"> li > :first-child,> :not(li):even\",heightStyle:\"auto\",icons:{activeHeader:\"ui-icon-triangle-1-s\",header:\"ui-icon-triangle-1-e\"},activate:null,beforeActivate:null},_create:function(){var t=this.options;this.prevShow=this.prevHide=e(),this.element.addClass(\"ui-accordion ui-widget ui-helper-reset\").attr(\"role\",\"tablist\"),!t.collapsible&&(t.active===!1||t.active==null)&&(t.active=0),this._processPanels(),t.active<0&&(t.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,content:this.active.length?this.active.next():e()}},_createIcons:function(){var t=this.options.icons;t&&(e(\"<span>\").addClass(\"ui-accordion-header-icon ui-icon \"+t.header).prependTo(this.headers),this.active.children(\".ui-accordion-header-icon\").removeClass(t.header).addClass(t.activeHeader),this.headers.addClass(\"ui-accordion-icons\"))},_destroyIcons:function(){this.headers.removeClass(\"ui-accordion-icons\").children(\".ui-accordion-header-icon\").remove()},_destroy:function(){var e;this.element.removeClass(\"ui-accordion ui-widget ui-helper-reset\").removeAttr(\"role\"),this.headers.removeClass(\"ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top\").removeAttr(\"role\").removeAttr(\"aria-selected\").removeAttr(\"aria-controls\").removeAttr(\"tabIndex\").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute(\"id\")}),this._destroyIcons(),e=this.headers.next().css(\"display\",\"\").removeAttr(\"role\").removeAttr(\"aria-expanded\").removeAttr(\"aria-hidden\").removeAttr(\"aria-labelledby\").removeClass(\"ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled\").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute(\"id\")}),this.options.heightStyle!==\"content\"&&e.css(\"height\",\"\")},_setOption:function(e,t){if(e===\"active\"){this._activate(t);return}e===\"event\"&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(t)),this._super(e,t),e===\"collapsible\"&&!t&&this.options.active===!1&&this._activate(0),e===\"icons\"&&(this._destroyIcons(),t&&this._createIcons()),e===\"disabled\"&&this.headers.add(this.headers.next()).toggleClass(\"ui-state-disabled\",!!t)},_keydown:function(t){if(t.altKey||t.ctrlKey)return;var n=e.ui.keyCode,r=this.headers.length,i=this.headers.index(t.target),s=!1;switch(t.keyCode){case n.RIGHT:case n.DOWN:s=this.headers[(i+1)%r];break;case n.LEFT:case n.UP:s=this.headers[(i-1+r)%r];break;case n.SPACE:case n.ENTER:this._eventHandler(t);break;case n.HOME:s=this.headers[0];break;case n.END:s=this.headers[r-1]}s&&(e(t.target).attr(\"tabIndex\",-1),e(s).attr(\"tabIndex\",0),s.focus(),t.preventDefault())},_panelKeyDown:function(t){t.keyCode===e.ui.keyCode.UP&&t.ctrlKey&&e(t.currentTarget).prev().focus()},refresh:function(){var t=this.options;this._processPanels();if(t.active===!1&&t.collapsible===!0||!this.headers.length)t.active=!1,this.active=e();t.active===!1?this._activate(0):this.active.length&&!e.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(\".ui-state-disabled\").length?(t.active=!1,this.active=e()):this._activate(Math.max(0,t.active-1)):t.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){this.headers=this.element.find(this.options.header).addClass(\"ui-accordion-header ui-helper-reset ui-state-default ui-corner-all\"),this.headers.next().addClass(\"ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom\").filter(\":not(.ui-accordion-content-active)\").hide()},_refresh:function(){var t,r=this.options,i=r.heightStyle,s=this.element.parent(),o=this.accordionId=\"ui-accordion-\"+(this.element.attr(\"id\")||++n);this.active=this._findActive(r.active).addClass(\"ui-accordion-header-active ui-state-active\").toggleClass(\"ui-corner-all ui-corner-top\"),this.active.next().addClass(\"ui-accordion-content-active\").show(),this.headers.attr(\"role\",\"tab\").each(function(t){var n=e(this),r=n.attr(\"id\"),i=n.next(),s=i.attr(\"id\");r||(r=o+\"-header-\"+t,n.attr(\"id\",r)),s||(s=o+\"-panel-\"+t,i.attr(\"id\",s)),n.attr(\"aria-controls\",s),i.attr(\"aria-labelledby\",r)}).next().attr(\"role\",\"tabpanel\"),this.headers.not(this.active).attr({\"aria-selected\":\"false\",tabIndex:-1}).next().attr({\"aria-expanded\":\"false\",\"aria-hidden\":\"true\"}).hide(),this.active.length?this.active.attr({\"aria-selected\":\"true\",tabIndex:0}).next().attr({\"aria-expanded\":\"true\",\"aria-hidden\":\"false\"}):this.headers.eq(0).attr(\"tabIndex\",0),this._createIcons(),this._setupEvents(r.event),i===\"fill\"?(t=s.height(),this.element.siblings(\":visible\").each(function(){var n=e(this),r=n.css(\"position\");if(r===\"absolute\"||r===\"fixed\")return;t-=n.outerHeight(!0)}),this.headers.each(function(){t-=e(this).outerHeight(!0)}),this.headers.next().each(function(){e(this).height(Math.max(0,t-e(this).innerHeight()+e(this).height()))}).css(\"overflow\",\"auto\")):i===\"auto\"&&(t=0,this.headers.next().each(function(){t=Math.max(t,e(this).css(\"height\",\"\").height())}).height(t))},_activate:function(t){var n=this._findActive(t)[0];if(n===this.active[0])return;n=n||this.active[0],this._eventHandler({target:n,currentTarget:n,preventDefault:e.noop})},_findActive:function(t){return typeof t==\"number\"?this.headers.eq(t):e()},_setupEvents:function(t){var n={keydown:\"_keydown\"};t&&e.each(t.split(\" \"),function(e,t){n[t]=\"_eventHandler\"}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,n),this._on(this.headers.next(),{keydown:\"_panelKeyDown\"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(t){var n=this.options,r=this.active,i=e(t.currentTarget),s=i[0]===r[0],o=s&&n.collapsible,u=o?e():i.next(),a=r.next(),f={oldHeader:r,oldPanel:a,newHeader:o?e():i,newPanel:u};t.preventDefault();if(s&&!n.collapsible||this._trigger(\"beforeActivate\",t,f)===!1)return;n.active=o?!1:this.headers.index(i),this.active=s?e():i,this._toggle(f),r.removeClass(\"ui-accordion-header-active ui-state-active\"),n.icons&&r.children(\".ui-accordion-header-icon\").removeClass(n.icons.activeHeader).addClass(n.icons.header),s||(i.removeClass(\"ui-corner-all\").addClass(\"ui-accordion-header-active ui-state-active ui-corner-top\"),n.icons&&i.children(\".ui-accordion-header-icon\").removeClass(n.icons.header).addClass(n.icons.activeHeader),i.next().addClass(\"ui-accordion-content-active\"))},_toggle:function(t){var n=t.newPanel,r=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=n,this.prevHide=r,this.options.animate?this._animate(n,r,t):(r.hide(),n.show(),this._toggleComplete(t)),r.attr({\"aria-expanded\":\"false\",\"aria-hidden\":\"true\"}),r.prev().attr(\"aria-selected\",\"false\"),n.length&&r.length?r.prev().attr(\"tabIndex\",-1):n.length&&this.headers.filter(function(){return e(this).attr(\"tabIndex\")===0}).attr(\"tabIndex\",-1),n.attr({\"aria-expanded\":\"true\",\"aria-hidden\":\"false\"}).prev().attr({\"aria-selected\":\"true\",tabIndex:0})},_animate:function(e,t,n){var s,o,u,a=this,f=0,l=e.length&&(!t.length||e.index()<t.index()),c=this.options.animate||{},h=l&&c.down||c,p=function(){a._toggleComplete(n)};typeof h==\"number\"&&(u=h),typeof h==\"string\"&&(o=h),o=o||h.easing||c.easing,u=u||h.duration||c.duration;if(!t.length)return e.animate(i,u,o,p);if(!e.length)return t.animate(r,u,o,p);s=e.show().outerHeight(),t.animate(r,{duration:u,easing:o,step:function(e,t){t.now=Math.round(e)}}),e.hide().animate(i,{duration:u,easing:o,complete:p,step:function(e,n){n.now=Math.round(e),n.prop!==\"height\"?f+=n.now:a.options.heightStyle!==\"content\"&&(n.now=Math.round(s-t.outerHeight()-f),f=0)}})},_toggleComplete:function(e){var t=e.oldPanel;t.removeClass(\"ui-accordion-content-active\").prev().removeClass(\"ui-corner-top\").addClass(\"ui-corner-all\"),t.length&&(t.parent()[0].className=t.parent()[0].className),this._trigger(\"activate\",null,e)}})})(jQuery);(function(e,t){var n=0;e.widget(\"ui.autocomplete\",{version:\"1.10.0\",defaultElement:\"<input>\",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:\"left top\",at:\"left bottom\",collision:\"none\"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},pending:0,_create:function(){var t,n,r;this.isMultiLine=this._isMultiLine(),this.valueMethod=this.element[this.element.is(\"input,textarea\")?\"val\":\"text\"],this.isNewMenu=!0,this.element.addClass(\"ui-autocomplete-input\").attr(\"autocomplete\",\"off\"),this._on(this.element,{keydown:function(i){if(this.element.prop(\"readOnly\")){t=!0,r=!0,n=!0;return}t=!1,r=!1,n=!1;var s=e.ui.keyCode;switch(i.keyCode){case s.PAGE_UP:t=!0,this._move(\"previousPage\",i);break;case s.PAGE_DOWN:t=!0,this._move(\"nextPage\",i);break;case s.UP:t=!0,this._keyEvent(\"previous\",i);break;case s.DOWN:t=!0,this._keyEvent(\"next\",i);break;case s.ENTER:case s.NUMPAD_ENTER:this.menu.active&&(t=!0,i.preventDefault(),this.menu.select(i));break;case s.TAB:this.menu.active&&this.menu.select(i);break;case s.ESCAPE:this.menu.element.is(\":visible\")&&(this._value(this.term),this.close(i),i.preventDefault());break;default:n=!0,this._searchTimeout(i)}},keypress:function(r){if(t){t=!1,r.preventDefault();return}if(n)return;var i=e.ui.keyCode;switch(r.keyCode){case i.PAGE_UP:this._move(\"previousPage\",r);break;case i.PAGE_DOWN:this._move(\"nextPage\",r);break;case i.UP:this._keyEvent(\"previous\",r);break;case i.DOWN:this._keyEvent(\"next\",r)}},input:function(e){if(r){r=!1,e.preventDefault();return}this._searchTimeout(e)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){if(this.cancelBlur){delete this.cancelBlur;return}clearTimeout(this.searching),this.close(e),this._change(e)}}),this._initSource(),this.menu=e(\"<ul>\").addClass(\"ui-autocomplete\").appendTo(this._appendTo()).menu({input:e(),role:null}).zIndex(this.element.zIndex()+1).hide().data(\"ui-menu\"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var n=this.menu.element[0];e(t.target).closest(\".ui-menu-item\").length||this._delay(function(){var t=this;this.document.one(\"mousedown\",function(r){r.target!==t.element[0]&&r.target!==n&&!e.contains(n,r.target)&&t.close()})})},menufocus:function(t,n){if(this.isNewMenu){this.isNewMenu=!1;if(t.originalEvent&&/^mouse/.test(t.originalEvent.type)){this.menu.blur(),this.document.one(\"mousemove\",function(){e(t.target).trigger(t.originalEvent)});return}}var r=n.item.data(\"ui-autocomplete-item\");!1!==this._trigger(\"focus\",t,{item:r})?t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(r.value):this.liveRegion.text(r.value)},menuselect:function(e,t){var n=t.item.data(\"ui-autocomplete-item\"),r=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=r,this._delay(function(){this.previous=r,this.selectedItem=n})),!1!==this._trigger(\"select\",e,{item:n})&&this._value(n.value),this.term=this._value(),this.close(e),this.selectedItem=n}}),this.liveRegion=e(\"<span>\",{role:\"status\",\"aria-live\":\"polite\"}).addClass(\"ui-helper-hidden-accessible\").insertAfter(this.element),this._on(this.window,{beforeunload:function(){this.element.removeAttr(\"autocomplete\")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass(\"ui-autocomplete-input\").removeAttr(\"autocomplete\"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),e===\"source\"&&this._initSource(),e===\"appendTo\"&&this.menu.element.appendTo(this._appendTo()),e===\"disabled\"&&t&&this.xhr&&this.xhr.abort()},_appendTo:function(){var t=this.options.appendTo;return t&&(t=t.jquery||t.nodeType?e(t):this.document.find(t).eq(0)),t||(t=this.element.closest(\".ui-front\")),t.length||(t=this.document[0].body),t},_isMultiLine:function(){return this.element.is(\"textarea\")?!0:this.element.is(\"input\")?!1:this.element.prop(\"isContentEditable\")},_initSource:function(){var t,n,r=this;e.isArray(this.options.source)?(t=this.options.source,this.source=function(n,r){r(e.ui.autocomplete.filter(t,n.term))}):typeof this.options.source==\"string\"?(n=this.options.source,this.source=function(t,i){r.xhr&&r.xhr.abort(),r.xhr=e.ajax({url:n,data:t,dataType:\"json\",success:function(e){i(e)},error:function(){i([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,e))},this.options.delay)},search:function(e,t){e=e!=null?e:this._value(),this.term=this._value();if(e.length<this.options.minLength)return this.close(t);if(this._trigger(\"search\",t)===!1)return;return this._search(e)},_search:function(e){this.pending++,this.element.addClass(\"ui-autocomplete-loading\"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var e=this,t=++n;return function(r){t===n&&e.__response(r),e.pending--,e.pending||e.element.removeClass(\"ui-autocomplete-loading\")}},__response:function(e){e&&(e=this._normalize(e)),this._trigger(\"response\",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger(\"open\")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this.menu.element.is(\":visible\")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger(\"close\",e))},_change:function(e){this.previous!==this._value()&&this._trigger(\"change\",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,function(t){return typeof t==\"string\"?{label:t,value:t}:e.extend({label:t.label||t.value,value:t.value||t.label},t)})},_suggest:function(t){var n=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(n,t),this.menu.refresh(),n.show(),this._resizeMenu(),n.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width(\"\").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,n){var r=this;e.each(n,function(e,n){r._renderItemData(t,n)})},_renderItemData:function(e,t){return this._renderItem(e,t).data(\"ui-autocomplete-item\",t)},_renderItem:function(t,n){return e(\"<li>\").append(e(\"<a>\").text(n.label)).appendTo(t)},_move:function(e,t){if(!this.menu.element.is(\":visible\")){this.search(null,t);return}if(this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)){this._value(this.term),this.menu.blur();return}this.menu[e](t)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){if(!this.isMultiLine||this.menu.element.is(\":visible\"))this._move(e,t),t.preventDefault()}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\")},filter:function(t,n){var r=new RegExp(e.ui.autocomplete.escapeRegex(n),\"i\");return e.grep(t,function(e){return r.test(e.label||e.value||e)})}}),e.widget(\"ui.autocomplete\",e.ui.autocomplete,{options:{messages:{noResults:\"No search results.\",results:function(e){return e+(e>1?\" results are\":\" result is\")+\" available, use up and down arrow keys to navigate.\"}}},__response:function(e){var t;this._superApply(arguments);if(this.options.disabled||this.cancelSearch)return;e&&e.length?t=this.options.messages.results(e.length):t=this.options.messages.noResults,this.liveRegion.text(t)}})})(jQuery);(function(e,t){var n,r,i,s,o=\"ui-button ui-widget ui-state-default ui-corner-all\",u=\"ui-state-hover ui-state-active \",a=\"ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only\",f=function(){var t=e(this).find(\":ui-button\");setTimeout(function(){t.button(\"refresh\")},1)},l=function(t){var n=t.name,r=t.form,i=e([]);return n&&(n=n.replace(/'/g,\"\\\\'\"),r?i=e(r).find(\"[name='\"+n+\"']\"):i=e(\"[name='\"+n+\"']\",t.ownerDocument).filter(function(){return!this.form})),i};e.widget(\"ui.button\",{version:\"1.10.0\",defaultElement:\"<button>\",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest(\"form\").unbind(\"reset\"+this.eventNamespace).bind(\"reset\"+this.eventNamespace,f),typeof this.options.disabled!=\"boolean\"?this.options.disabled=!!this.element.prop(\"disabled\"):this.element.prop(\"disabled\",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr(\"title\");var t=this,u=this.options,a=this.type===\"checkbox\"||this.type===\"radio\",c=a?\"\":\"ui-state-active\",h=\"ui-state-focus\";u.label===null&&(u.label=this.type===\"input\"?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(o).attr(\"role\",\"button\").bind(\"mouseenter\"+this.eventNamespace,function(){if(u.disabled)return;this===n&&e(this).addClass(\"ui-state-active\")}).bind(\"mouseleave\"+this.eventNamespace,function(){if(u.disabled)return;e(this).removeClass(c)}).bind(\"click\"+this.eventNamespace,function(e){u.disabled&&(e.preventDefault(),e.stopImmediatePropagation())}),this.element.bind(\"focus\"+this.eventNamespace,function(){t.buttonElement.addClass(h)}).bind(\"blur\"+this.eventNamespace,function(){t.buttonElement.removeClass(h)}),a&&(this.element.bind(\"change\"+this.eventNamespace,function(){if(s)return;t.refresh()}),this.buttonElement.bind(\"mousedown\"+this.eventNamespace,function(e){if(u.disabled)return;s=!1,r=e.pageX,i=e.pageY}).bind(\"mouseup\"+this.eventNamespace,function(e){if(u.disabled)return;if(r!==e.pageX||i!==e.pageY)s=!0})),this.type===\"checkbox\"?this.buttonElement.bind(\"click\"+this.eventNamespace,function(){if(u.disabled||s)return!1}):this.type===\"radio\"?this.buttonElement.bind(\"click\"+this.eventNamespace,function(){if(u.disabled||s)return!1;e(this).addClass(\"ui-state-active\"),t.buttonElement.attr(\"aria-pressed\",\"true\");var n=t.element[0];l(n).not(n).map(function(){return e(this).button(\"widget\")[0]}).removeClass(\"ui-state-active\").attr(\"aria-pressed\",\"false\")}):(this.buttonElement.bind(\"mousedown\"+this.eventNamespace,function(){if(u.disabled)return!1;e(this).addClass(\"ui-state-active\"),n=this,t.document.one(\"mouseup\",function(){n=null})}).bind(\"mouseup\"+this.eventNamespace,function(){if(u.disabled)return!1;e(this).removeClass(\"ui-state-active\")}).bind(\"keydown\"+this.eventNamespace,function(t){if(u.disabled)return!1;(t.keyCode===e.ui.keyCode.SPACE||t.keyCode===e.ui.keyCode.ENTER)&&e(this).addClass(\"ui-state-active\")}).bind(\"keyup\"+this.eventNamespace+\" blur\"+this.eventNamespace,function(){e(this).removeClass(\"ui-state-active\")}),this.buttonElement.is(\"a\")&&this.buttonElement.keyup(function(t){t.keyCode===e.ui.keyCode.SPACE&&e(this).click()})),this._setOption(\"disabled\",u.disabled),this._resetButton()},_determineButtonType:function(){var e,t,n;this.element.is(\"[type=checkbox]\")?this.type=\"checkbox\":this.element.is(\"[type=radio]\")?this.type=\"radio\":this.element.is(\"input\")?this.type=\"input\":this.type=\"button\",this.type===\"checkbox\"||this.type===\"radio\"?(e=this.element.parents().last(),t=\"label[for='\"+this.element.attr(\"id\")+\"']\",this.buttonElement=e.find(t),this.buttonElement.length||(e=e.length?e.siblings():this.element.siblings(),this.buttonElement=e.filter(t),this.buttonElement.length||(this.buttonElement=e.find(t))),this.element.addClass(\"ui-helper-hidden-accessible\"),n=this.element.is(\":checked\"),n&&this.buttonElement.addClass(\"ui-state-active\"),this.buttonElement.prop(\"aria-pressed\",n)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass(\"ui-helper-hidden-accessible\"),this.buttonElement.removeClass(o+\" \"+u+\" \"+a).removeAttr(\"role\").removeAttr(\"aria-pressed\").html(this.buttonElement.find(\".ui-button-text\").html()),this.hasTitle||this.buttonElement.removeAttr(\"title\")},_setOption:function(e,t){this._super(e,t);if(e===\"disabled\"){t?this.element.prop(\"disabled\",!0):this.element.prop(\"disabled\",!1);return}this._resetButton()},refresh:function(){var t=this.element.is(\"input, button\")?this.element.is(\":disabled\"):this.element.hasClass(\"ui-button-disabled\");t!==this.options.disabled&&this._setOption(\"disabled\",t),this.type===\"radio\"?l(this.element[0]).each(function(){e(this).is(\":checked\")?e(this).button(\"widget\").addClass(\"ui-state-active\").attr(\"aria-pressed\",\"true\"):e(this).button(\"widget\").removeClass(\"ui-state-active\").attr(\"aria-pressed\",\"false\")}):this.type===\"checkbox\"&&(this.element.is(\":checked\")?this.buttonElement.addClass(\"ui-state-active\").attr(\"aria-pressed\",\"true\"):this.buttonElement.removeClass(\"ui-state-active\").attr(\"aria-pressed\",\"false\"))},_resetButton:function(){if(this.type===\"input\"){this.options.label&&this.element.val(this.options.label);return}var t=this.buttonElement.removeClass(a),n=e(\"<span></span>\",this.document[0]).addClass(\"ui-button-text\").html(this.options.label).appendTo(t.empty()).text(),r=this.options.icons,i=r.primary&&r.secondary,s=[];r.primary||r.secondary?(this.options.text&&s.push(\"ui-button-text-icon\"+(i?\"s\":r.primary?\"-primary\":\"-secondary\")),r.primary&&t.prepend(\"<span class='ui-button-icon-primary ui-icon \"+r.primary+\"'></span>\"),r.secondary&&t.append(\"<span class='ui-button-icon-secondary ui-icon \"+r.secondary+\"'></span>\"),this.options.text||(s.push(i?\"ui-button-icons-only\":\"ui-button-icon-only\"),this.hasTitle||t.attr(\"title\",e.trim(n)))):s.push(\"ui-button-text-only\"),t.addClass(s.join(\" \"))}}),e.widget(\"ui.buttonset\",{version:\"1.10.0\",options:{items:\"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)\"},_create:function(){this.element.addClass(\"ui-buttonset\")},_init:function(){this.refresh()},_setOption:function(e,t){e===\"disabled\"&&this.buttons.button(\"option\",e,t),this._super(e,t)},refresh:function(){var t=this.element.css(\"direction\")===\"rtl\";this.buttons=this.element.find(this.options.items).filter(\":ui-button\").button(\"refresh\").end().not(\":ui-button\").button().end().map(function(){return e(this).button(\"widget\")[0]}).removeClass(\"ui-corner-all ui-corner-left ui-corner-right\").filter(\":first\").addClass(t?\"ui-corner-right\":\"ui-corner-left\").end().filter(\":last\").addClass(t?\"ui-corner-left\":\"ui-corner-right\").end().end()},_destroy:function(){this.element.removeClass(\"ui-buttonset\"),this.buttons.map(function(){return e(this).button(\"widget\")[0]}).removeClass(\"ui-corner-left ui-corner-right\").end().button(\"destroy\")}})})(jQuery);(function(e,t){function s(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId=\"ui-datepicker-div\",this._inlineClass=\"ui-datepicker-inline\",this._appendClass=\"ui-datepicker-append\",this._triggerClass=\"ui-datepicker-trigger\",this._dialogClass=\"ui-datepicker-dialog\",this._disableClass=\"ui-datepicker-disabled\",this._unselectableClass=\"ui-datepicker-unselectable\",this._currentClass=\"ui-datepicker-current-day\",this._dayOverClass=\"ui-datepicker-days-cell-over\",this.regional=[],this.regional[\"\"]={closeText:\"Done\",prevText:\"Prev\",nextText:\"Next\",currentText:\"Today\",monthNames:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],monthNamesShort:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],dayNames:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],dayNamesShort:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],dayNamesMin:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],weekHeader:\"Wk\",dateFormat:\"mm/dd/yy\",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:\"\"},this._defaults={showOn:\"focus\",showAnim:\"fadeIn\",showOptions:{},defaultDate:null,appendText:\"\",buttonText:\"...\",buttonImage:\"\",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:\"c-10:c+10\",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:\"+10\",minDate:null,maxDate:null,duration:\"fast\",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:\"\",altFormat:\"\",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},e.extend(this._defaults,this.regional[\"\"]),this.dpDiv=o(e(\"<div id='\"+this._mainDivId+\"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\"))}function o(t){var n=\"button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a\";return t.delegate(n,\"mouseout\",function(){e(this).removeClass(\"ui-state-hover\"),this.className.indexOf(\"ui-datepicker-prev\")!==-1&&e(this).removeClass(\"ui-datepicker-prev-hover\"),this.className.indexOf(\"ui-datepicker-next\")!==-1&&e(this).removeClass(\"ui-datepicker-next-hover\")}).delegate(n,\"mouseover\",function(){e.datepicker._isDisabledDatepicker(i.inline?t.parent()[0]:i.input[0])||(e(this).parents(\".ui-datepicker-calendar\").find(\"a\").removeClass(\"ui-state-hover\"),e(this).addClass(\"ui-state-hover\"),this.className.indexOf(\"ui-datepicker-prev\")!==-1&&e(this).addClass(\"ui-datepicker-prev-hover\"),this.className.indexOf(\"ui-datepicker-next\")!==-1&&e(this).addClass(\"ui-datepicker-next-hover\"))})}function u(t,n){e.extend(t,n);for(var r in n)n[r]==null&&(t[r]=n[r]);return t}e.extend(e.ui,{datepicker:{version:\"1.10.0\"}});var n=\"datepicker\",r=(new Date).getTime(),i;e.extend(s.prototype,{markerClassName:\"hasDatepicker\",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return u(this._defaults,e||{}),this},_attachDatepicker:function(t,n){var r,i,s;r=t.nodeName.toLowerCase(),i=r===\"div\"||r===\"span\",t.id||(this.uuid+=1,t.id=\"dp\"+this.uuid),s=this._newInst(e(t),i),s.settings=e.extend({},n||{}),r===\"input\"?this._connectDatepicker(t,s):i&&this._inlineDatepicker(t,s)},_newInst:function(t,n){var r=t[0].id.replace(/([^A-Za-z0-9_\\-])/g,\"\\\\\\\\$1\");return{id:r,input:t,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:n,dpDiv:n?o(e(\"<div class='\"+this._inlineClass+\" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\")):this.dpDiv}},_connectDatepicker:function(t,r){var i=e(t);r.append=e([]),r.trigger=e([]);if(i.hasClass(this.markerClassName))return;this._attachments(i,r),i.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp),this._autoSize(r),e.data(t,n,r),r.settings.disabled&&this._disableDatepicker(t)},_attachments:function(t,n){var r,i,s,o=this._get(n,\"appendText\"),u=this._get(n,\"isRTL\");n.append&&n.append.remove(),o&&(n.append=e(\"<span class='\"+this._appendClass+\"'>\"+o+\"</span>\"),t[u?\"before\":\"after\"](n.append)),t.unbind(\"focus\",this._showDatepicker),n.trigger&&n.trigger.remove(),r=this._get(n,\"showOn\"),(r===\"focus\"||r===\"both\")&&t.focus(this._showDatepicker);if(r===\"button\"||r===\"both\")i=this._get(n,\"buttonText\"),s=this._get(n,\"buttonImage\"),n.trigger=e(this._get(n,\"buttonImageOnly\")?e(\"<img/>\").addClass(this._triggerClass).attr({src:s,alt:i,title:i}):e(\"<button type='button'></button>\").addClass(this._triggerClass).html(s?e(\"<img/>\").attr({src:s,alt:i,title:i}):i)),t[u?\"before\":\"after\"](n.trigger),n.trigger.click(function(){return e.datepicker._datepickerShowing&&e.datepicker._lastInput===t[0]?e.datepicker._hideDatepicker():e.datepicker._datepickerShowing&&e.datepicker._lastInput!==t[0]?(e.datepicker._hideDatepicker(),e.datepicker._showDatepicker(t[0])):e.datepicker._showDatepicker(t[0]),!1})},_autoSize:function(e){if(this._get(e,\"autoSize\")&&!e.inline){var t,n,r,i,s=new Date(2009,11,20),o=this._get(e,\"dateFormat\");o.match(/[DM]/)&&(t=function(e){n=0,r=0;for(i=0;i<e.length;i++)e[i].length>n&&(n=e[i].length,r=i);return r},s.setMonth(t(this._get(e,o.match(/MM/)?\"monthNames\":\"monthNamesShort\"))),s.setDate(t(this._get(e,o.match(/DD/)?\"dayNames\":\"dayNamesShort\"))+20-s.getDay())),e.input.attr(\"size\",this._formatDate(e,s).length)}},_inlineDatepicker:function(t,r){var i=e(t);if(i.hasClass(this.markerClassName))return;i.addClass(this.markerClassName).append(r.dpDiv),e.data(t,n,r),this._setDate(r,this._getDefaultDate(r),!0),this._updateDatepicker(r),this._updateAlternate(r),r.settings.disabled&&this._disableDatepicker(t),r.dpDiv.css(\"display\",\"block\")},_dialogDatepicker:function(t,r,i,s,o){var a,f,l,c,h,p=this._dialogInst;return p||(this.uuid+=1,a=\"dp\"+this.uuid,this._dialogInput=e(\"<input type='text' id='\"+a+\"' style='position: absolute; top: -100px; width: 0px;'/>\"),this._dialogInput.keydown(this._doKeyDown),e(\"body\").append(this._dialogInput),p=this._dialogInst=this._newInst(this._dialogInput,!1),p.settings={},e.data(this._dialogInput[0],n,p)),u(p.settings,s||{}),r=r&&r.constructor===Date?this._formatDate(p,r):r,this._dialogInput.val(r),this._pos=o?o.length?o:[o.pageX,o.pageY]:null,this._pos||(f=document.documentElement.clientWidth,l=document.documentElement.clientHeight,c=document.documentElement.scrollLeft||document.body.scrollLeft,h=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[f/2-100+c,l/2-150+h]),this._dialogInput.css(\"left\",this._pos[0]+20+\"px\").css(\"top\",this._pos[1]+\"px\"),p.settings.onSelect=i,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),e.blockUI&&e.blockUI(this.dpDiv),e.data(this._dialogInput[0],n,p),this},_destroyDatepicker:function(t){var r,i=e(t),s=e.data(t,n);if(!i.hasClass(this.markerClassName))return;r=t.nodeName.toLowerCase(),e.removeData(t,n),r===\"input\"?(s.append.remove(),s.trigger.remove(),i.removeClass(this.markerClassName).unbind(\"focus\",this._showDatepicker).unbind(\"keydown\",this._doKeyDown).unbind(\"keypress\",this._doKeyPress).unbind(\"keyup\",this._doKeyUp)):(r===\"div\"||r===\"span\")&&i.removeClass(this.markerClassName).empty()},_enableDatepicker:function(t){var r,i,s=e(t),o=e.data(t,n);if(!s.hasClass(this.markerClassName))return;r=t.nodeName.toLowerCase();if(r===\"input\")t.disabled=!1,o.trigger.filter(\"button\").each(function(){this.disabled=!1}).end().filter(\"img\").css({opacity:\"1.0\",cursor:\"\"});else if(r===\"div\"||r===\"span\")i=s.children(\".\"+this._inlineClass),i.children().removeClass(\"ui-state-disabled\"),i.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\",!1);this._disabledInputs=e.map(this._disabledInputs,function(e){return e===t?null:e})},_disableDatepicker:function(t){var r,i,s=e(t),o=e.data(t,n);if(!s.hasClass(this.markerClassName))return;r=t.nodeName.toLowerCase();if(r===\"input\")t.disabled=!0,o.trigger.filter(\"button\").each(function(){this.disabled=!0}).end().filter(\"img\").css({opacity:\"0.5\",cursor:\"default\"});else if(r===\"div\"||r===\"span\")i=s.children(\".\"+this._inlineClass),i.children().addClass(\"ui-state-disabled\"),i.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\",!0);this._disabledInputs=e.map(this._disabledInputs,function(e){return e===t?null:e}),this._disabledInputs[this._disabledInputs.length]=t},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;t<this._disabledInputs.length;t++)if(this._disabledInputs[t]===e)return!0;return!1},_getInst:function(t){try{return e.data(t,n)}catch(r){throw\"Missing instance data for this datepicker\"}},_optionDatepicker:function(n,r,i){var s,o,a,f,l=this._getInst(n);if(arguments.length===2&&typeof r==\"string\")return r===\"defaults\"?e.extend({},e.datepicker._defaults):l?r===\"all\"?e.extend({},l.settings):this._get(l,r):null;s=r||{},typeof r==\"string\"&&(s={},s[r]=i),l&&(this._curInst===l&&this._hideDatepicker(),o=this._getDateDatepicker(n,!0),a=this._getMinMaxDate(l,\"min\"),f=this._getMinMaxDate(l,\"max\"),u(l.settings,s),a!==null&&s.dateFormat!==t&&s.minDate===t&&(l.settings.minDate=this._formatDate(l,a)),f!==null&&s.dateFormat!==t&&s.maxDate===t&&(l.settings.maxDate=this._formatDate(l,f)),\"disabled\"in s&&(s.disabled?this._disableDatepicker(n):this._enableDatepicker(n)),this._attachments(e(n),l),this._autoSize(l),this._setDate(l,o),this._updateAlternate(l),this._updateDatepicker(l))},_changeDatepicker:function(e,t,n){this._optionDatepicker(e,t,n)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var n=this._getInst(e);n&&(this._setDate(n,t),this._updateDatepicker(n),this._updateAlternate(n))},_getDateDatepicker:function(e,t){var n=this._getInst(e);return n&&!n.inline&&this._setDateFromField(n,t),n?this._getDate(n):null},_doKeyDown:function(t){var n,r,i,s=e.datepicker._getInst(t.target),o=!0,u=s.dpDiv.is(\".ui-datepicker-rtl\");s._keyEvent=!0;if(e.datepicker._datepickerShowing)switch(t.keyCode){case 9:e.datepicker._hideDatepicker(),o=!1;break;case 13:return i=e(\"td.\"+e.datepicker._dayOverClass+\":not(.\"+e.datepicker._currentClass+\")\",s.dpDiv),i[0]&&e.datepicker._selectDay(t.target,s.selectedMonth,s.selectedYear,i[0]),n=e.datepicker._get(s,\"onSelect\"),n?(r=e.datepicker._formatDate(s),n.apply(s.input?s.input[0]:null,[r,s])):e.datepicker._hideDatepicker(),!1;case 27:e.datepicker._hideDatepicker();break;case 33:e.datepicker._adjustDate(t.target,t.ctrlKey?-e.datepicker._get(s,\"stepBigMonths\"):-e.datepicker._get(s,\"stepMonths\"),\"M\");break;case 34:e.datepicker._adjustDate(t.target,t.ctrlKey?+e.datepicker._get(s,\"stepBigMonths\"):+e.datepicker._get(s,\"stepMonths\"),\"M\");break;case 35:(t.ctrlKey||t.metaKey)&&e.datepicker._clearDate(t.target),o=t.ctrlKey||t.metaKey;break;case 36:(t.ctrlKey||t.metaKey)&&e.datepicker._gotoToday(t.target),o=t.ctrlKey||t.metaKey;break;case 37:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,u?1:-1,\"D\"),o=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&e.datepicker._adjustDate(t.target,t.ctrlKey?-e.datepicker._get(s,\"stepBigMonths\"):-e.datepicker._get(s,\"stepMonths\"),\"M\");break;case 38:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,-7,\"D\"),o=t.ctrlKey||t.metaKey;break;case 39:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,u?-1:1,\"D\"),o=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&e.datepicker._adjustDate(t.target,t.ctrlKey?+e.datepicker._get(s,\"stepBigMonths\"):+e.datepicker._get(s,\"stepMonths\"),\"M\");break;case 40:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,7,\"D\"),o=t.ctrlKey||t.metaKey;break;default:o=!1}else t.keyCode===36&&t.ctrlKey?e.datepicker._showDatepicker(this):o=!1;o&&(t.preventDefault(),t.stopPropagation())},_doKeyPress:function(t){var n,r,i=e.datepicker._getInst(t.target);if(e.datepicker._get(i,\"constrainInput\"))return n=e.datepicker._possibleChars(e.datepicker._get(i,\"dateFormat\")),r=String.fromCharCode(t.charCode==null?t.keyCode:t.charCode),t.ctrlKey||t.metaKey||r<\" \"||!n||n.indexOf(r)>-1},_doKeyUp:function(t){var n,r=e.datepicker._getInst(t.target);if(r.input.val()!==r.lastVal)try{n=e.datepicker.parseDate(e.datepicker._get(r,\"dateFormat\"),r.input?r.input.val():null,e.datepicker._getFormatConfig(r)),n&&(e.datepicker._setDateFromField(r),e.datepicker._updateAlternate(r),e.datepicker._updateDatepicker(r))}catch(i){}return!0},_showDatepicker:function(t){t=t.target||t,t.nodeName.toLowerCase()!==\"input\"&&(t=e(\"input\",t.parentNode)[0]);if(e.datepicker._isDisabledDatepicker(t)||e.datepicker._lastInput===t)return;var n,r,i,s,o,a,f;n=e.datepicker._getInst(t),e.datepicker._curInst&&e.datepicker._curInst!==n&&(e.datepicker._curInst.dpDiv.stop(!0,!0),n&&e.datepicker._datepickerShowing&&e.datepicker._hideDatepicker(e.datepicker._curInst.input[0])),r=e.datepicker._get(n,\"beforeShow\"),i=r?r.apply(t,[t,n]):{};if(i===!1)return;u(n.settings,i),n.lastVal=null,e.datepicker._lastInput=t,e.datepicker._setDateFromField(n),e.datepicker._inDialog&&(t.value=\"\"),e.datepicker._pos||(e.datepicker._pos=e.datepicker._findPos(t),e.datepicker._pos[1]+=t.offsetHeight),s=!1,e(t).parents().each(function(){return s|=e(this).css(\"position\")===\"fixed\",!s}),o={left:e.datepicker._pos[0],top:e.datepicker._pos[1]},e.datepicker._pos=null,n.dpDiv.empty(),n.dpDiv.css({position:\"absolute\",display:\"block\",top:\"-1000px\"}),e.datepicker._updateDatepicker(n),o=e.datepicker._checkOffset(n,o,s),n.dpDiv.css({position:e.datepicker._inDialog&&e.blockUI?\"static\":s?\"fixed\":\"absolute\",display:\"none\",left:o.left+\"px\",top:o.top+\"px\"}),n.inline||(a=e.datepicker._get(n,\"showAnim\"),f=e.datepicker._get(n,\"duration\"),n.dpDiv.zIndex(e(t).zIndex()+1),e.datepicker._datepickerShowing=!0,e.effects&&e.effects.effect[a]?n.dpDiv.show(a,e.datepicker._get(n,\"showOptions\"),f):n.dpDiv[a||\"show\"](a?f:null),n.input.is(\":visible\")&&!n.input.is(\":disabled\")&&n.input.focus(),e.datepicker._curInst=n)},_updateDatepicker:function(t){this.maxRows=4,i=t,t.dpDiv.empty().append(this._generateHTML(t)),this._attachHandlers(t),t.dpDiv.find(\".\"+this._dayOverClass+\" a\").mouseover();var n,r=this._getNumberOfMonths(t),s=r[1],o=17;t.dpDiv.removeClass(\"ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4\").width(\"\"),s>1&&t.dpDiv.addClass(\"ui-datepicker-multi-\"+s).css(\"width\",o*s+\"em\"),t.dpDiv[(r[0]!==1||r[1]!==1?\"add\":\"remove\")+\"Class\"](\"ui-datepicker-multi\"),t.dpDiv[(this._get(t,\"isRTL\")?\"add\":\"remove\")+\"Class\"](\"ui-datepicker-rtl\"),t===e.datepicker._curInst&&e.datepicker._datepickerShowing&&t.input&&t.input.is(\":visible\")&&!t.input.is(\":disabled\")&&t.input[0]!==document.activeElement&&t.input.focus(),t.yearshtml&&(n=t.yearshtml,setTimeout(function(){n===t.yearshtml&&t.yearshtml&&t.dpDiv.find(\"select.ui-datepicker-year:first\").replaceWith(t.yearshtml),n=t.yearshtml=null},0))},_getBorders:function(e){var t=function(e){return{thin:1,medium:2,thick:3}[e]||e};return[parseFloat(t(e.css(\"border-left-width\"))),parseFloat(t(e.css(\"border-top-width\")))]},_checkOffset:function(t,n,r){var i=t.dpDiv.outerWidth(),s=t.dpDiv.outerHeight(),o=t.input?t.input.outerWidth():0,u=t.input?t.input.outerHeight():0,a=document.documentElement.clientWidth+(r?0:e(document).scrollLeft()),f=document.documentElement.clientHeight+(r?0:e(document).scrollTop());return n.left-=this._get(t,\"isRTL\")?i-o:0,n.left-=r&&n.left===t.input.offset().left?e(document).scrollLeft():0,n.top-=r&&n.top===t.input.offset().top+u?e(document).scrollTop():0,n.left-=Math.min(n.left,n.left+i>a&&a>i?Math.abs(n.left+i-a):0),n.top-=Math.min(n.top,n.top+s>f&&f>s?Math.abs(s+u):0),n},_findPos:function(t){var n,r=this._getInst(t),i=this._get(r,\"isRTL\");while(t&&(t.type===\"hidden\"||t.nodeType!==1||e.expr.filters.hidden(t)))t=t[i?\"previousSibling\":\"nextSibling\"];return n=e(t).offset(),[n.left,n.top]},_hideDatepicker:function(t){var r,i,s,o,u=this._curInst;if(!u||t&&u!==e.data(t,n))return;this._datepickerShowing&&(r=this._get(u,\"showAnim\"),i=this._get(u,\"duration\"),s=function(){e.datepicker._tidyDialog(u)},e.effects&&(e.effects.effect[r]||e.effects[r])?u.dpDiv.hide(r,e.datepicker._get(u,\"showOptions\"),i,s):u.dpDiv[r===\"slideDown\"?\"slideUp\":r===\"fadeIn\"?\"fadeOut\":\"hide\"](r?i:null,s),r||s(),this._datepickerShowing=!1,o=this._get(u,\"onClose\"),o&&o.apply(u.input?u.input[0]:null,[u.input?u.input.val():\"\",u]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:\"absolute\",left:\"0\",top:\"-100px\"}),e.blockUI&&(e.unblockUI(),e(\"body\").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(\".ui-datepicker-calendar\")},_checkExternalClick:function(t){if(!e.datepicker._curInst)return;var n=e(t.target),r=e.datepicker._getInst(n[0]);(n[0].id!==e.datepicker._mainDivId&&n.parents(\"#\"+e.datepicker._mainDivId).length===0&&!n.hasClass(e.datepicker.markerClassName)&&!n.closest(\".\"+e.datepicker._triggerClass).length&&e.datepicker._datepickerShowing&&(!e.datepicker._inDialog||!e.blockUI)||n.hasClass(e.datepicker.markerClassName)&&e.datepicker._curInst!==r)&&e.datepicker._hideDatepicker()},_adjustDate:function(t,n,r){var i=e(t),s=this._getInst(i[0]);if(this._isDisabledDatepicker(i[0]))return;this._adjustInstDate(s,n+(r===\"M\"?this._get(s,\"showCurrentAtPos\"):0),r),this._updateDatepicker(s)},_gotoToday:function(t){var n,r=e(t),i=this._getInst(r[0]);this._get(i,\"gotoCurrent\")&&i.currentDay?(i.selectedDay=i.currentDay,i.drawMonth=i.selectedMonth=i.currentMonth,i.drawYear=i.selectedYear=i.currentYear):(n=new Date,i.selectedDay=n.getDate(),i.drawMonth=i.selectedMonth=n.getMonth(),i.drawYear=i.selectedYear=n.getFullYear()),this._notifyChange(i),this._adjustDate(r)},_selectMonthYear:function(t,n,r){var i=e(t),s=this._getInst(i[0]);s[\"selected\"+(r===\"M\"?\"Month\":\"Year\")]=s[\"draw\"+(r===\"M\"?\"Month\":\"Year\")]=parseInt(n.options[n.selectedIndex].value,10),this._notifyChange(s),this._adjustDate(i)},_selectDay:function(t,n,r,i){var s,o=e(t);if(e(i).hasClass(this._unselectableClass)||this._isDisabledDatepicker(o[0]))return;s=this._getInst(o[0]),s.selectedDay=s.currentDay=e(\"a\",i).html(),s.selectedMonth=s.currentMonth=n,s.selectedYear=s.currentYear=r,this._selectDate(t,this._formatDate(s,s.currentDay,s.currentMonth,s.currentYear))},_clearDate:function(t){var n=e(t);this._selectDate(n,\"\")},_selectDate:function(t,n){var r,i=e(t),s=this._getInst(i[0]);n=n!=null?n:this._formatDate(s),s.input&&s.input.val(n),this._updateAlternate(s),r=this._get(s,\"onSelect\"),r?r.apply(s.input?s.input[0]:null,[n,s]):s.input&&s.input.trigger(\"change\"),s.inline?this._updateDatepicker(s):(this._hideDatepicker(),this._lastInput=s.input[0],typeof s.input[0]!=\"object\"&&s.input.focus(),this._lastInput=null)},_updateAlternate:function(t){var n,r,i,s=this._get(t,\"altField\");s&&(n=this._get(t,\"altFormat\")||this._get(t,\"dateFormat\"),r=this._getDate(t),i=this.formatDate(n,r,this._getFormatConfig(t)),e(s).each(function(){e(this).val(i)}))},noWeekends:function(e){var t=e.getDay();return[t>0&&t<6,\"\"]},iso8601Week:function(e){var t,n=new Date(e.getTime());return n.setDate(n.getDate()+4-(n.getDay()||7)),t=n.getTime(),n.setMonth(0),n.setDate(1),Math.floor(Math.round((t-n)/864e5)/7)+1},parseDate:function(t,n,r){if(t==null||n==null)throw\"Invalid arguments\";n=typeof n==\"object\"?n.toString():n+\"\";if(n===\"\")return null;var i,s,o,u=0,a=(r?r.shortYearCutoff:null)||this._defaults.shortYearCutoff,f=typeof a!=\"string\"?a:(new Date).getFullYear()%100+parseInt(a,10),l=(r?r.dayNamesShort:null)||this._defaults.dayNamesShort,c=(r?r.dayNames:null)||this._defaults.dayNames,h=(r?r.monthNamesShort:null)||this._defaults.monthNamesShort,p=(r?r.monthNames:null)||this._defaults.monthNames,d=-1,v=-1,m=-1,g=-1,y=!1,b,w=function(e){var n=i+1<t.length&&t.charAt(i+1)===e;return n&&i++,n},E=function(e){var t=w(e),r=e===\"@\"?14:e===\"!\"?20:e===\"y\"&&t?4:e===\"o\"?3:2,i=new RegExp(\"^\\\\d{1,\"+r+\"}\"),s=n.substring(u).match(i);if(!s)throw\"Missing number at position \"+u;return u+=s[0].length,parseInt(s[0],10)},S=function(t,r,i){var s=-1,o=e.map(w(t)?i:r,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)});e.each(o,function(e,t){var r=t[1];if(n.substr(u,r.length).toLowerCase()===r.toLowerCase())return s=t[0],u+=r.length,!1});if(s!==-1)return s+1;throw\"Unknown name at position \"+u},x=function(){if(n.charAt(u)!==t.charAt(i))throw\"Unexpected literal at position \"+u;u++};for(i=0;i<t.length;i++)if(y)t.charAt(i)===\"'\"&&!w(\"'\")?y=!1:x();else switch(t.charAt(i)){case\"d\":m=E(\"d\");break;case\"D\":S(\"D\",l,c);break;case\"o\":g=E(\"o\");break;case\"m\":v=E(\"m\");break;case\"M\":v=S(\"M\",h,p);break;case\"y\":d=E(\"y\");break;case\"@\":b=new Date(E(\"@\")),d=b.getFullYear(),v=b.getMonth()+1,m=b.getDate();break;case\"!\":b=new Date((E(\"!\")-this._ticksTo1970)/1e4),d=b.getFullYear(),v=b.getMonth()+1,m=b.getDate();break;case\"'\":w(\"'\")?x():y=!0;break;default:x()}if(u<n.length){o=n.substr(u);if(!/^\\s+/.test(o))throw\"Extra/unparsed characters found in date: \"+o}d===-1?d=(new Date).getFullYear():d<100&&(d+=(new Date).getFullYear()-(new Date).getFullYear()%100+(d<=f?0:-100));if(g>-1){v=1,m=g;do{s=this._getDaysInMonth(d,v-1);if(m<=s)break;v++,m-=s}while(!0)}b=this._daylightSavingAdjust(new Date(d,v-1,m));if(b.getFullYear()!==d||b.getMonth()+1!==v||b.getDate()!==m)throw\"Invalid date\";return b},ATOM:\"yy-mm-dd\",COOKIE:\"D, dd M yy\",ISO_8601:\"yy-mm-dd\",RFC_822:\"D, d M y\",RFC_850:\"DD, dd-M-y\",RFC_1036:\"D, d M y\",RFC_1123:\"D, d M yy\",RFC_2822:\"D, d M yy\",RSS:\"D, d M y\",TICKS:\"!\",TIMESTAMP:\"@\",W3C:\"yy-mm-dd\",_ticksTo1970:(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*24*60*60*1e7,formatDate:function(e,t,n){if(!t)return\"\";var r,i=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,s=(n?n.dayNames:null)||this._defaults.dayNames,o=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,u=(n?n.monthNames:null)||this._defaults.monthNames,a=function(t){var n=r+1<e.length&&e.charAt(r+1)===t;return n&&r++,n},f=function(e,t,n){var r=\"\"+t;if(a(e))while(r.length<n)r=\"0\"+r;return r},l=function(e,t,n,r){return a(e)?r[t]:n[t]},c=\"\",h=!1;if(t)for(r=0;r<e.length;r++)if(h)e.charAt(r)===\"'\"&&!a(\"'\")?h=!1:c+=e.charAt(r);else switch(e.charAt(r)){case\"d\":c+=f(\"d\",t.getDate(),2);break;case\"D\":c+=l(\"D\",t.getDay(),i,s);break;case\"o\":c+=f(\"o\",Math.round(((new Date(t.getFullYear(),t.getMonth(),t.getDate())).getTime()-(new Date(t.getFullYear(),0,0)).getTime())/864e5),3);break;case\"m\":c+=f(\"m\",t.getMonth()+1,2);break;case\"M\":c+=l(\"M\",t.getMonth(),o,u);break;case\"y\":c+=a(\"y\")?t.getFullYear():(t.getYear()%100<10?\"0\":\"\")+t.getYear()%100;break;case\"@\":c+=t.getTime();break;case\"!\":c+=t.getTime()*1e4+this._ticksTo1970;break;case\"'\":a(\"'\")?c+=\"'\":h=!0;break;default:c+=e.charAt(r)}return c},_possibleChars:function(e){var t,n=\"\",r=!1,i=function(n){var r=t+1<e.length&&e.charAt(t+1)===n;return r&&t++,r};for(t=0;t<e.length;t++)if(r)e.charAt(t)===\"'\"&&!i(\"'\")?r=!1:n+=e.charAt(t);else switch(e.charAt(t)){case\"d\":case\"m\":case\"y\":case\"@\":n+=\"0123456789\";break;case\"D\":case\"M\":return null;case\"'\":i(\"'\")?n+=\"'\":r=!0;break;default:n+=e.charAt(t)}return n},_get:function(e,n){return e.settings[n]!==t?e.settings[n]:this._defaults[n]},_setDateFromField:function(e,t){if(e.input.val()===e.lastVal)return;var n=this._get(e,\"dateFormat\"),r=e.lastVal=e.input?e.input.val():null,i=this._getDefaultDate(e),s=i,o=this._getFormatConfig(e);try{s=this.parseDate(n,r,o)||i}catch(u){r=t?\"\":r}e.selectedDay=s.getDate(),e.drawMonth=e.selectedMonth=s.getMonth(),e.drawYear=e.selectedYear=s.getFullYear(),e.currentDay=r?s.getDate():0,e.currentMonth=r?s.getMonth():0,e.currentYear=r?s.getFullYear():0,this._adjustInstDate(e)},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,\"defaultDate\"),new Date))},_determineDate:function(t,n,r){var i=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},s=function(n){try{return e.datepicker.parseDate(e.datepicker._get(t,\"dateFormat\"),n,e.datepicker._getFormatConfig(t))}catch(r){}var i=(n.toLowerCase().match(/^c/)?e.datepicker._getDate(t):null)||new Date,s=i.getFullYear(),o=i.getMonth(),u=i.getDate(),a=/([+\\-]?[0-9]+)\\s*(d|D|w|W|m|M|y|Y)?/g,f=a.exec(n);while(f){switch(f[2]||\"d\"){case\"d\":case\"D\":u+=parseInt(f[1],10);break;case\"w\":case\"W\":u+=parseInt(f[1],10)*7;break;case\"m\":case\"M\":o+=parseInt(f[1],10),u=Math.min(u,e.datepicker._getDaysInMonth(s,o));break;case\"y\":case\"Y\":s+=parseInt(f[1],10),u=Math.min(u,e.datepicker._getDaysInMonth(s,o))}f=a.exec(n)}return new Date(s,o,u)},o=n==null||n===\"\"?r:typeof n==\"string\"?s(n):typeof n==\"number\"?isNaN(n)?r:i(n):new Date(n.getTime());return o=o&&o.toString()===\"Invalid Date\"?r:o,o&&(o.setHours(0),o.setMinutes(0),o.setSeconds(0),o.setMilliseconds(0)),this._daylightSavingAdjust(o)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,n){var r=!t,i=e.selectedMonth,s=e.selectedYear,o=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=o.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=o.getMonth(),e.drawYear=e.selectedYear=e.currentYear=o.getFullYear(),(i!==e.selectedMonth||s!==e.selectedYear)&&!n&&this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(r?\"\":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&e.input.val()===\"\"?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(t){var n=this._get(t,\"stepMonths\"),i=\"#\"+t.id.replace(/\\\\\\\\/g,\"\\\\\");t.dpDiv.find(\"[data-handler]\").map(function(){var t={prev:function(){window[\"DP_jQuery_\"+r].datepicker._adjustDate(i,-n,\"M\")},next:function(){window[\"DP_jQuery_\"+r].datepicker._adjustDate(i,+n,\"M\")},hide:function(){window[\"DP_jQuery_\"+r].datepicker._hideDatepicker()},today:function(){window[\"DP_jQuery_\"+r].datepicker._gotoToday(i)},selectDay:function(){return window[\"DP_jQuery_\"+r].datepicker._selectDay(i,+this.getAttribute(\"data-month\"),+this.getAttribute(\"data-year\"),this),!1},selectMonth:function(){return window[\"DP_jQuery_\"+r].datepicker._selectMonthYear(i,this,\"M\"),!1},selectYear:function(){return window[\"DP_jQuery_\"+r].datepicker._selectMonthYear(i,this,\"Y\"),!1}};e(this).bind(this.getAttribute(\"data-event\"),t[this.getAttribute(\"data-handler\")])})},_generateHTML:function(e){var t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L,A,O,M,_,D,P,H,B,j,F,I,q=new Date,R=this._daylightSavingAdjust(new Date(q.getFullYear(),q.getMonth(),q.getDate())),U=this._get(e,\"isRTL\"),z=this._get(e,\"showButtonPanel\"),W=this._get(e,\"hideIfNoPrevNext\"),X=this._get(e,\"navigationAsDateFormat\"),V=this._getNumberOfMonths(e),$=this._get(e,\"showCurrentAtPos\"),J=this._get(e,\"stepMonths\"),K=V[0]!==1||V[1]!==1,Q=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),G=this._getMinMaxDate(e,\"min\"),Y=this._getMinMaxDate(e,\"max\"),Z=e.drawMonth-$,et=e.drawYear;Z<0&&(Z+=12,et--);if(Y){t=this._daylightSavingAdjust(new Date(Y.getFullYear(),Y.getMonth()-V[0]*V[1]+1,Y.getDate())),t=G&&t<G?G:t;while(this._daylightSavingAdjust(new Date(et,Z,1))>t)Z--,Z<0&&(Z=11,et--)}e.drawMonth=Z,e.drawYear=et,n=this._get(e,\"prevText\"),n=X?this.formatDate(n,this._daylightSavingAdjust(new Date(et,Z-J,1)),this._getFormatConfig(e)):n,r=this._canAdjustMonth(e,-1,et,Z)?\"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='\"+n+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(U?\"e\":\"w\")+\"'>\"+n+\"</span></a>\":W?\"\":\"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='\"+n+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(U?\"e\":\"w\")+\"'>\"+n+\"</span></a>\",i=this._get(e,\"nextText\"),i=X?this.formatDate(i,this._daylightSavingAdjust(new Date(et,Z+J,1)),this._getFormatConfig(e)):i,s=this._canAdjustMonth(e,1,et,Z)?\"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='\"+i+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(U?\"w\":\"e\")+\"'>\"+i+\"</span></a>\":W?\"\":\"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='\"+i+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(U?\"w\":\"e\")+\"'>\"+i+\"</span></a>\",o=this._get(e,\"currentText\"),u=this._get(e,\"gotoCurrent\")&&e.currentDay?Q:R,o=X?this.formatDate(o,u,this._getFormatConfig(e)):o,a=e.inline?\"\":\"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>\"+this._get(e,\"closeText\")+\"</button>\",f=z?\"<div class='ui-datepicker-buttonpane ui-widget-content'>\"+(U?a:\"\")+(this._isInRange(e,u)?\"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>\"+o+\"</button>\":\"\")+(U?\"\":a)+\"</div>\":\"\",l=parseInt(this._get(e,\"firstDay\"),10),l=isNaN(l)?0:l,c=this._get(e,\"showWeek\"),h=this._get(e,\"dayNames\"),p=this._get(e,\"dayNamesMin\"),d=this._get(e,\"monthNames\"),v=this._get(e,\"monthNamesShort\"),m=this._get(e,\"beforeShowDay\"),g=this._get(e,\"showOtherMonths\"),y=this._get(e,\"selectOtherMonths\"),b=this._getDefaultDate(e),w=\"\",E;for(S=0;S<V[0];S++){x=\"\",this.maxRows=4;for(T=0;T<V[1];T++){N=this._daylightSavingAdjust(new Date(et,Z,e.selectedDay)),C=\" ui-corner-all\",k=\"\";if(K){k+=\"<div class='ui-datepicker-group\";if(V[1]>1)switch(T){case 0:k+=\" ui-datepicker-group-first\",C=\" ui-corner-\"+(U?\"right\":\"left\");break;case V[1]-1:k+=\" ui-datepicker-group-last\",C=\" ui-corner-\"+(U?\"left\":\"right\");break;default:k+=\" ui-datepicker-group-middle\",C=\"\"}k+=\"'>\"}k+=\"<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix\"+C+\"'>\"+(/all|left/.test(C)&&S===0?U?s:r:\"\")+(/all|right/.test(C)&&S===0?U?r:s:\"\")+this._generateMonthYearHeader(e,Z,et,G,Y,S>0||T>0,d,v)+\"</div><table class='ui-datepicker-calendar'><thead>\"+\"<tr>\",L=c?\"<th class='ui-datepicker-week-col'>\"+this._get(e,\"weekHeader\")+\"</th>\":\"\";for(E=0;E<7;E++)A=(E+l)%7,L+=\"<th\"+((E+l+6)%7>=5?\" class='ui-datepicker-week-end'\":\"\")+\">\"+\"<span title='\"+h[A]+\"'>\"+p[A]+\"</span></th>\";k+=L+\"</tr></thead><tbody>\",O=this._getDaysInMonth(et,Z),et===e.selectedYear&&Z===e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,O)),M=(this._getFirstDayOfMonth(et,Z)-l+7)%7,_=Math.ceil((M+O)/7),D=K?this.maxRows>_?this.maxRows:_:_,this.maxRows=D,P=this._daylightSavingAdjust(new Date(et,Z,1-M));for(H=0;H<D;H++){k+=\"<tr>\",B=c?\"<td class='ui-datepicker-week-col'>\"+this._get(e,\"calculateWeek\")(P)+\"</td>\":\"\";for(E=0;E<7;E++)j=m?m.apply(e.input?e.input[0]:null,[P]):[!0,\"\"],F=P.getMonth()!==Z,I=F&&!y||!j[0]||G&&P<G||Y&&P>Y,B+=\"<td class='\"+((E+l+6)%7>=5?\" ui-datepicker-week-end\":\"\")+(F?\" ui-datepicker-other-month\":\"\")+(P.getTime()===N.getTime()&&Z===e.selectedMonth&&e._keyEvent||b.getTime()===P.getTime()&&b.getTime()===N.getTime()?\" \"+this._dayOverClass:\"\")+(I?\" \"+this._unselectableClass+\" ui-state-disabled\":\"\")+(F&&!g?\"\":\" \"+j[1]+(P.getTime()===Q.getTime()?\" \"+this._currentClass:\"\")+(P.getTime()===R.getTime()?\" ui-datepicker-today\":\"\"))+\"'\"+((!F||g)&&j[2]?\" title='\"+j[2]+\"'\":\"\")+(I?\"\":\" data-handler='selectDay' data-event='click' data-month='\"+P.getMonth()+\"' data-year='\"+P.getFullYear()+\"'\")+\">\"+(F&&!g?\"&#xa0;\":I?\"<span class='ui-state-default'>\"+P.getDate()+\"</span>\":\"<a class='ui-state-default\"+(P.getTime()===R.getTime()?\" ui-state-highlight\":\"\")+(P.getTime()===Q.getTime()?\" ui-state-active\":\"\")+(F?\" ui-priority-secondary\":\"\")+\"' href='#'>\"+P.getDate()+\"</a>\")+\"</td>\",P.setDate(P.getDate()+1),P=this._daylightSavingAdjust(P);k+=B+\"</tr>\"}Z++,Z>11&&(Z=0,et++),k+=\"</tbody></table>\"+(K?\"</div>\"+(V[0]>0&&T===V[1]-1?\"<div class='ui-datepicker-row-break'></div>\":\"\"):\"\"),x+=k}w+=x}return w+=f,e._keyEvent=!1,w},_generateMonthYearHeader:function(e,t,n,r,i,s,o,u){var a,f,l,c,h,p,d,v,m=this._get(e,\"changeMonth\"),g=this._get(e,\"changeYear\"),y=this._get(e,\"showMonthAfterYear\"),b=\"<div class='ui-datepicker-title'>\",w=\"\";if(s||!m)w+=\"<span class='ui-datepicker-month'>\"+o[t]+\"</span>\";else{a=r&&r.getFullYear()===n,f=i&&i.getFullYear()===n,w+=\"<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>\";for(l=0;l<12;l++)(!a||l>=r.getMonth())&&(!f||l<=i.getMonth())&&(w+=\"<option value='\"+l+\"'\"+(l===t?\" selected='selected'\":\"\")+\">\"+u[l]+\"</option>\");w+=\"</select>\"}y||(b+=w+(s||!m||!g?\"&#xa0;\":\"\"));if(!e.yearshtml){e.yearshtml=\"\";if(s||!g)b+=\"<span class='ui-datepicker-year'>\"+n+\"</span>\";else{c=this._get(e,\"yearRange\").split(\":\"),h=(new Date).getFullYear(),p=function(e){var t=e.match(/c[+\\-].*/)?n+parseInt(e.substring(1),10):e.match(/[+\\-].*/)?h+parseInt(e,10):parseInt(e,10);return isNaN(t)?h:t},d=p(c[0]),v=Math.max(d,p(c[1]||\"\")),d=r?Math.max(d,r.getFullYear()):d,v=i?Math.min(v,i.getFullYear()):v,e.yearshtml+=\"<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>\";for(;d<=v;d++)e.yearshtml+=\"<option value='\"+d+\"'\"+(d===n?\" selected='selected'\":\"\")+\">\"+d+\"</option>\";e.yearshtml+=\"</select>\",b+=e.yearshtml,e.yearshtml=null}}return b+=this._get(e,\"yearSuffix\"),y&&(b+=(s||!m||!g?\"&#xa0;\":\"\")+w),b+=\"</div>\",b},_adjustInstDate:function(e,t,n){var r=e.drawYear+(n===\"Y\"?t:0),i=e.drawMonth+(n===\"M\"?t:0),s=Math.min(e.selectedDay,this._getDaysInMonth(r,i))+(n===\"D\"?t:0),o=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(r,i,s)));e.selectedDay=o.getDate(),e.drawMonth=e.selectedMonth=o.getMonth(),e.drawYear=e.selectedYear=o.getFullYear(),(n===\"M\"||n===\"Y\")&&this._notifyChange(e)},_restrictMinMax:function(e,t){var n=this._getMinMaxDate(e,\"min\"),r=this._getMinMaxDate(e,\"max\"),i=n&&t<n?n:t;return r&&i>r?r:i},_notifyChange:function(e){var t=this._get(e,\"onChangeMonthYear\");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,\"numberOfMonths\");return t==null?[1,1]:typeof t==\"number\"?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+\"Date\"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return(new Date(e,t,1)).getDay()},_canAdjustMonth:function(e,t,n,r){var i=this._getNumberOfMonths(e),s=this._daylightSavingAdjust(new Date(n,r+(t<0?t:i[0]*i[1]),1));return t<0&&s.setDate(this._getDaysInMonth(s.getFullYear(),s.getMonth())),this._isInRange(e,s)},_isInRange:function(e,t){var n,r,i=this._getMinMaxDate(e,\"min\"),s=this._getMinMaxDate(e,\"max\"),o=null,u=null,a=this._get(e,\"yearRange\");return a&&(n=a.split(\":\"),r=(new Date).getFullYear(),o=parseInt(n[0],10)+r,u=parseInt(n[1],10)+r),(!i||t.getTime()>=i.getTime())&&(!s||t.getTime()<=s.getTime())&&(!o||t.getFullYear()>=o)&&(!u||t.getFullYear()<=u)},_getFormatConfig:function(e){var t=this._get(e,\"shortYearCutoff\");return t=typeof t!=\"string\"?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,\"dayNamesShort\"),dayNames:this._get(e,\"dayNames\"),monthNamesShort:this._get(e,\"monthNamesShort\"),monthNames:this._get(e,\"monthNames\")}},_formatDate:function(e,t,n,r){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var i=t?typeof t==\"object\"?t:this._daylightSavingAdjust(new Date(r,n,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,\"dateFormat\"),i,this._getFormatConfig(e))}}),e.fn.datepicker=function(t){if(!this.length)return this;e.datepicker.initialized||(e(document).mousedown(e.datepicker._checkExternalClick),e.datepicker.initialized=!0),e(\"#\"+e.datepicker._mainDivId).length===0&&e(\"body\").append(e.datepicker.dpDiv);var n=Array.prototype.slice.call(arguments,1);return typeof t!=\"string\"||t!==\"isDisabled\"&&t!==\"getDate\"&&t!==\"widget\"?t===\"option\"&&arguments.length===2&&typeof arguments[1]==\"string\"?e.datepicker[\"_\"+t+\"Datepicker\"].apply(e.datepicker,[this[0]].concat(n)):this.each(function(){typeof t==\"string\"?e.datepicker[\"_\"+t+\"Datepicker\"].apply(e.datepicker,[this].concat(n)):e.datepicker._attachDatepicker(this,t)}):e.datepicker[\"_\"+t+\"Datepicker\"].apply(e.datepicker,[this[0]].concat(n))},e.datepicker=new s,e.datepicker.initialized=!1,e.datepicker.uuid=(new Date).getTime(),e.datepicker.version=\"1.10.0\",window[\"DP_jQuery_\"+r]=e})(jQuery);(function(e,t){var n={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},r={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};e.widget(\"ui.dialog\",{version:\"1.10.0\",options:{appendTo:\"body\",autoOpen:!0,buttons:[],closeOnEscape:!0,closeText:\"close\",dialogClass:\"\",draggable:!0,hide:null,height:\"auto\",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:\"center\",at:\"center\",of:window,collision:\"fit\",using:function(t){var n=e(this).css(t).offset().top;n<0&&e(this).css(\"top\",t.top-n)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr(\"title\"),this.options.title=this.options.title||this.originalTitle,this._createWrapper(),this.element.show().removeAttr(\"title\").addClass(\"ui-dialog-content ui-widget-content\").appendTo(this.uiDialog),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&e.fn.draggable&&this._makeDraggable(),this.options.resizable&&e.fn.resizable&&this._makeResizable(),this._isOpen=!1},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var t=this.options.appendTo;return t&&(t.jquery||t.nodeType)?e(t):this.document.find(t||\"body\").eq(0)},_destroy:function(){var e,t=this.originalPosition;this._destroyOverlay(),this.element.removeUniqueId().removeClass(\"ui-dialog-content ui-widget-content\").css(this.originalCss).detach(),this.uiDialog.stop(!0,!0).remove(),this.originalTitle&&this.element.attr(\"title\",this.originalTitle),e=t.parent.children().eq(t.index),e.length&&e[0]!==this.element[0]?e.before(this.element):t.parent.append(this.element)},widget:function(){return this.uiDialog},disable:e.noop,enable:e.noop,close:function(t){var n=this;if(!this._isOpen||this._trigger(\"beforeClose\",t)===!1)return;this._isOpen=!1,this._destroyOverlay(),this.opener.filter(\":focusable\").focus().length||e(this.document[0].activeElement).blur(),this._hide(this.uiDialog,this.options.hide,function(){n._trigger(\"close\",t)})},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(e,t){var n=!!this.uiDialog.nextAll(\":visible\").insertBefore(this.uiDialog).length;return n&&!t&&this._trigger(\"focus\",e),n},open:function(){if(this._isOpen){this._moveToTop()&&this._focusTabbable();return}this.opener=e(this.document[0].activeElement),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this._show(this.uiDialog,this.options.show),this._focusTabbable(),this._isOpen=!0,this._trigger(\"open\"),this._trigger(\"focus\")},_focusTabbable:function(){var e=this.element.find(\"[autofocus]\");e.length||(e=this.element.find(\":tabbable\")),e.length||(e=this.uiDialogButtonPane.find(\":tabbable\")),e.length||(e=this.uiDialogTitlebarClose.filter(\":tabbable\")),e.length||(e=this.uiDialog),e.eq(0).focus()},_keepFocus:function(t){function n(){var t=this.document[0].activeElement,n=this.uiDialog[0]===t||e.contains(this.uiDialog[0],t);n||this._focusTabbable()}t.preventDefault(),n.call(this),this._delay(n)},_createWrapper:function(){this.uiDialog=e(\"<div>\").addClass(\"ui-dialog ui-widget ui-widget-content ui-corner-all ui-front \"+this.options.dialogClass).hide().attr({tabIndex:-1,role:\"dialog\"}).appendTo(this._appendTo()),this._on(this.uiDialog,{keydown:function(t){if(this.options.closeOnEscape&&!t.isDefaultPrevented()&&t.keyCode&&t.keyCode===e.ui.keyCode.ESCAPE){t.preventDefault(),this.close(t);return}if(t.keyCode!==e.ui.keyCode.TAB)return;var n=this.uiDialog.find(\":tabbable\"),r=n.filter(\":first\"),i=n.filter(\":last\");t.target!==i[0]&&t.target!==this.uiDialog[0]||!!t.shiftKey?(t.target===r[0]||t.target===this.uiDialog[0])&&t.shiftKey&&(i.focus(1),t.preventDefault()):(r.focus(1),t.preventDefault())},mousedown:function(e){this._moveToTop(e)&&this._focusTabbable()}}),this.element.find(\"[aria-describedby]\").length||this.uiDialog.attr({\"aria-describedby\":this.element.uniqueId().attr(\"id\")})},_createTitlebar:function(){var t;this.uiDialogTitlebar=e(\"<div>\").addClass(\"ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix\").prependTo(this.uiDialog),this._on(this.uiDialogTitlebar,{mousedown:function(t){e(t.target).closest(\".ui-dialog-titlebar-close\")||this.uiDialog.focus()}}),this.uiDialogTitlebarClose=e(\"<button></button>\").button({label:this.options.closeText,icons:{primary:\"ui-icon-closethick\"},text:!1}).addClass(\"ui-dialog-titlebar-close\").appendTo(this.uiDialogTitlebar),this._on(this.uiDialogTitlebarClose,{click:function(e){e.preventDefault(),this.close(e)}}),t=e(\"<span>\").uniqueId().addClass(\"ui-dialog-title\").prependTo(this.uiDialogTitlebar),this._title(t),this.uiDialog.attr({\"aria-labelledby\":t.attr(\"id\")})},_title:function(e){this.options.title||e.html(\"&#160;\"),e.text(this.options.title)},_createButtonPane:function(){this.uiDialogButtonPane=e(\"<div>\").addClass(\"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\"),this.uiButtonSet=e(\"<div>\").addClass(\"ui-dialog-buttonset\").appendTo(this.uiDialogButtonPane),this._createButtons()},_createButtons:function(){var t=this,n=this.options.buttons;this.uiDialogButtonPane.remove(),this.uiButtonSet.empty();if(e.isEmptyObject(n)){this.uiDialog.removeClass(\"ui-dialog-buttons\");return}e.each(n,function(n,r){var i,s;r=e.isFunction(r)?{click:r,text:n}:r,r=e.extend({type:\"button\"},r),i=r.click,r.click=function(){i.apply(t.element[0],arguments)},s={icons:r.icons,text:r.showText},delete r.icons,delete r.showText,e(\"<button></button>\",r).button(s).appendTo(t.uiButtonSet)}),this.uiDialog.addClass(\"ui-dialog-buttons\"),this.uiDialogButtonPane.appendTo(this.uiDialog)},_makeDraggable:function(){function r(e){return{position:e.position,offset:e.offset}}var t=this,n=this.options;this.uiDialog.draggable({cancel:\".ui-dialog-content, .ui-dialog-titlebar-close\",handle:\".ui-dialog-titlebar\",containment:\"document\",start:function(n,i){e(this).addClass(\"ui-dialog-dragging\"),t._trigger(\"dragStart\",n,r(i))},drag:function(e,n){t._trigger(\"drag\",e,r(n))},stop:function(i,s){n.position=[s.position.left-t.document.scrollLeft(),s.position.top-t.document.scrollTop()],e(this).removeClass(\"ui-dialog-dragging\"),t._trigger(\"dragStop\",i,r(s))}})},_makeResizable:function(){function o(e){return{originalPosition:e.originalPosition,originalSize:e.originalSize,position:e.position,size:e.size}}var t=this,n=this.options,r=n.resizable,i=this.uiDialog.css(\"position\"),s=typeof r==\"string\"?r:\"n,e,s,w,se,sw,ne,nw\";this.uiDialog.resizable({cancel:\".ui-dialog-content\",containment:\"document\",alsoResize:this.element,maxWidth:n.maxWidth,maxHeight:n.maxHeight,minWidth:n.minWidth,minHeight:this._minHeight(),handles:s,start:function(n,r){e(this).addClass(\"ui-dialog-resizing\"),t._trigger(\"resizeStart\",n,o(r))},resize:function(e,n){t._trigger(\"resize\",e,o(n))},stop:function(r,i){n.height=e(this).height(),n.width=e(this).width(),e(this).removeClass(\"ui-dialog-resizing\"),t._trigger(\"resizeStop\",r,o(i))}}).css(\"position\",i)},_minHeight:function(){var e=this.options;return e.height===\"auto\"?e.minHeight:Math.min(e.minHeight,e.height)},_position:function(){var e=this.uiDialog.is(\":visible\");e||this.uiDialog.show(),this.uiDialog.position(this.options.position),e||this.uiDialog.hide()},_setOptions:function(t){var i=this,s=!1,o={};e.each(t,function(e,t){i._setOption(e,t),e in n&&(s=!0),e in r&&(o[e]=t)}),s&&(this._size(),this._position()),this.uiDialog.is(\":data(ui-resizable)\")&&this.uiDialog.resizable(\"option\",o)},_setOption:function(e,t){var n,r,i=this.uiDialog;e===\"dialogClass\"&&i.removeClass(this.options.dialogClass).addClass(t);if(e===\"disabled\")return;this._super(e,t),e===\"appendTo\"&&this.uiDialog.appendTo(this._appendTo()),e===\"buttons\"&&this._createButtons(),e===\"closeText\"&&this.uiDialogTitlebarClose.button({label:\"\"+t}),e===\"draggable\"&&(n=i.is(\":data(ui-draggable)\"),n&&!t&&i.draggable(\"destroy\"),!n&&t&&this._makeDraggable()),e===\"position\"&&this._position(),e===\"resizable\"&&(r=i.is(\":data(ui-resizable)\"),r&&!t&&i.resizable(\"destroy\"),r&&typeof t==\"string\"&&i.resizable(\"option\",\"handles\",t),!r&&t!==!1&&this._makeResizable()),e===\"title\"&&this._title(this.uiDialogTitlebar.find(\".ui-dialog-title\"))},_size:function(){var e,t,n,r=this.options;this.element.show().css({width:\"auto\",minHeight:0,maxHeight:\"none\",height:0}),r.minWidth>r.width&&(r.width=r.minWidth),e=this.uiDialog.css({height:\"auto\",width:r.width}).outerHeight(),t=Math.max(0,r.minHeight-e),n=typeof r.maxHeight==\"number\"?Math.max(0,r.maxHeight-e):\"none\",r.height===\"auto\"?this.element.css({minHeight:t,maxHeight:n,height:\"auto\"}):this.element.height(Math.max(0,r.height-e)),this.uiDialog.is(\":data(ui-resizable)\")&&this.uiDialog.resizable(\"option\",\"minHeight\",this._minHeight())},_createOverlay:function(){if(!this.options.modal)return;e.ui.dialog.overlayInstances||this._delay(function(){e.ui.dialog.overlayInstances&&this._on(this.document,{focusin:function(t){e(t.target).closest(\".ui-dialog\").length||(t.preventDefault(),e(\".ui-dialog:visible:last .ui-dialog-content\").data(\"ui-dialog\")._focusTabbable())}})}),this.overlay=e(\"<div>\").addClass(\"ui-widget-overlay ui-front\").appendTo(this.document[0].body),this._on(this.overlay,{mousedown:\"_keepFocus\"}),e.ui.dialog.overlayInstances++},_destroyOverlay:function(){if(!this.options.modal)return;e.ui.dialog.overlayInstances--,e.ui.dialog.overlayInstances||this._off(this.document,\"focusin\"),this.overlay.remove()}}),e.ui.dialog.overlayInstances=0,e.uiBackCompat!==!1&&e.widget(\"ui.dialog\",e.ui.dialog,{_position:function(){var t=this.options.position,n=[],r=[0,0],i;if(t){if(typeof t==\"string\"||typeof t==\"object\"&&\"0\"in t)n=t.split?t.split(\" \"):[t[0],t[1]],n.length===1&&(n[1]=n[0]),e.each([\"left\",\"top\"],function(e,t){+n[e]===n[e]&&(r[e]=n[e],n[e]=t)}),t={my:n[0]+(r[0]<0?r[0]:\"+\"+r[0])+\" \"+n[1]+(r[1]<0?r[1]:\"+\"+r[1]),at:n.join(\" \")};t=e.extend({},e.ui.dialog.prototype.options.position,t)}else t=e.ui.dialog.prototype.options.position;i=this.uiDialog.is(\":visible\"),i||this.uiDialog.show(),this.uiDialog.position(t),i||this.uiDialog.hide()}})})(jQuery);(function(e,t){e.widget(\"ui.menu\",{version:\"1.10.0\",defaultElement:\"<ul>\",delay:300,options:{icons:{submenu:\"ui-icon-carat-1-e\"},menus:\"ul\",position:{my:\"left top\",at:\"right top\"},role:\"menu\",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().addClass(\"ui-menu ui-widget ui-widget-content ui-corner-all\").toggleClass(\"ui-menu-icons\",!!this.element.find(\".ui-icon\").length).attr({role:this.options.role,tabIndex:0}).bind(\"click\"+this.eventNamespace,e.proxy(function(e){this.options.disabled&&e.preventDefault()},this)),this.options.disabled&&this.element.addClass(\"ui-state-disabled\").attr(\"aria-disabled\",\"true\"),this._on({\"mousedown .ui-menu-item > a\":function(e){e.preventDefault()},\"click .ui-state-disabled > a\":function(e){e.preventDefault()},\"click .ui-menu-item:has(a)\":function(t){var n=e(t.target).closest(\".ui-menu-item\");!this.mouseHandled&&n.not(\".ui-state-disabled\").length&&(this.mouseHandled=!0,this.select(t),n.has(\".ui-menu\").length?this.expand(t):this.element.is(\":focus\")||(this.element.trigger(\"focus\",[!0]),this.active&&this.active.parents(\".ui-menu\").length===1&&clearTimeout(this.timer)))},\"mouseenter .ui-menu-item\":function(t){var n=e(t.currentTarget);n.siblings().children(\".ui-state-active\").removeClass(\"ui-state-active\"),this.focus(t,n)},mouseleave:\"collapseAll\",\"mouseleave .ui-menu\":\"collapseAll\",focus:function(e,t){var n=this.active||this.element.children(\".ui-menu-item\").eq(0);t||this.focus(e,n)},blur:function(t){this._delay(function(){e.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(t)})},keydown:\"_keydown\"}),this.refresh(),this._on(this.document,{click:function(t){e(t.target).closest(\".ui-menu\").length||this.collapseAll(t),this.mouseHandled=!1}})},_destroy:function(){this.element.removeAttr(\"aria-activedescendant\").find(\".ui-menu\").addBack().removeClass(\"ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons\").removeAttr(\"role\").removeAttr(\"tabIndex\").removeAttr(\"aria-labelledby\").removeAttr(\"aria-expanded\").removeAttr(\"aria-hidden\").removeAttr(\"aria-disabled\").removeUniqueId().show(),this.element.find(\".ui-menu-item\").removeClass(\"ui-menu-item\").removeAttr(\"role\").removeAttr(\"aria-disabled\").children(\"a\").removeUniqueId().removeClass(\"ui-corner-all ui-state-hover\").removeAttr(\"tabIndex\").removeAttr(\"role\").removeAttr(\"aria-haspopup\").children().each(function(){var t=e(this);t.data(\"ui-menu-submenu-carat\")&&t.remove()}),this.element.find(\".ui-menu-divider\").removeClass(\"ui-menu-divider ui-widget-content\")},_keydown:function(t){function a(e){return e.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\")}var n,r,i,s,o,u=!0;switch(t.keyCode){case e.ui.keyCode.PAGE_UP:this.previousPage(t);break;case e.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case e.ui.keyCode.HOME:this._move(\"first\",\"first\",t);break;case e.ui.keyCode.END:this._move(\"last\",\"last\",t);break;case e.ui.keyCode.UP:this.previous(t);break;case e.ui.keyCode.DOWN:this.next(t);break;case e.ui.keyCode.LEFT:this.collapse(t);break;case e.ui.keyCode.RIGHT:this.active&&!this.active.is(\".ui-state-disabled\")&&this.expand(t);break;case e.ui.keyCode.ENTER:case e.ui.keyCode.SPACE:this._activate(t);break;case e.ui.keyCode.ESCAPE:this.collapse(t);break;default:u=!1,r=this.previousFilter||\"\",i=String.fromCharCode(t.keyCode),s=!1,clearTimeout(this.filterTimer),i===r?s=!0:i=r+i,o=new RegExp(\"^\"+a(i),\"i\"),n=this.activeMenu.children(\".ui-menu-item\").filter(function(){return o.test(e(this).children(\"a\").text())}),n=s&&n.index(this.active.next())!==-1?this.active.nextAll(\".ui-menu-item\"):n,n.length||(i=String.fromCharCode(t.keyCode),o=new RegExp(\"^\"+a(i),\"i\"),n=this.activeMenu.children(\".ui-menu-item\").filter(function(){return o.test(e(this).children(\"a\").text())})),n.length?(this.focus(t,n),n.length>1?(this.previousFilter=i,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter):delete this.previousFilter}u&&t.preventDefault()},_activate:function(e){this.active.is(\".ui-state-disabled\")||(this.active.children(\"a[aria-haspopup='true']\").length?this.expand(e):this.select(e))},refresh:function(){var t,n=this.options.icons.submenu,r=this.element.find(this.options.menus);r.filter(\":not(.ui-menu)\").addClass(\"ui-menu ui-widget ui-widget-content ui-corner-all\").hide().attr({role:this.options.role,\"aria-hidden\":\"true\",\"aria-expanded\":\"false\"}).each(function(){var t=e(this),r=t.prev(\"a\"),i=e(\"<span>\").addClass(\"ui-menu-icon ui-icon \"+n).data(\"ui-menu-submenu-carat\",!0);r.attr(\"aria-haspopup\",\"true\").prepend(i),t.attr(\"aria-labelledby\",r.attr(\"id\"))}),t=r.add(this.element),t.children(\":not(.ui-menu-item):has(a)\").addClass(\"ui-menu-item\").attr(\"role\",\"presentation\").children(\"a\").uniqueId().addClass(\"ui-corner-all\").attr({tabIndex:-1,role:this._itemRole()}),t.children(\":not(.ui-menu-item)\").each(function(){var t=e(this);/[^\\-—–\\s]/.test(t.text())||t.addClass(\"ui-widget-content ui-menu-divider\")}),t.children(\".ui-state-disabled\").attr(\"aria-disabled\",\"true\"),this.active&&!e.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:\"menuitem\",listbox:\"option\"}[this.options.role]},_setOption:function(e,t){e===\"icons\"&&this.element.find(\".ui-menu-icon\").removeClass(this.options.icons.submenu).addClass(t.submenu),this._super(e,t)},focus:function(e,t){var n,r;this.blur(e,e&&e.type===\"focus\"),this._scrollIntoView(t),this.active=t.first(),r=this.active.children(\"a\").addClass(\"ui-state-focus\"),this.options.role&&this.element.attr(\"aria-activedescendant\",r.attr(\"id\")),this.active.parent().closest(\".ui-menu-item\").children(\"a:first\").addClass(\"ui-state-active\"),e&&e.type===\"keydown\"?this._close():this.timer=this._delay(function(){this._close()},this.delay),n=t.children(\".ui-menu\"),n.length&&/^mouse/.test(e.type)&&this._startOpening(n),this.activeMenu=t.parent(),this._trigger(\"focus\",e,{item:t})},_scrollIntoView:function(t){var n,r,i,s,o,u;this._hasScroll()&&(n=parseFloat(e.css(this.activeMenu[0],\"borderTopWidth\"))||0,r=parseFloat(e.css(this.activeMenu[0],\"paddingTop\"))||0,i=t.offset().top-this.activeMenu.offset().top-n-r,s=this.activeMenu.scrollTop(),o=this.activeMenu.height(),u=t.height(),i<0?this.activeMenu.scrollTop(s+i):i+u>o&&this.activeMenu.scrollTop(s+i-o+u))},blur:function(e,t){t||clearTimeout(this.timer);if(!this.active)return;this.active.children(\"a\").removeClass(\"ui-state-focus\"),this.active=null,this._trigger(\"blur\",e,{item:this.active})},_startOpening:function(e){clearTimeout(this.timer);if(e.attr(\"aria-hidden\")!==\"true\")return;this.timer=this._delay(function(){this._close(),this._open(e)},this.delay)},_open:function(t){var n=e.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(\".ui-menu\").not(t.parents(\".ui-menu\")).hide().attr(\"aria-hidden\",\"true\"),t.show().removeAttr(\"aria-hidden\").attr(\"aria-expanded\",\"true\").position(n)},collapseAll:function(t,n){clearTimeout(this.timer),this.timer=this._delay(function(){var r=n?this.element:e(t&&t.target).closest(this.element.find(\".ui-menu\"));r.length||(r=this.element),this._close(r),this.blur(t),this.activeMenu=r},this.delay)},_close:function(e){e||(e=this.active?this.active.parent():this.element),e.find(\".ui-menu\").hide().attr(\"aria-hidden\",\"true\").attr(\"aria-expanded\",\"false\").end().find(\"a.ui-state-active\").removeClass(\"ui-state-active\")},collapse:function(e){var t=this.active&&this.active.parent().closest(\".ui-menu-item\",this.element);t&&t.length&&(this._close(),this.focus(e,t))},expand:function(e){var t=this.active&&this.active.children(\".ui-menu \").children(\".ui-menu-item\").first();t&&t.length&&(this._open(t.parent()),this._delay(function(){this.focus(e,t)}))},next:function(e){this._move(\"next\",\"first\",e)},previous:function(e){this._move(\"prev\",\"last\",e)},isFirstItem:function(){return this.active&&!this.active.prevAll(\".ui-menu-item\").length},isLastItem:function(){return this.active&&!this.active.nextAll(\".ui-menu-item\").length},_move:function(e,t,n){var r;this.active&&(e===\"first\"||e===\"last\"?r=this.active[e===\"first\"?\"prevAll\":\"nextAll\"](\".ui-menu-item\").eq(-1):r=this.active[e+\"All\"](\".ui-menu-item\").eq(0));if(!r||!r.length||!this.active)r=this.activeMenu.children(\".ui-menu-item\")[t]();this.focus(n,r)},nextPage:function(t){var n,r,i;if(!this.active){this.next(t);return}if(this.isLastItem())return;this._hasScroll()?(r=this.active.offset().top,i=this.element.height(),this.active.nextAll(\".ui-menu-item\").each(function(){return n=e(this),n.offset().top-r-i<0}),this.focus(t,n)):this.focus(t,this.activeMenu.children(\".ui-menu-item\")[this.active?\"last\":\"first\"]())},previousPage:function(t){var n,r,i;if(!this.active){this.next(t);return}if(this.isFirstItem())return;this._hasScroll()?(r=this.active.offset().top,i=this.element.height(),this.active.prevAll(\".ui-menu-item\").each(function(){return n=e(this),n.offset().top-r+i>0}),this.focus(t,n)):this.focus(t,this.activeMenu.children(\".ui-menu-item\").first())},_hasScroll:function(){return this.element.outerHeight()<this.element.prop(\"scrollHeight\")},select:function(t){this.active=this.active||e(t.target).closest(\".ui-menu-item\");var n={item:this.active};this.active.has(\".ui-menu\").length||this.collapseAll(t,!0),this._trigger(\"select\",t,n)}})})(jQuery);(function(e,t){e.widget(\"ui.progressbar\",{version:\"1.10.0\",options:{max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.addClass(\"ui-progressbar ui-widget ui-widget-content ui-corner-all\").attr({role:\"progressbar\",\"aria-valuemin\":this.min}),this.valueDiv=e(\"<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>\").appendTo(this.element),this._refreshValue()},_destroy:function(){this.element.removeClass(\"ui-progressbar ui-widget ui-widget-content ui-corner-all\").removeAttr(\"role\").removeAttr(\"aria-valuemin\").removeAttr(\"aria-valuemax\").removeAttr(\"aria-valuenow\"),this.valueDiv.remove()},value:function(e){if(e===t)return this.options.value;this.options.value=this._constrainedValue(e),this._refreshValue()},_constrainedValue:function(e){return e===t&&(e=this.options.value),this.indeterminate=e===!1,typeof e!=\"number\"&&(e=0),this.indeterminate?!1:Math.min(this.options.max,Math.max(this.min,e))},_setOptions:function(e){var t=e.value;delete e.value,this._super(e),this.options.value=this._constrainedValue(t),this._refreshValue()},_setOption:function(e,t){e===\"max\"&&(t=Math.max(this.min,t)),this._super(e,t)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var t=this.options.value,n=this._percentage();this.valueDiv.toggle(this.indeterminate||t>this.min).toggleClass(\"ui-corner-right\",t===this.options.max).width(n.toFixed(0)+\"%\"),this.element.toggleClass(\"ui-progressbar-indeterminate\",this.indeterminate),this.indeterminate?(this.element.removeAttr(\"aria-valuenow\"),this.overlayDiv||(this.overlayDiv=e(\"<div class='ui-progressbar-overlay'></div>\").appendTo(this.valueDiv))):(this.element.attr({\"aria-valuemax\":this.options.max,\"aria-valuenow\":t}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==t&&(this.oldValue=t,this._trigger(\"change\")),t===this.options.max&&this._trigger(\"complete\")}})})(jQuery);(function(e,t){var n=5;e.widget(\"ui.slider\",e.ui.mouse,{version:\"1.10.0\",widgetEventPrefix:\"slide\",options:{animate:!1,distance:0,max:100,min:0,orientation:\"horizontal\",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},_create:function(){var t,n,r=this.options,i=this.element.find(\".ui-slider-handle\").addClass(\"ui-state-default ui-corner-all\"),s=\"<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>\",o=[];this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this.element.addClass(\"ui-slider ui-slider-\"+this.orientation+\" ui-widget\"+\" ui-widget-content\"+\" ui-corner-all\"),this.range=e([]),r.range&&(r.range===!0&&(r.values?r.values.length&&r.values.length!==2?r.values=[r.values[0],r.values[0]]:e.isArray(r.values)&&(r.values=r.values.slice(0)):r.values=[this._valueMin(),this._valueMin()]),this.range=e(\"<div></div>\").appendTo(this.element).addClass(\"ui-slider-range ui-widget-header\"+(r.range===\"min\"||r.range===\"max\"?\" ui-slider-range-\"+r.range:\"\"))),n=r.values&&r.values.length||1;for(t=i.length;t<n;t++)o.push(s);this.handles=i.add(e(o.join(\"\")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.add(this.range).filter(\"a\").click(function(e){e.preventDefault()}).mouseenter(function(){r.disabled||e(this).addClass(\"ui-state-hover\")}).mouseleave(function(){e(this).removeClass(\"ui-state-hover\")}).focus(function(){r.disabled?e(this).blur():(e(\".ui-slider .ui-state-focus\").removeClass(\"ui-state-focus\"),e(this).addClass(\"ui-state-focus\"))}).blur(function(){e(this).removeClass(\"ui-state-focus\")}),this.handles.each(function(t){e(this).data(\"ui-slider-handle-index\",t)}),this._setOption(\"disabled\",r.disabled),this._on(this.handles,this._handleEvents),this._refreshValue(),this._animateOff=!1},_destroy:function(){this.handles.remove(),this.range.remove(),this.element.removeClass(\"ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all\"),this._mouseDestroy()},_mouseCapture:function(t){var n,r,i,s,o,u,a,f,l=this,c=this.options;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),n={x:t.pageX,y:t.pageY},r=this._normValueFromMouse(n),i=this._valueMax()-this._valueMin()+1,this.handles.each(function(t){var n=Math.abs(r-l.values(t));if(i>n||i===n&&(t===l._lastChangedValue||l.values(t)===c.min))i=n,s=e(this),o=t}),u=this._start(t,o),u===!1?!1:(this._mouseSliding=!0,this._handleIndex=o,s.addClass(\"ui-state-active\").focus(),a=s.offset(),f=!e(t.target).parents().addBack().is(\".ui-slider-handle\"),this._clickOffset=f?{left:0,top:0}:{left:t.pageX-a.left-s.width()/2,top:t.pageY-a.top-s.height()/2-(parseInt(s.css(\"borderTopWidth\"),10)||0)-(parseInt(s.css(\"borderBottomWidth\"),10)||0)+(parseInt(s.css(\"marginTop\"),10)||0)},this.handles.hasClass(\"ui-state-hover\")||this._slide(t,o,r),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(e){var t={x:e.pageX,y:e.pageY},n=this._normValueFromMouse(t);return this._slide(e,this._handleIndex,n),!1},_mouseStop:function(e){return this.handles.removeClass(\"ui-state-active\"),this._mouseSliding=!1,this._stop(e,this._handleIndex),this._change(e,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation=this.options.orientation===\"vertical\"?\"vertical\":\"horizontal\"},_normValueFromMouse:function(e){var t,n,r,i,s;return this.orientation===\"horizontal\"?(t=this.elementSize.width,n=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(t=this.elementSize.height,n=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),r=n/t,r>1&&(r=1),r<0&&(r=0),this.orientation===\"vertical\"&&(r=1-r),i=this._valueMax()-this._valueMin(),s=this._valueMin()+r*i,this._trimAlignValue(s)},_start:function(e,t){var n={handle:this.handles[t],value:this.value()};return this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger(\"start\",e,n)},_slide:function(e,t,n){var r,i,s;this.options.values&&this.options.values.length?(r=this.values(t?0:1),this.options.values.length===2&&this.options.range===!0&&(t===0&&n>r||t===1&&n<r)&&(n=r),n!==this.values(t)&&(i=this.values(),i[t]=n,s=this._trigger(\"slide\",e,{handle:this.handles[t],value:n,values:i}),r=this.values(t?0:1),s!==!1&&this.values(t,n,!0))):n!==this.value()&&(s=this._trigger(\"slide\",e,{handle:this.handles[t],value:n}),s!==!1&&this.value(n))},_stop:function(e,t){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger(\"stop\",e,n)},_change:function(e,t){if(!this._keySliding&&!this._mouseSliding){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._lastChangedValue=t,this._trigger(\"change\",e,n)}},value:function(e){if(arguments.length){this.options.value=this._trimAlignValue(e),this._refreshValue(),this._change(null,0);return}return this._value()},values:function(t,n){var r,i,s;if(arguments.length>1){this.options.values[t]=this._trimAlignValue(n),this._refreshValue(),this._change(null,t);return}if(!arguments.length)return this._values();if(!e.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(t):this.value();r=this.options.values,i=arguments[0];for(s=0;s<r.length;s+=1)r[s]=this._trimAlignValue(i[s]),this._change(null,s);this._refreshValue()},_setOption:function(t,n){var r,i=0;e.isArray(this.options.values)&&(i=this.options.values.length),e.Widget.prototype._setOption.apply(this,arguments);switch(t){case\"disabled\":n?(this.handles.filter(\".ui-state-focus\").blur(),this.handles.removeClass(\"ui-state-hover\"),this.handles.prop(\"disabled\",!0)):this.handles.prop(\"disabled\",!1);break;case\"orientation\":this._detectOrientation(),this.element.removeClass(\"ui-slider-horizontal ui-slider-vertical\").addClass(\"ui-slider-\"+this.orientation),this._refreshValue();break;case\"value\":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case\"values\":this._animateOff=!0,this._refreshValue();for(r=0;r<i;r+=1)this._change(null,r);this._animateOff=!1;break;case\"min\":case\"max\":this._animateOff=!0,this._refreshValue(),this._animateOff=!1}},_value:function(){var e=this.options.value;return e=this._trimAlignValue(e),e},_values:function(e){var t,n,r;if(arguments.length)return t=this.options.values[e],t=this._trimAlignValue(t),t;n=this.options.values.slice();for(r=0;r<n.length;r+=1)n[r]=this._trimAlignValue(n[r]);return n},_trimAlignValue:function(e){if(e<=this._valueMin())return this._valueMin();if(e>=this._valueMax())return this._valueMax();var t=this.options.step>0?this.options.step:1,n=(e-this._valueMin())%t,r=e-n;return Math.abs(n)*2>=t&&(r+=n>0?t:-t),parseFloat(r.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var t,n,r,i,s,o=this.options.range,u=this.options,a=this,f=this._animateOff?!1:u.animate,l={};this.options.values&&this.options.values.length?this.handles.each(function(r){n=(a.values(r)-a._valueMin())/(a._valueMax()-a._valueMin())*100,l[a.orientation===\"horizontal\"?\"left\":\"bottom\"]=n+\"%\",e(this).stop(1,1)[f?\"animate\":\"css\"](l,u.animate),a.options.range===!0&&(a.orientation===\"horizontal\"?(r===0&&a.range.stop(1,1)[f?\"animate\":\"css\"]({left:n+\"%\"},u.animate),r===1&&a.range[f?\"animate\":\"css\"]({width:n-t+\"%\"},{queue:!1,duration:u.animate})):(r===0&&a.range.stop(1,1)[f?\"animate\":\"css\"]({bottom:n+\"%\"},u.animate),r===1&&a.range[f?\"animate\":\"css\"]({height:n-t+\"%\"},{queue:!1,duration:u.animate}))),t=n}):(r=this.value(),i=this._valueMin(),s=this._valueMax(),n=s!==i?(r-i)/(s-i)*100:0,l[this.orientation===\"horizontal\"?\"left\":\"bottom\"]=n+\"%\",this.handle.stop(1,1)[f?\"animate\":\"css\"](l,u.animate),o===\"min\"&&this.orientation===\"horizontal\"&&this.range.stop(1,1)[f?\"animate\":\"css\"]({width:n+\"%\"},u.animate),o===\"max\"&&this.orientation===\"horizontal\"&&this.range[f?\"animate\":\"css\"]({width:100-n+\"%\"},{queue:!1,duration:u.animate}),o===\"min\"&&this.orientation===\"vertical\"&&this.range.stop(1,1)[f?\"animate\":\"css\"]({height:n+\"%\"},u.animate),o===\"max\"&&this.orientation===\"vertical\"&&this.range[f?\"animate\":\"css\"]({height:100-n+\"%\"},{queue:!1,duration:u.animate}))},_handleEvents:{keydown:function(t){var r,i,s,o,u=e(t.target).data(\"ui-slider-handle-index\");switch(t.keyCode){case e.ui.keyCode.HOME:case e.ui.keyCode.END:case e.ui.keyCode.PAGE_UP:case e.ui.keyCode.PAGE_DOWN:case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:t.preventDefault();if(!this._keySliding){this._keySliding=!0,e(t.target).addClass(\"ui-state-active\"),r=this._start(t,u);if(r===!1)return}}o=this.options.step,this.options.values&&this.options.values.length?i=s=this.values(u):i=s=this.value();switch(t.keyCode){case e.ui.keyCode.HOME:s=this._valueMin();break;case e.ui.keyCode.END:s=this._valueMax();break;case e.ui.keyCode.PAGE_UP:s=this._trimAlignValue(i+(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(i-(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:if(i===this._valueMax())return;s=this._trimAlignValue(i+o);break;case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(i===this._valueMin())return;s=this._trimAlignValue(i-o)}this._slide(t,u,s)},keyup:function(t){var n=e(t.target).data(\"ui-slider-handle-index\");this._keySliding&&(this._keySliding=!1,this._stop(t,n),this._change(t,n),e(t.target).removeClass(\"ui-state-active\"))}}})})(jQuery);(function(e){function t(e){return function(){var t=this.element.val();e.apply(this,arguments),this._refresh(),t!==this.element.val()&&this._trigger(\"change\")}}e.widget(\"ui.spinner\",{version:\"1.10.0\",defaultElement:\"<input>\",widgetEventPrefix:\"spin\",options:{culture:null,icons:{down:\"ui-icon-triangle-1-s\",up:\"ui-icon-triangle-1-n\"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption(\"max\",this.options.max),this._setOption(\"min\",this.options.min),this._setOption(\"step\",this.options.step),this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr(\"autocomplete\")}})},_getCreateOptions:function(){var t={},n=this.element;return e.each([\"min\",\"max\",\"step\"],function(e,r){var i=n.attr(r);i!==undefined&&i.length&&(t[r]=i)}),t},_events:{keydown:function(e){this._start(e)&&this._keydown(e)&&e.preventDefault()},keyup:\"_stop\",focus:function(){this.previous=this.element.val()},blur:function(e){if(this.cancelBlur){delete this.cancelBlur;return}this._refresh(),this.previous!==this.element.val()&&this._trigger(\"change\",e)},mousewheel:function(e,t){if(!t)return;if(!this.spinning&&!this._start(e))return!1;this._spin((t>0?1:-1)*this.options.step,e),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(e)},100),e.preventDefault()},\"mousedown .ui-spinner-button\":function(t){function r(){var e=this.element[0]===this.document[0].activeElement;e||(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n}))}var n;n=this.element[0]===this.document[0].activeElement?this.previous:this.element.val(),t.preventDefault(),r.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,r.call(this)});if(this._start(t)===!1)return;this._repeat(null,e(t.currentTarget).hasClass(\"ui-spinner-up\")?1:-1,t)},\"mouseup .ui-spinner-button\":\"_stop\",\"mouseenter .ui-spinner-button\":function(t){if(!e(t.currentTarget).hasClass(\"ui-state-active\"))return;if(this._start(t)===!1)return!1;this._repeat(null,e(t.currentTarget).hasClass(\"ui-spinner-up\")?1:-1,t)},\"mouseleave .ui-spinner-button\":\"_stop\"},_draw:function(){var e=this.uiSpinner=this.element.addClass(\"ui-spinner-input\").attr(\"autocomplete\",\"off\").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());this.element.attr(\"role\",\"spinbutton\"),this.buttons=e.find(\".ui-spinner-button\").attr(\"tabIndex\",-1).button().removeClass(\"ui-corner-all\"),this.buttons.height()>Math.ceil(e.height()*.5)&&e.height()>0&&e.height(e.height()),this.options.disabled&&this.disable()},_keydown:function(t){var n=this.options,r=e.ui.keyCode;switch(t.keyCode){case r.UP:return this._repeat(null,1,t),!0;case r.DOWN:return this._repeat(null,-1,t),!0;case r.PAGE_UP:return this._repeat(null,n.page,t),!0;case r.PAGE_DOWN:return this._repeat(null,-n.page,t),!0}return!1},_uiSpinnerHtml:function(){return\"<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>\"},_buttonHtml:function(){return\"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon \"+this.options.icons.up+\"'>&#9650;</span>\"+\"</a>\"+\"<a class='ui-spinner-button ui-spinner-down ui-corner-br'>\"+\"<span class='ui-icon \"+this.options.icons.down+\"'>&#9660;</span>\"+\"</a>\"},_start:function(e){return!this.spinning&&this._trigger(\"start\",e)===!1?!1:(this.counter||(this.counter=1),this.spinning=!0,!0)},_repeat:function(e,t,n){e=e||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,t,n)},e),this._spin(t*this.options.step,n)},_spin:function(e,t){var n=this.value()||0;this.counter||(this.counter=1),n=this._adjustValue(n+e*this._increment(this.counter));if(!this.spinning||this._trigger(\"spin\",t,{value:n})!==!1)this._value(n),this.counter++},_increment:function(t){var n=this.options.incremental;return n?e.isFunction(n)?n(t):Math.floor(t*t*t/5e4-t*t/500+17*t/200+1):1},_precision:function(){var e=this._precisionOf(this.options.step);return this.options.min!==null&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=e.toString(),n=t.indexOf(\".\");return n===-1?0:t.length-n-1},_adjustValue:function(e){var t,n,r=this.options;return t=r.min!==null?r.min:0,n=e-t,n=Math.round(n/r.step)*r.step,e=t+n,e=parseFloat(e.toFixed(this._precision())),r.max!==null&&e>r.max?r.max:r.min!==null&&e<r.min?r.min:e},_stop:function(e){if(!this.spinning)return;clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger(\"stop\",e)},_setOption:function(e,t){if(e===\"culture\"||e===\"numberFormat\"){var n=this._parse(this.element.val());this.options[e]=t,this.element.val(this._format(n));return}(e===\"max\"||e===\"min\"||e===\"step\")&&typeof t==\"string\"&&(t=this._parse(t)),e===\"icons\"&&(this.buttons.first().find(\".ui-icon\").removeClass(this.options.icons.up).addClass(t.up),this.buttons.last().find(\".ui-icon\").removeClass(this.options.icons.down).addClass(t.down)),this._super(e,t),e===\"disabled\"&&(t?(this.element.prop(\"disabled\",!0),this.buttons.button(\"disable\")):(this.element.prop(\"disabled\",!1),this.buttons.button(\"enable\")))},_setOptions:t(function(e){this._super(e),this._value(this.element.val())}),_parse:function(e){return typeof e==\"string\"&&e!==\"\"&&(e=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(e,10,this.options.culture):+e),e===\"\"||isNaN(e)?null:e},_format:function(e){return e===\"\"?\"\":window.Globalize&&this.options.numberFormat?Globalize.format(e,this.options.numberFormat,this.options.culture):e},_refresh:function(){this.element.attr({\"aria-valuemin\":this.options.min,\"aria-valuemax\":this.options.max,\"aria-valuenow\":this._parse(this.element.val())})},_value:function(e,t){var n;e!==\"\"&&(n=this._parse(e),n!==null&&(t||(n=this._adjustValue(n)),e=this._format(n))),this.element.val(e),this._refresh()},_destroy:function(){this.element.removeClass(\"ui-spinner-input\").prop(\"disabled\",!1).removeAttr(\"autocomplete\").removeAttr(\"role\").removeAttr(\"aria-valuemin\").removeAttr(\"aria-valuemax\").removeAttr(\"aria-valuenow\"),this.uiSpinner.replaceWith(this.element)},stepUp:t(function(e){this._stepUp(e)}),_stepUp:function(e){this._start()&&(this._spin((e||1)*this.options.step),this._stop())},stepDown:t(function(e){this._stepDown(e)}),_stepDown:function(e){this._start()&&(this._spin((e||1)*-this.options.step),this._stop())},pageUp:t(function(e){this._stepUp((e||1)*this.options.page)}),pageDown:t(function(e){this._stepDown((e||1)*this.options.page)}),value:function(e){if(!arguments.length)return this._parse(this.element.val());t(this._value).call(this,e)},widget:function(){return this.uiSpinner}})})(jQuery);(function(e,t){function i(){return++n}function s(e){return e.hash.length>1&&decodeURIComponent(e.href.replace(r,\"\"))===decodeURIComponent(location.href.replace(r,\"\"))}var n=0,r=/#.*$/;e.widget(\"ui.tabs\",{version:\"1.10.0\",delay:300,options:{active:null,collapsible:!1,event:\"click\",heightStyle:\"content\",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_create:function(){var t=this,n=this.options;this.running=!1,this.element.addClass(\"ui-tabs ui-widget ui-widget-content ui-corner-all\").toggleClass(\"ui-tabs-collapsible\",n.collapsible).delegate(\".ui-tabs-nav > li\",\"mousedown\"+this.eventNamespace,function(t){e(this).is(\".ui-state-disabled\")&&t.preventDefault()}).delegate(\".ui-tabs-anchor\",\"focus\"+this.eventNamespace,function(){e(this).closest(\"li\").is(\".ui-state-disabled\")&&this.blur()}),this._processTabs(),n.active=this._initialActive(),e.isArray(n.disabled)&&(n.disabled=e.unique(n.disabled.concat(e.map(this.tabs.filter(\".ui-state-disabled\"),function(e){return t.tabs.index(e)}))).sort()),this.options.active!==!1&&this.anchors.length?this.active=this._findActive(n.active):this.active=e(),this._refresh(),this.active.length&&this.load(n.active)},_initialActive:function(){var t=this.options.active,n=this.options.collapsible,r=location.hash.substring(1);if(t===null){r&&this.tabs.each(function(n,i){if(e(i).attr(\"aria-controls\")===r)return t=n,!1}),t===null&&(t=this.tabs.index(this.tabs.filter(\".ui-tabs-active\")));if(t===null||t===-1)t=this.tabs.length?0:!1}return t!==!1&&(t=this.tabs.index(this.tabs.eq(t)),t===-1&&(t=n?!1:0)),!n&&t===!1&&this.anchors.length&&(t=0),t},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):e()}},_tabKeydown:function(t){var n=e(this.document[0].activeElement).closest(\"li\"),r=this.tabs.index(n),i=!0;if(this._handlePageNav(t))return;switch(t.keyCode){case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:r++;break;case e.ui.keyCode.UP:case e.ui.keyCode.LEFT:i=!1,r--;break;case e.ui.keyCode.END:r=this.anchors.length-1;break;case e.ui.keyCode.HOME:r=0;break;case e.ui.keyCode.SPACE:t.preventDefault(),clearTimeout(this.activating),this._activate(r);return;case e.ui.keyCode.ENTER:t.preventDefault(),clearTimeout(this.activating),this._activate(r===this.options.active?!1:r);return;default:return}t.preventDefault(),clearTimeout(this.activating),r=this._focusNextTab(r,i),t.ctrlKey||(n.attr(\"aria-selected\",\"false\"),this.tabs.eq(r).attr(\"aria-selected\",\"true\"),this.activating=this._delay(function(){this.option(\"active\",r)},this.delay))},_panelKeydown:function(t){if(this._handlePageNav(t))return;t.ctrlKey&&t.keyCode===e.ui.keyCode.UP&&(t.preventDefault(),this.active.focus())},_handlePageNav:function(t){if(t.altKey&&t.keyCode===e.ui.keyCode.PAGE_UP)return this._activate(this._focusNextTab(this.options.active-1,!1)),!0;if(t.altKey&&t.keyCode===e.ui.keyCode.PAGE_DOWN)return this._activate(this._focusNextTab(this.options.active+1,!0)),!0},_findNextTab:function(t,n){function i(){return t>r&&(t=0),t<0&&(t=r),t}var r=this.tabs.length-1;while(e.inArray(i(),this.options.disabled)!==-1)t=n?t+1:t-1;return t},_focusNextTab:function(e,t){return e=this._findNextTab(e,t),this.tabs.eq(e).focus(),e},_setOption:function(e,t){if(e===\"active\"){this._activate(t);return}if(e===\"disabled\"){this._setupDisabled(t);return}this._super(e,t),e===\"collapsible\"&&(this.element.toggleClass(\"ui-tabs-collapsible\",t),!t&&this.options.active===!1&&this._activate(0)),e===\"event\"&&this._setupEvents(t),e===\"heightStyle\"&&this._setupHeightStyle(t)},_tabId:function(e){return e.attr(\"aria-controls\")||\"ui-tabs-\"+i()},_sanitizeSelector:function(e){return e?e.replace(/[!\"$%&'()*+,.\\/:;<=>?@\\[\\]\\^`{|}~]/g,\"\\\\$&\"):\"\"},refresh:function(){var t=this.options,n=this.tablist.children(\":has(a[href])\");t.disabled=e.map(n.filter(\".ui-state-disabled\"),function(e){return n.index(e)}),this._processTabs(),t.active===!1||!this.anchors.length?(t.active=!1,this.active=e()):this.active.length&&!e.contains(this.tablist[0],this.active[0])?this.tabs.length===t.disabled.length?(t.active=!1,this.active=e()):this._activate(this._findNextTab(Math.max(0,t.active-1),!1)):t.active=this.tabs.index(this.active),this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({\"aria-selected\":\"false\",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({\"aria-expanded\":\"false\",\"aria-hidden\":\"true\"}),this.active.length?(this.active.addClass(\"ui-tabs-active ui-state-active\").attr({\"aria-selected\":\"true\",tabIndex:0}),this._getPanelForTab(this.active).show().attr({\"aria-expanded\":\"true\",\"aria-hidden\":\"false\"})):this.tabs.eq(0).attr(\"tabIndex\",0)},_processTabs:function(){var t=this;this.tablist=this._getList().addClass(\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\").attr(\"role\",\"tablist\"),this.tabs=this.tablist.find(\"> li:has(a[href])\").addClass(\"ui-state-default ui-corner-top\").attr({role:\"tab\",tabIndex:-1}),this.anchors=this.tabs.map(function(){return e(\"a\",this)[0]}).addClass(\"ui-tabs-anchor\").attr({role:\"presentation\",tabIndex:-1}),this.panels=e(),this.anchors.each(function(n,r){var i,o,u,a=e(r).uniqueId().attr(\"id\"),f=e(r).closest(\"li\"),l=f.attr(\"aria-controls\");s(r)?(i=r.hash,o=t.element.find(t._sanitizeSelector(i))):(u=t._tabId(f),i=\"#\"+u,o=t.element.find(i),o.length||(o=t._createPanel(u),o.insertAfter(t.panels[n-1]||t.tablist)),o.attr(\"aria-live\",\"polite\")),o.length&&(t.panels=t.panels.add(o)),l&&f.data(\"ui-tabs-aria-controls\",l),f.attr({\"aria-controls\":i.substring(1),\"aria-labelledby\":a}),o.attr(\"aria-labelledby\",a)}),this.panels.addClass(\"ui-tabs-panel ui-widget-content ui-corner-bottom\").attr(\"role\",\"tabpanel\")},_getList:function(){return this.element.find(\"ol,ul\").eq(0)},_createPanel:function(t){return e(\"<div>\").attr(\"id\",t).addClass(\"ui-tabs-panel ui-widget-content ui-corner-bottom\").data(\"ui-tabs-destroy\",!0)},_setupDisabled:function(t){e.isArray(t)&&(t.length?t.length===this.anchors.length&&(t=!0):t=!1);for(var n=0,r;r=this.tabs[n];n++)t===!0||e.inArray(n,t)!==-1?e(r).addClass(\"ui-state-disabled\").attr(\"aria-disabled\",\"true\"):e(r).removeClass(\"ui-state-disabled\").removeAttr(\"aria-disabled\");this.options.disabled=t},_setupEvents:function(t){var n={click:function(e){e.preventDefault()}};t&&e.each(t.split(\" \"),function(e,t){n[t]=\"_eventHandler\"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(this.anchors,n),this._on(this.tabs,{keydown:\"_tabKeydown\"}),this._on(this.panels,{keydown:\"_panelKeydown\"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(t){var n,r=this.element.parent();t===\"fill\"?(n=r.height(),n-=this.element.outerHeight()-this.element.height(),this.element.siblings(\":visible\").each(function(){var t=e(this),r=t.css(\"position\");if(r===\"absolute\"||r===\"fixed\")return;n-=t.outerHeight(!0)}),this.element.children().not(this.panels).each(function(){n-=e(this).outerHeight(!0)}),this.panels.each(function(){e(this).height(Math.max(0,n-e(this).innerHeight()+e(this).height()))}).css(\"overflow\",\"auto\")):t===\"auto\"&&(n=0,this.panels.each(function(){n=Math.max(n,e(this).height(\"\").height())}).height(n))},_eventHandler:function(t){var n=this.options,r=this.active,i=e(t.currentTarget),s=i.closest(\"li\"),o=s[0]===r[0],u=o&&n.collapsible,a=u?e():this._getPanelForTab(s),f=r.length?this._getPanelForTab(r):e(),l={oldTab:r,oldPanel:f,newTab:u?e():s,newPanel:a};t.preventDefault();if(s.hasClass(\"ui-state-disabled\")||s.hasClass(\"ui-tabs-loading\")||this.running||o&&!n.collapsible||this._trigger(\"beforeActivate\",t,l)===!1)return;n.active=u?!1:this.tabs.index(s),this.active=o?e():s,this.xhr&&this.xhr.abort(),!f.length&&!a.length&&e.error(\"jQuery UI Tabs: Mismatching fragment identifier.\"),a.length&&this.load(this.tabs.index(s),t),this._toggle(t,l)},_toggle:function(t,n){function o(){r.running=!1,r._trigger(\"activate\",t,n)}function u(){n.newTab.closest(\"li\").addClass(\"ui-tabs-active ui-state-active\"),i.length&&r.options.show?r._show(i,r.options.show,o):(i.show(),o())}var r=this,i=n.newPanel,s=n.oldPanel;this.running=!0,s.length&&this.options.hide?this._hide(s,this.options.hide,function(){n.oldTab.closest(\"li\").removeClass(\"ui-tabs-active ui-state-active\"),u()}):(n.oldTab.closest(\"li\").removeClass(\"ui-tabs-active ui-state-active\"),s.hide(),u()),s.attr({\"aria-expanded\":\"false\",\"aria-hidden\":\"true\"}),n.oldTab.attr(\"aria-selected\",\"false\"),i.length&&s.length?n.oldTab.attr(\"tabIndex\",-1):i.length&&this.tabs.filter(function(){return e(this).attr(\"tabIndex\")===0}).attr(\"tabIndex\",-1),i.attr({\"aria-expanded\":\"true\",\"aria-hidden\":\"false\"}),n.newTab.attr({\"aria-selected\":\"true\",tabIndex:0})},_activate:function(t){var n,r=this._findActive(t);if(r[0]===this.active[0])return;r.length||(r=this.active),n=r.find(\".ui-tabs-anchor\")[0],this._eventHandler({target:n,currentTarget:n,preventDefault:e.noop})},_findActive:function(t){return t===!1?e():this.tabs.eq(t)},_getIndex:function(e){return typeof e==\"string\"&&(e=this.anchors.index(this.anchors.filter(\"[href$='\"+e+\"']\"))),e},_destroy:function(){this.xhr&&this.xhr.abort(),this.element.removeClass(\"ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible\"),this.tablist.removeClass(\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\").removeAttr(\"role\"),this.anchors.removeClass(\"ui-tabs-anchor\").removeAttr(\"role\").removeAttr(\"tabIndex\").removeUniqueId(),this.tabs.add(this.panels).each(function(){e.data(this,\"ui-tabs-destroy\")?e(this).remove():e(this).removeClass(\"ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel\").removeAttr(\"tabIndex\").removeAttr(\"aria-live\").removeAttr(\"aria-busy\").removeAttr(\"aria-selected\").removeAttr(\"aria-labelledby\").removeAttr(\"aria-hidden\").removeAttr(\"aria-expanded\").removeAttr(\"role\")}),this.tabs.each(function(){var t=e(this),n=t.data(\"ui-tabs-aria-controls\");n?t.attr(\"aria-controls\",n).removeData(\"ui-tabs-aria-controls\"):t.removeAttr(\"aria-controls\")}),this.panels.show(),this.options.heightStyle!==\"content\"&&this.panels.css(\"height\",\"\")},enable:function(n){var r=this.options.disabled;if(r===!1)return;n===t?r=!1:(n=this._getIndex(n),e.isArray(r)?r=e.map(r,function(e){return e!==n?e:null}):r=e.map(this.tabs,function(e,t){return t!==n?t:null})),this._setupDisabled(r)},disable:function(n){var r=this.options.disabled;if(r===!0)return;if(n===t)r=!0;else{n=this._getIndex(n);if(e.inArray(n,r)!==-1)return;e.isArray(r)?r=e.merge([n],r).sort():r=[n]}this._setupDisabled(r)},load:function(t,n){t=this._getIndex(t);var r=this,i=this.tabs.eq(t),o=i.find(\".ui-tabs-anchor\"),u=this._getPanelForTab(i),a={tab:i,panel:u};if(s(o[0]))return;this.xhr=e.ajax(this._ajaxSettings(o,n,a)),this.xhr&&this.xhr.statusText!==\"canceled\"&&(i.addClass(\"ui-tabs-loading\"),u.attr(\"aria-busy\",\"true\"),this.xhr.success(function(e){setTimeout(function(){u.html(e),r._trigger(\"load\",n,a)},1)}).complete(function(e,t){setTimeout(function(){t===\"abort\"&&r.panels.stop(!1,!0),i.removeClass(\"ui-tabs-loading\"),u.removeAttr(\"aria-busy\"),e===r.xhr&&delete r.xhr},1)}))},_ajaxSettings:function(t,n,r){var i=this;return{url:t.attr(\"href\"),beforeSend:function(t,s){return i._trigger(\"beforeLoad\",n,e.extend({jqXHR:t,ajaxSettings:s},r))}}},_getPanelForTab:function(t){var n=e(t).attr(\"aria-controls\");return this.element.find(this._sanitizeSelector(\"#\"+n))}})})(jQuery);(function(e){function n(t,n){var r=(t.attr(\"aria-describedby\")||\"\").split(/\\s+/);r.push(n),t.data(\"ui-tooltip-id\",n).attr(\"aria-describedby\",e.trim(r.join(\" \")))}function r(t){var n=t.data(\"ui-tooltip-id\"),r=(t.attr(\"aria-describedby\")||\"\").split(/\\s+/),i=e.inArray(n,r);i!==-1&&r.splice(i,1),t.removeData(\"ui-tooltip-id\"),r=e.trim(r.join(\" \")),r?t.attr(\"aria-describedby\",r):t.removeAttr(\"aria-describedby\")}var t=0;e.widget(\"ui.tooltip\",{version:\"1.10.0\",options:{content:function(){var t=e(this).attr(\"title\")||\"\";return e(\"<a>\").text(t).html()},hide:!0,items:\"[title]:not([disabled])\",position:{my:\"left top+15\",at:\"left bottom\",collision:\"flipfit flip\"},show:!0,tooltipClass:null,track:!1,close:null,open:null},_create:function(){this._on({mouseover:\"open\",focusin:\"open\"}),this.tooltips={},this.parents={},this.options.disabled&&this._disable()},_setOption:function(t,n){var r=this;if(t===\"disabled\"){this[n?\"_disable\":\"_enable\"](),this.options[t]=n;return}this._super(t,n),t===\"content\"&&e.each(this.tooltips,function(e,t){r._updateContent(t)})},_disable:function(){var t=this;e.each(this.tooltips,function(n,r){var i=e.Event(\"blur\");i.target=i.currentTarget=r[0],t.close(i,!0)}),this.element.find(this.options.items).addBack().each(function(){var t=e(this);t.is(\"[title]\")&&t.data(\"ui-tooltip-title\",t.attr(\"title\")).attr(\"title\",\"\")})},_enable:function(){this.element.find(this.options.items).addBack().each(function(){var t=e(this);t.data(\"ui-tooltip-title\")&&t.attr(\"title\",t.data(\"ui-tooltip-title\"))})},open:function(t){var n=this,r=e(t?t.target:this.element).closest(this.options.items);if(!r.length||r.data(\"ui-tooltip-id\"))return;r.attr(\"title\")&&r.data(\"ui-tooltip-title\",r.attr(\"title\")),r.data(\"ui-tooltip-open\",!0),t&&t.type===\"mouseover\"&&r.parents().each(function(){var t=e(this),r;t.data(\"ui-tooltip-open\")&&(r=e.Event(\"blur\"),r.target=r.currentTarget=this,n.close(r,!0)),t.attr(\"title\")&&(t.uniqueId(),n.parents[this.id]={element:this,title:t.attr(\"title\")},t.attr(\"title\",\"\"))}),this._updateContent(r,t)},_updateContent:function(e,t){var n,r=this.options.content,i=this,s=t?t.type:null;if(typeof r==\"string\")return this._open(t,e,r);n=r.call(e[0],function(n){if(!e.data(\"ui-tooltip-open\"))return;i._delay(function(){t&&(t.type=s),this._open(t,e,n)})}),n&&this._open(t,e,n)},_open:function(t,r,i){function f(e){a.of=e;if(s.is(\":hidden\"))return;s.position(a)}var s,o,u,a=e.extend({},this.options.position);if(!i)return;s=this._find(r);if(s.length){s.find(\".ui-tooltip-content\").html(i);return}r.is(\"[title]\")&&(t&&t.type===\"mouseover\"?r.attr(\"title\",\"\"):r.removeAttr(\"title\")),s=this._tooltip(r),n(r,s.attr(\"id\")),s.find(\".ui-tooltip-content\").html(i),this.options.track&&t&&/^mouse/.test(t.type)?(this._on(this.document,{mousemove:f}),f(t)):s.position(e.extend({of:r},this.options.position)),s.hide(),this._show(s,this.options.show),this.options.show&&this.options.show.delay&&(u=this.delayedShow=setInterval(function(){s.is(\":visible\")&&(f(a.of),clearInterval(u))},e.fx.interval)),this._trigger(\"open\",t,{tooltip:s}),o={keyup:function(t){if(t.keyCode===e.ui.keyCode.ESCAPE){var n=e.Event(t);n.currentTarget=r[0],this.close(n,!0)}},remove:function(){this._removeTooltip(s)}};if(!t||t.type===\"mouseover\")o.mouseleave=\"close\";if(!t||t.type===\"focusin\")o.focusout=\"close\";this._on(!0,r,o)},close:function(t){var n=this,i=e(t?t.currentTarget:this.element),s=this._find(i);if(this.closing)return;clearInterval(this.delayedShow),i.data(\"ui-tooltip-title\")&&i.attr(\"title\",i.data(\"ui-tooltip-title\")),r(i),s.stop(!0),this._hide(s,this.options.hide,function(){n._removeTooltip(e(this))}),i.removeData(\"ui-tooltip-open\"),this._off(i,\"mouseleave focusout keyup\"),i[0]!==this.element[0]&&this._off(i,\"remove\"),this._off(this.document,\"mousemove\"),t&&t.type===\"mouseleave\"&&e.each(this.parents,function(t,r){e(r.element).attr(\"title\",r.title),delete n.parents[t]}),this.closing=!0,this._trigger(\"close\",t,{tooltip:s}),this.closing=!1},_tooltip:function(n){var r=\"ui-tooltip-\"+t++,i=e(\"<div>\").attr({id:r,role:\"tooltip\"}).addClass(\"ui-tooltip ui-widget ui-corner-all ui-widget-content \"+(this.options.tooltipClass||\"\"));return e(\"<div>\").addClass(\"ui-tooltip-content\").appendTo(i),i.appendTo(this.document[0].body),this.tooltips[r]=n,i},_find:function(t){var n=t.data(\"ui-tooltip-id\");return n?e(\"#\"+n):e()},_removeTooltip:function(e){e.remove(),delete this.tooltips[e.attr(\"id\")]},_destroy:function(){var t=this;e.each(this.tooltips,function(n,r){var i=e.Event(\"blur\");i.target=i.currentTarget=r[0],t.close(i,!0),e(\"#\"+n).remove(),r.data(\"ui-tooltip-title\")&&(r.attr(\"title\",r.data(\"ui-tooltip-title\")),r.removeData(\"ui-tooltip-title\"))})}})})(jQuery);jQuery.effects||function(e,t){var n=\"ui-effects-\";e.effects={effect:{}},function(e,t){function h(e,t,n){var r=u[t.type]||{};return e==null?n||!t.def?null:t.def:(e=r.floor?~~e:parseFloat(e),isNaN(e)?t.def:r.mod?(e+r.mod)%r.mod:0>e?0:r.max<e?r.max:e)}function p(t){var n=s(),r=n._rgba=[];return t=t.toLowerCase(),c(i,function(e,i){var s,u=i.re.exec(t),a=u&&i.parse(u),f=i.space||\"rgba\";if(a)return s=n[f](a),n[o[f].cache]=s[o[f].cache],r=n._rgba=s._rgba,!1}),r.length?(r.join()===\"0,0,0,0\"&&e.extend(r,l.transparent),n):l[t]}function d(e,t,n){return n=(n+1)%1,n*6<1?e+(t-e)*n*6:n*2<1?t:n*3<2?e+(t-e)*(2/3-n)*6:e}var n=\"backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor\",r=/^([\\-+])=\\s*(\\d+\\.?\\d*)/,i=[{re:/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,parse:function(e){return[e[1],e[2],e[3],e[4]]}},{re:/rgba?\\(\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,parse:function(e){return[e[1]*2.55,e[2]*2.55,e[3]*2.55,e[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}},{re:/hsla?\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,space:\"hsla\",parse:function(e){return[e[1],e[2]/100,e[3]/100,e[4]]}}],s=e.Color=function(t,n,r,i){return new e.Color.fn.parse(t,n,r,i)},o={rgba:{props:{red:{idx:0,type:\"byte\"},green:{idx:1,type:\"byte\"},blue:{idx:2,type:\"byte\"}}},hsla:{props:{hue:{idx:0,type:\"degrees\"},saturation:{idx:1,type:\"percent\"},lightness:{idx:2,type:\"percent\"}}}},u={\"byte\":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},a=s.support={},f=e(\"<p>\")[0],l,c=e.each;f.style.cssText=\"background-color:rgba(1,1,1,.5)\",a.rgba=f.style.backgroundColor.indexOf(\"rgba\")>-1,c(o,function(e,t){t.cache=\"_\"+e,t.props.alpha={idx:3,type:\"percent\",def:1}}),s.fn=e.extend(s.prototype,{parse:function(n,r,i,u){if(n===t)return this._rgba=[null,null,null,null],this;if(n.jquery||n.nodeType)n=e(n).css(r),r=t;var a=this,f=e.type(n),d=this._rgba=[];r!==t&&(n=[n,r,i,u],f=\"array\");if(f===\"string\")return this.parse(p(n)||l._default);if(f===\"array\")return c(o.rgba.props,function(e,t){d[t.idx]=h(n[t.idx],t)}),this;if(f===\"object\")return n instanceof s?c(o,function(e,t){n[t.cache]&&(a[t.cache]=n[t.cache].slice())}):c(o,function(t,r){var i=r.cache;c(r.props,function(e,t){if(!a[i]&&r.to){if(e===\"alpha\"||n[e]==null)return;a[i]=r.to(a._rgba)}a[i][t.idx]=h(n[e],t,!0)}),a[i]&&e.inArray(null,a[i].slice(0,3))<0&&(a[i][3]=1,r.from&&(a._rgba=r.from(a[i])))}),this},is:function(e){var t=s(e),n=!0,r=this;return c(o,function(e,i){var s,o=t[i.cache];return o&&(s=r[i.cache]||i.to&&i.to(r._rgba)||[],c(i.props,function(e,t){if(o[t.idx]!=null)return n=o[t.idx]===s[t.idx],n})),n}),n},_space:function(){var e=[],t=this;return c(o,function(n,r){t[r.cache]&&e.push(n)}),e.pop()},transition:function(e,t){var n=s(e),r=n._space(),i=o[r],a=this.alpha()===0?s(\"transparent\"):this,f=a[i.cache]||i.to(a._rgba),l=f.slice();return n=n[i.cache],c(i.props,function(e,r){var i=r.idx,s=f[i],o=n[i],a=u[r.type]||{};if(o===null)return;s===null?l[i]=o:(a.mod&&(o-s>a.mod/2?s+=a.mod:s-o>a.mod/2&&(s-=a.mod)),l[i]=h((o-s)*t+s,r))}),this[r](l)},blend:function(t){if(this._rgba[3]===1)return this;var n=this._rgba.slice(),r=n.pop(),i=s(t)._rgba;return s(e.map(n,function(e,t){return(1-r)*i[t]+r*e}))},toRgbaString:function(){var t=\"rgba(\",n=e.map(this._rgba,function(e,t){return e==null?t>2?1:0:e});return n[3]===1&&(n.pop(),t=\"rgb(\"),t+n.join()+\")\"},toHslaString:function(){var t=\"hsla(\",n=e.map(this.hsla(),function(e,t){return e==null&&(e=t>2?1:0),t&&t<3&&(e=Math.round(e*100)+\"%\"),e});return n[3]===1&&(n.pop(),t=\"hsl(\"),t+n.join()+\")\"},toHexString:function(t){var n=this._rgba.slice(),r=n.pop();return t&&n.push(~~(r*255)),\"#\"+e.map(n,function(e){return e=(e||0).toString(16),e.length===1?\"0\"+e:e}).join(\"\")},toString:function(){return this._rgba[3]===0?\"transparent\":this.toRgbaString()}}),s.fn.parse.prototype=s.fn,o.hsla.to=function(e){if(e[0]==null||e[1]==null||e[2]==null)return[null,null,null,e[3]];var t=e[0]/255,n=e[1]/255,r=e[2]/255,i=e[3],s=Math.max(t,n,r),o=Math.min(t,n,r),u=s-o,a=s+o,f=a*.5,l,c;return o===s?l=0:t===s?l=60*(n-r)/u+360:n===s?l=60*(r-t)/u+120:l=60*(t-n)/u+240,u===0?c=0:f<=.5?c=u/a:c=u/(2-a),[Math.round(l)%360,c,f,i==null?1:i]},o.hsla.from=function(e){if(e[0]==null||e[1]==null||e[2]==null)return[null,null,null,e[3]];var t=e[0]/360,n=e[1],r=e[2],i=e[3],s=r<=.5?r*(1+n):r+n-r*n,o=2*r-s;return[Math.round(d(o,s,t+1/3)*255),Math.round(d(o,s,t)*255),Math.round(d(o,s,t-1/3)*255),i]},c(o,function(n,i){var o=i.props,u=i.cache,a=i.to,f=i.from;s.fn[n]=function(n){a&&!this[u]&&(this[u]=a(this._rgba));if(n===t)return this[u].slice();var r,i=e.type(n),l=i===\"array\"||i===\"object\"?n:arguments,p=this[u].slice();return c(o,function(e,t){var n=l[i===\"object\"?e:t.idx];n==null&&(n=p[t.idx]),p[t.idx]=h(n,t)}),f?(r=s(f(p)),r[u]=p,r):s(p)},c(o,function(t,i){if(s.fn[t])return;s.fn[t]=function(s){var o=e.type(s),u=t===\"alpha\"?this._hsla?\"hsla\":\"rgba\":n,a=this[u](),f=a[i.idx],l;return o===\"undefined\"?f:(o===\"function\"&&(s=s.call(this,f),o=e.type(s)),s==null&&i.empty?this:(o===\"string\"&&(l=r.exec(s),l&&(s=f+parseFloat(l[2])*(l[1]===\"+\"?1:-1))),a[i.idx]=s,this[u](a)))}})}),s.hook=function(t){var n=t.split(\" \");c(n,function(t,n){e.cssHooks[n]={set:function(t,r){var i,o,u=\"\";if(r!==\"transparent\"&&(e.type(r)!==\"string\"||(i=p(r)))){r=s(i||r);if(!a.rgba&&r._rgba[3]!==1){o=n===\"backgroundColor\"?t.parentNode:t;while((u===\"\"||u===\"transparent\")&&o&&o.style)try{u=e.css(o,\"backgroundColor\"),o=o.parentNode}catch(f){}r=r.blend(u&&u!==\"transparent\"?u:\"_default\")}r=r.toRgbaString()}try{t.style[n]=r}catch(f){}}},e.fx.step[n]=function(t){t.colorInit||(t.start=s(t.elem,n),t.end=s(t.end),t.colorInit=!0),e.cssHooks[n].set(t.elem,t.start.transition(t.end,t.pos))}})},s.hook(n),e.cssHooks.borderColor={expand:function(e){var t={};return c([\"Top\",\"Right\",\"Bottom\",\"Left\"],function(n,r){t[\"border\"+r+\"Color\"]=e}),t}},l=e.Color.names={aqua:\"#00ffff\",black:\"#000000\",blue:\"#0000ff\",fuchsia:\"#ff00ff\",gray:\"#808080\",green:\"#008000\",lime:\"#00ff00\",maroon:\"#800000\",navy:\"#000080\",olive:\"#808000\",purple:\"#800080\",red:\"#ff0000\",silver:\"#c0c0c0\",teal:\"#008080\",white:\"#ffffff\",yellow:\"#ffff00\",transparent:[null,null,null,0],_default:\"#ffffff\"}}(jQuery),function(){function i(t){var n,r,i=t.ownerDocument.defaultView?t.ownerDocument.defaultView.getComputedStyle(t,null):t.currentStyle,s={};if(i&&i.length&&i[0]&&i[i[0]]){r=i.length;while(r--)n=i[r],typeof i[n]==\"string\"&&(s[e.camelCase(n)]=i[n])}else for(n in i)typeof i[n]==\"string\"&&(s[n]=i[n]);return s}function s(t,n){var i={},s,o;for(s in n)o=n[s],t[s]!==o&&!r[s]&&(e.fx.step[s]||!isNaN(parseFloat(o)))&&(i[s]=o);return i}var n=[\"add\",\"remove\",\"toggle\"],r={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};e.each([\"borderLeftStyle\",\"borderRightStyle\",\"borderBottomStyle\",\"borderTopStyle\"],function(t,n){e.fx.step[n]=function(e){if(e.end!==\"none\"&&!e.setAttr||e.pos===1&&!e.setAttr)jQuery.style(e.elem,n,e.end),e.setAttr=!0}}),e.fn.addBack||(e.fn.addBack=function(e){return this.add(e==null?this.prevObject:this.prevObject.filter(e))}),e.effects.animateClass=function(t,r,o,u){var a=e.speed(r,o,u);return this.queue(function(){var r=e(this),o=r.attr(\"class\")||\"\",u,f=a.children?r.find(\"*\").addBack():r;f=f.map(function(){var t=e(this);return{el:t,start:i(this)}}),u=function(){e.each(n,function(e,n){t[n]&&r[n+\"Class\"](t[n])})},u(),f=f.map(function(){return this.end=i(this.el[0]),this.diff=s(this.start,this.end),this}),r.attr(\"class\",o),f=f.map(function(){var t=this,n=e.Deferred(),r=e.extend({},a,{queue:!1,complete:function(){n.resolve(t)}});return this.el.animate(this.diff,r),n.promise()}),e.when.apply(e,f.get()).done(function(){u(),e.each(arguments,function(){var t=this.el;e.each(this.diff,function(e){t.css(e,\"\")})}),a.complete.call(r[0])})})},e.fn.extend({_addClass:e.fn.addClass,addClass:function(t,n,r,i){return n?e.effects.animateClass.call(this,{add:t},n,r,i):this._addClass(t)},_removeClass:e.fn.removeClass,removeClass:function(t,n,r,i){return n?e.effects.animateClass.call(this,{remove:t},n,r,i):this._removeClass(t)},_toggleClass:e.fn.toggleClass,toggleClass:function(n,r,i,s,o){return typeof r==\"boolean\"||r===t?i?e.effects.animateClass.call(this,r?{add:n}:{remove:n},i,s,o):this._toggleClass(n,r):e.effects.animateClass.call(this,{toggle:n},r,i,s)},switchClass:function(t,n,r,i,s){return e.effects.animateClass.call(this,{add:n,remove:t},r,i,s)}})}(),function(){function r(t,n,r,i){e.isPlainObject(t)&&(n=t,t=t.effect),t={effect:t},n==null&&(n={}),e.isFunction(n)&&(i=n,r=null,n={});if(typeof n==\"number\"||e.fx.speeds[n])i=r,r=n,n={};return e.isFunction(r)&&(i=r,r=null),n&&e.extend(t,n),r=r||n.duration,t.duration=e.fx.off?0:typeof r==\"number\"?r:r in e.fx.speeds?e.fx.speeds[r]:e.fx.speeds._default,t.complete=i||n.complete,t}function i(t){return!t||typeof t==\"number\"||e.fx.speeds[t]?!0:typeof t==\"string\"&&!e.effects.effect[t]}e.extend(e.effects,{version:\"1.10.0\",save:function(e,t){for(var r=0;r<t.length;r++)t[r]!==null&&e.data(n+t[r],e[0].style[t[r]])},restore:function(e,r){var i,s;for(s=0;s<r.length;s++)r[s]!==null&&(i=e.data(n+r[s]),i===t&&(i=\"\"),e.css(r[s],i))},setMode:function(e,t){return t===\"toggle\"&&(t=e.is(\":hidden\")?\"show\":\"hide\"),t},getBaseline:function(e,t){var n,r;switch(e[0]){case\"top\":n=0;break;case\"middle\":n=.5;break;case\"bottom\":n=1;break;default:n=e[0]/t.height}switch(e[1]){case\"left\":r=0;break;case\"center\":r=.5;break;case\"right\":r=1;break;default:r=e[1]/t.width}return{x:r,y:n}},createWrapper:function(t){if(t.parent().is(\".ui-effects-wrapper\"))return t.parent();var n={width:t.outerWidth(!0),height:t.outerHeight(!0),\"float\":t.css(\"float\")},r=e(\"<div></div>\").addClass(\"ui-effects-wrapper\").css({fontSize:\"100%\",background:\"transparent\",border:\"none\",margin:0,padding:0}),i={width:t.width(),height:t.height()},s=document.activeElement;try{s.id}catch(o){s=document.body}return t.wrap(r),(t[0]===s||e.contains(t[0],s))&&e(s).focus(),r=t.parent(),t.css(\"position\")===\"static\"?(r.css({position:\"relative\"}),t.css({position:\"relative\"})):(e.extend(n,{position:t.css(\"position\"),zIndex:t.css(\"z-index\")}),e.each([\"top\",\"left\",\"bottom\",\"right\"],function(e,r){n[r]=t.css(r),isNaN(parseInt(n[r],10))&&(n[r]=\"auto\")}),t.css({position:\"relative\",top:0,left:0,right:\"auto\",bottom:\"auto\"})),t.css(i),r.css(n).show()},removeWrapper:function(t){var n=document.activeElement;return t.parent().is(\".ui-effects-wrapper\")&&(t.parent().replaceWith(t),(t[0]===n||e.contains(t[0],n))&&e(n).focus()),t},setTransition:function(t,n,r,i){return i=i||{},e.each(n,function(e,n){var s=t.cssUnit(n);s[0]>0&&(i[n]=s[0]*r+s[1])}),i}}),e.fn.extend({effect:function(){function o(n){function u(){e.isFunction(i)&&i.call(r[0]),e.isFunction(n)&&n()}var r=e(this),i=t.complete,o=t.mode;(r.is(\":hidden\")?o===\"hide\":o===\"show\")?u():s.call(r[0],t,u)}var t=r.apply(this,arguments),n=t.mode,i=t.queue,s=e.effects.effect[t.effect];return e.fx.off||!s?n?this[n](t.duration,t.complete):this.each(function(){t.complete&&t.complete.call(this)}):i===!1?this.each(o):this.queue(i||\"fx\",o)},_show:e.fn.show,show:function(e){if(i(e))return this._show.apply(this,arguments);var t=r.apply(this,arguments);return t.mode=\"show\",this.effect.call(this,t)},_hide:e.fn.hide,hide:function(e){if(i(e))return this._hide.apply(this,arguments);var t=r.apply(this,arguments);return t.mode=\"hide\",this.effect.call(this,t)},__toggle:e.fn.toggle,toggle:function(t){if(i(t)||typeof t==\"boolean\"||e.isFunction(t))return this.__toggle.apply(this,arguments);var n=r.apply(this,arguments);return n.mode=\"toggle\",this.effect.call(this,n)},cssUnit:function(t){var n=this.css(t),r=[];return e.each([\"em\",\"px\",\"%\",\"pt\"],function(e,t){n.indexOf(t)>0&&(r=[parseFloat(n),t])}),r}})}(),function(){var t={};e.each([\"Quad\",\"Cubic\",\"Quart\",\"Quint\",\"Expo\"],function(e,n){t[n]=function(t){return Math.pow(t,e+2)}}),e.extend(t,{Sine:function(e){return 1-Math.cos(e*Math.PI/2)},Circ:function(e){return 1-Math.sqrt(1-e*e)},Elastic:function(e){return e===0||e===1?e:-Math.pow(2,8*(e-1))*Math.sin(((e-1)*80-7.5)*Math.PI/15)},Back:function(e){return e*e*(3*e-2)},Bounce:function(e){var t,n=4;while(e<((t=Math.pow(2,--n))-1)/11);return 1/Math.pow(4,3-n)-7.5625*Math.pow((t*3-2)/22-e,2)}}),e.each(t,function(t,n){e.easing[\"easeIn\"+t]=n,e.easing[\"easeOut\"+t]=function(e){return 1-n(1-e)},e.easing[\"easeInOut\"+t]=function(e){return e<.5?n(e*2)/2:1-n(e*-2+2)/2}})}()}(jQuery);(function(e,t){var n=/up|down|vertical/,r=/up|left|vertical|horizontal/;e.effects.effect.blind=function(t,i){var s=e(this),o=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],u=e.effects.setMode(s,t.mode||\"hide\"),a=t.direction||\"up\",f=n.test(a),l=f?\"height\":\"width\",c=f?\"top\":\"left\",h=r.test(a),p={},d=u===\"show\",v,m,g;s.parent().is(\".ui-effects-wrapper\")?e.effects.save(s.parent(),o):e.effects.save(s,o),s.show(),v=e.effects.createWrapper(s).css({overflow:\"hidden\"}),m=v[l](),g=parseFloat(v.css(c))||0,p[l]=d?m:0,h||(s.css(f?\"bottom\":\"right\",0).css(f?\"top\":\"left\",\"auto\").css({position:\"absolute\"}),p[c]=d?g:m+g),d&&(v.css(l,0),h||v.css(c,g+m)),v.animate(p,{duration:t.duration,easing:t.easing,queue:!1,complete:function(){u===\"hide\"&&s.hide(),e.effects.restore(s,o),e.effects.removeWrapper(s),i()}})}})(jQuery);(function(e,t){e.effects.effect.bounce=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],s=e.effects.setMode(r,t.mode||\"effect\"),o=s===\"hide\",u=s===\"show\",a=t.direction||\"up\",f=t.distance,l=t.times||5,c=l*2+(u||o?1:0),h=t.duration/c,p=t.easing,d=a===\"up\"||a===\"down\"?\"top\":\"left\",v=a===\"up\"||a===\"left\",m,g,y,b=r.queue(),w=b.length;(u||o)&&i.push(\"opacity\"),e.effects.save(r,i),r.show(),e.effects.createWrapper(r),f||(f=r[d===\"top\"?\"outerHeight\":\"outerWidth\"]()/3),u&&(y={opacity:1},y[d]=0,r.css(\"opacity\",0).css(d,v?-f*2:f*2).animate(y,h,p)),o&&(f/=Math.pow(2,l-1)),y={},y[d]=0;for(m=0;m<l;m++)g={},g[d]=(v?\"-=\":\"+=\")+f,r.animate(g,h,p).animate(y,h,p),f=o?f*2:f/2;o&&(g={opacity:0},g[d]=(v?\"-=\":\"+=\")+f,r.animate(g,h,p)),r.queue(function(){o&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}),w>1&&b.splice.apply(b,[1,0].concat(b.splice(w,c+1))),r.dequeue()}})(jQuery);(function(e,t){e.effects.effect.clip=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],s=e.effects.setMode(r,t.mode||\"hide\"),o=s===\"show\",u=t.direction||\"vertical\",a=u===\"vertical\",f=a?\"height\":\"width\",l=a?\"top\":\"left\",c={},h,p,d;e.effects.save(r,i),r.show(),h=e.effects.createWrapper(r).css({overflow:\"hidden\"}),p=r[0].tagName===\"IMG\"?h:r,d=p[f](),o&&(p.css(f,0),p.css(l,d/2)),c[f]=o?d:0,c[l]=o?0:d/2,p.animate(c,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){o||r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.drop=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"opacity\",\"height\",\"width\"],s=e.effects.setMode(r,t.mode||\"hide\"),o=s===\"show\",u=t.direction||\"left\",a=u===\"up\"||u===\"down\"?\"top\":\"left\",f=u===\"up\"||u===\"left\"?\"pos\":\"neg\",l={opacity:o?1:0},c;e.effects.save(r,i),r.show(),e.effects.createWrapper(r),c=t.distance||r[a===\"top\"?\"outerHeight\":\"outerWidth\"](!0)/2,o&&r.css(\"opacity\",0).css(a,f===\"pos\"?-c:c),l[a]=(o?f===\"pos\"?\"+=\":\"-=\":f===\"pos\"?\"-=\":\"+=\")+c,r.animate(l,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s===\"hide\"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.explode=function(t,n){function y(){c.push(this),c.length===r*i&&b()}function b(){s.css({visibility:\"visible\"}),e(c).remove(),u||s.hide(),n()}var r=t.pieces?Math.round(Math.sqrt(t.pieces)):3,i=r,s=e(this),o=e.effects.setMode(s,t.mode||\"hide\"),u=o===\"show\",a=s.show().css(\"visibility\",\"hidden\").offset(),f=Math.ceil(s.outerWidth()/i),l=Math.ceil(s.outerHeight()/r),c=[],h,p,d,v,m,g;for(h=0;h<r;h++){v=a.top+h*l,g=h-(r-1)/2;for(p=0;p<i;p++)d=a.left+p*f,m=p-(i-1)/2,s.clone().appendTo(\"body\").wrap(\"<div></div>\").css({position:\"absolute\",visibility:\"visible\",left:-p*f,top:-h*l}).parent().addClass(\"ui-effects-explode\").css({position:\"absolute\",overflow:\"hidden\",width:f,height:l,left:d+(u?m*f:0),top:v+(u?g*l:0),opacity:u?0:1}).animate({left:d+(u?0:m*f),top:v+(u?0:g*l),opacity:u?1:0},t.duration||500,t.easing,y)}}})(jQuery);(function(e,t){e.effects.effect.fade=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||\"toggle\");r.animate({opacity:i},{queue:!1,duration:t.duration,easing:t.easing,complete:n})}})(jQuery);(function(e,t){e.effects.effect.fold=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],s=e.effects.setMode(r,t.mode||\"hide\"),o=s===\"show\",u=s===\"hide\",a=t.size||15,f=/([0-9]+)%/.exec(a),l=!!t.horizFirst,c=o!==l,h=c?[\"width\",\"height\"]:[\"height\",\"width\"],p=t.duration/2,d,v,m={},g={};e.effects.save(r,i),r.show(),d=e.effects.createWrapper(r).css({overflow:\"hidden\"}),v=c?[d.width(),d.height()]:[d.height(),d.width()],f&&(a=parseInt(f[1],10)/100*v[u?0:1]),o&&d.css(l?{height:0,width:a}:{height:a,width:0}),m[h[0]]=o?v[0]:a,g[h[1]]=o?v[1]:0,d.animate(m,p,t.easing).animate(g,p,t.easing,function(){u&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()})}})(jQuery);(function(e,t){e.effects.effect.highlight=function(t,n){var r=e(this),i=[\"backgroundImage\",\"backgroundColor\",\"opacity\"],s=e.effects.setMode(r,t.mode||\"show\"),o={backgroundColor:r.css(\"backgroundColor\")};s===\"hide\"&&(o.opacity=0),e.effects.save(r,i),r.show().css({backgroundImage:\"none\",backgroundColor:t.color||\"#ffff99\"}).animate(o,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s===\"hide\"&&r.hide(),e.effects.restore(r,i),n()}})}})(jQuery);(function(e,t){e.effects.effect.pulsate=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||\"show\"),s=i===\"show\",o=i===\"hide\",u=s||i===\"hide\",a=(t.times||5)*2+(u?1:0),f=t.duration/a,l=0,c=r.queue(),h=c.length,p;if(s||!r.is(\":visible\"))r.css(\"opacity\",0).show(),l=1;for(p=1;p<a;p++)r.animate({opacity:l},f,t.easing),l=1-l;r.animate({opacity:l},f,t.easing),r.queue(function(){o&&r.hide(),n()}),h>1&&c.splice.apply(c,[1,0].concat(c.splice(h,a+1))),r.dequeue()}})(jQuery);(function(e,t){e.effects.effect.puff=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||\"hide\"),s=i===\"hide\",o=parseInt(t.percent,10)||150,u=o/100,a={height:r.height(),width:r.width(),outerHeight:r.outerHeight(),outerWidth:r.outerWidth()};e.extend(t,{effect:\"scale\",queue:!1,fade:!0,mode:i,complete:n,percent:s?o:100,from:s?a:{height:a.height*u,width:a.width*u,outerHeight:a.outerHeight*u,outerWidth:a.outerWidth*u}}),r.effect(t)},e.effects.effect.scale=function(t,n){var r=e(this),i=e.extend(!0,{},t),s=e.effects.setMode(r,t.mode||\"effect\"),o=parseInt(t.percent,10)||(parseInt(t.percent,10)===0?0:s===\"hide\"?0:100),u=t.direction||\"both\",a=t.origin,f={height:r.height(),width:r.width(),outerHeight:r.outerHeight(),outerWidth:r.outerWidth()},l={y:u!==\"horizontal\"?o/100:1,x:u!==\"vertical\"?o/100:1};i.effect=\"size\",i.queue=!1,i.complete=n,s!==\"effect\"&&(i.origin=a||[\"middle\",\"center\"],i.restore=!0),i.from=t.from||(s===\"show\"?{height:0,width:0,outerHeight:0,outerWidth:0}:f),i.to={height:f.height*l.y,width:f.width*l.x,outerHeight:f.outerHeight*l.y,outerWidth:f.outerWidth*l.x},i.fade&&(s===\"show\"&&(i.from.opacity=0,i.to.opacity=1),s===\"hide\"&&(i.from.opacity=1,i.to.opacity=0)),r.effect(i)},e.effects.effect.size=function(t,n){var r,i,s,o=e(this),u=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"width\",\"height\",\"overflow\",\"opacity\"],a=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"overflow\",\"opacity\"],f=[\"width\",\"height\",\"overflow\"],l=[\"fontSize\"],c=[\"borderTopWidth\",\"borderBottomWidth\",\"paddingTop\",\"paddingBottom\"],h=[\"borderLeftWidth\",\"borderRightWidth\",\"paddingLeft\",\"paddingRight\"],p=e.effects.setMode(o,t.mode||\"effect\"),d=t.restore||p!==\"effect\",v=t.scale||\"both\",m=t.origin||[\"middle\",\"center\"],g=o.css(\"position\"),y=d?u:a,b={height:0,width:0,outerHeight:0,outerWidth:0};p===\"show\"&&o.show(),r={height:o.height(),width:o.width(),outerHeight:o.outerHeight(),outerWidth:o.outerWidth()},t.mode===\"toggle\"&&p===\"show\"?(o.from=t.to||b,o.to=t.from||r):(o.from=t.from||(p===\"show\"?b:r),o.to=t.to||(p===\"hide\"?b:r)),s={from:{y:o.from.height/r.height,x:o.from.width/r.width},to:{y:o.to.height/r.height,x:o.to.width/r.width}};if(v===\"box\"||v===\"both\")s.from.y!==s.to.y&&(y=y.concat(c),o.from=e.effects.setTransition(o,c,s.from.y,o.from),o.to=e.effects.setTransition(o,c,s.to.y,o.to)),s.from.x!==s.to.x&&(y=y.concat(h),o.from=e.effects.setTransition(o,h,s.from.x,o.from),o.to=e.effects.setTransition(o,h,s.to.x,o.to));(v===\"content\"||v===\"both\")&&s.from.y!==s.to.y&&(y=y.concat(l).concat(f),o.from=e.effects.setTransition(o,l,s.from.y,o.from),o.to=e.effects.setTransition(o,l,s.to.y,o.to)),e.effects.save(o,y),o.show(),e.effects.createWrapper(o),o.css(\"overflow\",\"hidden\").css(o.from),m&&(i=e.effects.getBaseline(m,r),o.from.top=(r.outerHeight-o.outerHeight())*i.y,o.from.left=(r.outerWidth-o.outerWidth())*i.x,o.to.top=(r.outerHeight-o.to.outerHeight)*i.y,o.to.left=(r.outerWidth-o.to.outerWidth)*i.x),o.css(o.from);if(v===\"content\"||v===\"both\")c=c.concat([\"marginTop\",\"marginBottom\"]).concat(l),h=h.concat([\"marginLeft\",\"marginRight\"]),f=u.concat(c).concat(h),o.find(\"*[width]\").each(function(){var n=e(this),r={height:n.height(),width:n.width(),outerHeight:n.outerHeight(),outerWidth:n.outerWidth()};d&&e.effects.save(n,f),n.from={height:r.height*s.from.y,width:r.width*s.from.x,outerHeight:r.outerHeight*s.from.y,outerWidth:r.outerWidth*s.from.x},n.to={height:r.height*s.to.y,width:r.width*s.to.x,outerHeight:r.height*s.to.y,outerWidth:r.width*s.to.x},s.from.y!==s.to.y&&(n.from=e.effects.setTransition(n,c,s.from.y,n.from),n.to=e.effects.setTransition(n,c,s.to.y,n.to)),s.from.x!==s.to.x&&(n.from=e.effects.setTransition(n,h,s.from.x,n.from),n.to=e.effects.setTransition(n,h,s.to.x,n.to)),n.css(n.from),n.animate(n.to,t.duration,t.easing,function(){d&&e.effects.restore(n,f)})});o.animate(o.to,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){o.to.opacity===0&&o.css(\"opacity\",o.from.opacity),p===\"hide\"&&o.hide(),e.effects.restore(o,y),d||(g===\"static\"?o.css({position:\"relative\",top:o.to.top,left:o.to.left}):e.each([\"top\",\"left\"],function(e,t){o.css(t,function(t,n){var r=parseInt(n,10),i=e?o.to.left:o.to.top;return n===\"auto\"?i+\"px\":r+i+\"px\"})})),e.effects.removeWrapper(o),n()}})}})(jQuery);(function(e,t){e.effects.effect.shake=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],s=e.effects.setMode(r,t.mode||\"effect\"),o=t.direction||\"left\",u=t.distance||20,a=t.times||3,f=a*2+1,l=Math.round(t.duration/f),c=o===\"up\"||o===\"down\"?\"top\":\"left\",h=o===\"up\"||o===\"left\",p={},d={},v={},m,g=r.queue(),y=g.length;e.effects.save(r,i),r.show(),e.effects.createWrapper(r),p[c]=(h?\"-=\":\"+=\")+u,d[c]=(h?\"+=\":\"-=\")+u*2,v[c]=(h?\"-=\":\"+=\")+u*2,r.animate(p,l,t.easing);for(m=1;m<a;m++)r.animate(d,l,t.easing).animate(v,l,t.easing);r.animate(d,l,t.easing).animate(p,l/2,t.easing).queue(function(){s===\"hide\"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}),y>1&&g.splice.apply(g,[1,0].concat(g.splice(y,f+1))),r.dequeue()}})(jQuery);(function(e,t){e.effects.effect.slide=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"width\",\"height\"],s=e.effects.setMode(r,t.mode||\"show\"),o=s===\"show\",u=t.direction||\"left\",a=u===\"up\"||u===\"down\"?\"top\":\"left\",f=u===\"up\"||u===\"left\",l,c={};e.effects.save(r,i),r.show(),l=t.distance||r[a===\"top\"?\"outerHeight\":\"outerWidth\"](!0),e.effects.createWrapper(r).css({overflow:\"hidden\"}),o&&r.css(a,f?isNaN(l)?\"-\"+l:-l:l),c[a]=(o?f?\"+=\":\"-=\":f?\"-=\":\"+=\")+l,r.animate(c,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s===\"hide\"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.transfer=function(t,n){var r=e(this),i=e(t.to),s=i.css(\"position\")===\"fixed\",o=e(\"body\"),u=s?o.scrollTop():0,a=s?o.scrollLeft():0,f=i.offset(),l={top:f.top-u,left:f.left-a,height:i.innerHeight(),width:i.innerWidth()},c=r.offset(),h=e(\"<div class='ui-effects-transfer'></div>\").appendTo(document.body).addClass(t.className).css({top:c.top-u,left:c.left-a,height:r.innerHeight(),width:r.innerWidth(),position:s?\"fixed\":\"absolute\"}).animate(l,t.duration,t.easing,function(){h.remove(),n()})}})(jQuery);"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 60575
        },
        "cache": {},
        "timings": {
          "blocked": 2.86400015465915,
          "dns": -1,
          "connect": -1,
          "send": 0.08399994112551035,
          "wait": 2412.5449999701254,
          "receive": 87902.6240000967,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.166Z",
        "time": 66222.58599987254,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.blog.st-hatena.com/js/external/jquery.flot.js%3Fversion=0.8.3",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"0-1e05b\""
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "content-length",
              "value": "122971"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 122971,
            "mimeType": "text/plain",
            "text": "/* Javascript plotting library for jQuery, version 0.8.3.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\n*/\n\n// first an inline dependency, jquery.colorhelpers.js, we inline it here\n// for convenience\n\n/* Plugin for jQuery for working with colors.\n *\n * Version 1.1.\n *\n * Inspiration from jQuery color animation plugin by John Resig.\n *\n * Released under the MIT license by Ole Laursen, October 2009.\n *\n * Examples:\n *\n *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n *   console.log(c.r, c.g, c.b, c.a);\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n *\n * Note that .scale() and .add() return the same modified object\n * instead of making a new one.\n *\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\n * produce a color rather than just crashing.\n */\n(function($){$.color={};$.color.make=function(r,g,b,a){var o={};o.r=r||0;o.g=g||0;o.b=b||0;o.a=a!=null?a:1;o.add=function(c,d){for(var i=0;i<c.length;++i)o[c.charAt(i)]+=d;return o.normalize()};o.scale=function(c,f){for(var i=0;i<c.length;++i)o[c.charAt(i)]*=f;return o.normalize()};o.toString=function(){if(o.a>=1){return\"rgb(\"+[o.r,o.g,o.b].join(\",\")+\")\"}else{return\"rgba(\"+[o.r,o.g,o.b,o.a].join(\",\")+\")\"}};o.normalize=function(){function clamp(min,value,max){return value<min?min:value>max?max:value}o.r=clamp(0,parseInt(o.r),255);o.g=clamp(0,parseInt(o.g),255);o.b=clamp(0,parseInt(o.b),255);o.a=clamp(0,o.a,1);return o};o.clone=function(){return $.color.make(o.r,o.b,o.g,o.a)};return o.normalize()};$.color.extract=function(elem,css){var c;do{c=elem.css(css).toLowerCase();if(c!=\"\"&&c!=\"transparent\")break;elem=elem.parent()}while(elem.length&&!$.nodeName(elem.get(0),\"body\"));if(c==\"rgba(0, 0, 0, 0)\")c=\"transparent\";return $.color.parse(c)};$.color.parse=function(str){var res,m=$.color.make;if(res=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10));if(res=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10),parseFloat(res[4]));if(res=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55);if(res=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55,parseFloat(res[4]));if(res=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1],16),parseInt(res[2],16),parseInt(res[3],16));if(res=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1]+res[1],16),parseInt(res[2]+res[2],16),parseInt(res[3]+res[3],16));var name=$.trim(str).toLowerCase();if(name==\"transparent\")return m(255,255,255,0);else{res=lookupColors[name]||[0,0,0];return m(res[0],res[1],res[2])}};var lookupColors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\n\n// the actual Flot code\n(function($) {\n\n\t// Cache the prototype hasOwnProperty for faster access\n\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\n    // operation produces the same effect as detach, i.e. removing the element\n    // without touching its jQuery data.\n\n    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\n\n    if (!$.fn.detach) {\n        $.fn.detach = function() {\n            return this.each(function() {\n                if (this.parentNode) {\n                    this.parentNode.removeChild( this );\n                }\n            });\n        };\n    }\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The Canvas object is a wrapper around an HTML5 <canvas> tag.\n\t//\n\t// @constructor\n\t// @param {string} cls List of classes to apply to the canvas.\n\t// @param {element} container Element onto which to append the canvas.\n\t//\n\t// Requiring a container is a little iffy, but unfortunately canvas\n\t// operations don't work unless the canvas is attached to the DOM.\n\n\tfunction Canvas(cls, container) {\n\n\t\tvar element = container.children(\".\" + cls)[0];\n\n\t\tif (element == null) {\n\n\t\t\telement = document.createElement(\"canvas\");\n\t\t\telement.className = cls;\n\n\t\t\t$(element).css({ direction: \"ltr\", position: \"absolute\", left: 0, top: 0 })\n\t\t\t\t.appendTo(container);\n\n\t\t\t// If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\n\n\t\t\tif (!element.getContext) {\n\t\t\t\tif (window.G_vmlCanvasManager) {\n\t\t\t\t\telement = window.G_vmlCanvasManager.initElement(element);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.element = element;\n\n\t\tvar context = this.context = element.getContext(\"2d\");\n\n\t\t// Determine the screen's ratio of physical to device-independent\n\t\t// pixels.  This is the ratio between the canvas width that the browser\n\t\t// advertises and the number of pixels actually present in that space.\n\n\t\t// The iPhone 4, for example, has a device-independent width of 320px,\n\t\t// but its screen is actually 640px wide.  It therefore has a pixel\n\t\t// ratio of 2, while most normal devices have a ratio of 1.\n\n\t\tvar devicePixelRatio = window.devicePixelRatio || 1,\n\t\t\tbackingStoreRatio =\n\t\t\t\tcontext.webkitBackingStorePixelRatio ||\n\t\t\t\tcontext.mozBackingStorePixelRatio ||\n\t\t\t\tcontext.msBackingStorePixelRatio ||\n\t\t\t\tcontext.oBackingStorePixelRatio ||\n\t\t\t\tcontext.backingStorePixelRatio || 1;\n\n\t\tthis.pixelRatio = devicePixelRatio / backingStoreRatio;\n\n\t\t// Size the canvas to match the internal dimensions of its container\n\n\t\tthis.resize(container.width(), container.height());\n\n\t\t// Collection of HTML div layers for text overlaid onto the canvas\n\n\t\tthis.textContainer = null;\n\t\tthis.text = {};\n\n\t\t// Cache of text fragments and metrics, so we can avoid expensively\n\t\t// re-calculating them when the plot is re-rendered in a loop.\n\n\t\tthis._textCache = {};\n\t}\n\n\t// Resizes the canvas to the given dimensions.\n\t//\n\t// @param {number} width New width of the canvas, in pixels.\n\t// @param {number} width New height of the canvas, in pixels.\n\n\tCanvas.prototype.resize = function(width, height) {\n\n\t\tif (width <= 0 || height <= 0) {\n\t\t\tthrow new Error(\"Invalid dimensions for plot, width = \" + width + \", height = \" + height);\n\t\t}\n\n\t\tvar element = this.element,\n\t\t\tcontext = this.context,\n\t\t\tpixelRatio = this.pixelRatio;\n\n\t\t// Resize the canvas, increasing its density based on the display's\n\t\t// pixel ratio; basically giving it more pixels without increasing the\n\t\t// size of its element, to take advantage of the fact that retina\n\t\t// displays have that many more pixels in the same advertised space.\n\n\t\t// Resizing should reset the state (excanvas seems to be buggy though)\n\n\t\tif (this.width != width) {\n\t\t\telement.width = width * pixelRatio;\n\t\t\telement.style.width = width + \"px\";\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tif (this.height != height) {\n\t\t\telement.height = height * pixelRatio;\n\t\t\telement.style.height = height + \"px\";\n\t\t\tthis.height = height;\n\t\t}\n\n\t\t// Save the context, so we can reset in case we get replotted.  The\n\t\t// restore ensure that we're really back at the initial state, and\n\t\t// should be safe even if we haven't saved the initial state yet.\n\n\t\tcontext.restore();\n\t\tcontext.save();\n\n\t\t// Scale the coordinate space to match the display density; so even though we\n\t\t// may have twice as many pixels, we still want lines and other drawing to\n\t\t// appear at the same size; the extra pixels will just make them crisper.\n\n\t\tcontext.scale(pixelRatio, pixelRatio);\n\t};\n\n\t// Clears the entire canvas area, not including any overlaid HTML text\n\n\tCanvas.prototype.clear = function() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t};\n\n\t// Finishes rendering the canvas, including managing the text overlay.\n\n\tCanvas.prototype.render = function() {\n\n\t\tvar cache = this._textCache;\n\n\t\t// For each text layer, add elements marked as active that haven't\n\t\t// already been rendered, and remove those that are no longer active.\n\n\t\tfor (var layerKey in cache) {\n\t\t\tif (hasOwnProperty.call(cache, layerKey)) {\n\n\t\t\t\tvar layer = this.getTextLayer(layerKey),\n\t\t\t\t\tlayerCache = cache[layerKey];\n\n\t\t\t\tlayer.hide();\n\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tif (position.active) {\n\t\t\t\t\t\t\t\t\t\tif (!position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tlayer.append(position.element);\n\t\t\t\t\t\t\t\t\t\t\tposition.rendered = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpositions.splice(i--, 1);\n\t\t\t\t\t\t\t\t\t\tif (position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tposition.element.detach();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (positions.length == 0) {\n\t\t\t\t\t\t\t\t\tdelete styleCache[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlayer.show();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Creates (if necessary) and returns the text overlay container.\n\t//\n\t// @param {string} classes String of space-separated CSS classes used to\n\t//     uniquely identify the text layer.\n\t// @return {object} The jQuery-wrapped text-layer div.\n\n\tCanvas.prototype.getTextLayer = function(classes) {\n\n\t\tvar layer = this.text[classes];\n\n\t\t// Create the text layer if it doesn't exist\n\n\t\tif (layer == null) {\n\n\t\t\t// Create the text layer container, if it doesn't exist\n\n\t\t\tif (this.textContainer == null) {\n\t\t\t\tthis.textContainer = $(\"<div class='flot-text'></div>\")\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t'font-size': \"smaller\",\n\t\t\t\t\t\tcolor: \"#545454\"\n\t\t\t\t\t})\n\t\t\t\t\t.insertAfter(this.element);\n\t\t\t}\n\n\t\t\tlayer = this.text[classes] = $(\"<div></div>\")\n\t\t\t\t.addClass(classes)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tbottom: 0,\n\t\t\t\t\tright: 0\n\t\t\t\t})\n\t\t\t\t.appendTo(this.textContainer);\n\t\t}\n\n\t\treturn layer;\n\t};\n\n\t// Creates (if necessary) and returns a text info object.\n\t//\n\t// The object looks like this:\n\t//\n\t// {\n\t//     width: Width of the text's wrapper div.\n\t//     height: Height of the text's wrapper div.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     positions: Array of positions at which this text is drawn.\n\t// }\n\t//\n\t// The positions array contains objects that look like this:\n\t//\n\t// {\n\t//     active: Flag indicating whether the text should be visible.\n\t//     rendered: Flag indicating whether the text is currently visible.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     x: X coordinate at which to draw the text.\n\t//     y: Y coordinate at which to draw the text.\n\t// }\n\t//\n\t// Each position after the first receives a clone of the original element.\n\t//\n\t// The idea is that that the width, height, and general 'identity' of the\n\t// text is constant no matter where it is placed; the placements are a\n\t// secondary property.\n\t//\n\t// Canvas maintains a cache of recently-used text info objects; getTextInfo\n\t// either returns the cached element or creates a new entry.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {string} text Text string to retrieve info for.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @return {object} a text info object.\n\n\tCanvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\n\n\t\tvar textStyle, layerCache, styleCache, info;\n\n\t\t// Cast the value to a string, in case we were given a number or such\n\n\t\ttext = \"\" + text;\n\n\t\t// If the font is a font-spec object, generate a CSS font definition\n\n\t\tif (typeof font === \"object\") {\n\t\t\ttextStyle = font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \"px/\" + font.lineHeight + \"px \" + font.family;\n\t\t} else {\n\t\t\ttextStyle = font;\n\t\t}\n\n\t\t// Retrieve (or create) the cache for the text's layer and styles\n\n\t\tlayerCache = this._textCache[layer];\n\n\t\tif (layerCache == null) {\n\t\t\tlayerCache = this._textCache[layer] = {};\n\t\t}\n\n\t\tstyleCache = layerCache[textStyle];\n\n\t\tif (styleCache == null) {\n\t\t\tstyleCache = layerCache[textStyle] = {};\n\t\t}\n\n\t\tinfo = styleCache[text];\n\n\t\t// If we can't find a matching element in our cache, create a new one\n\n\t\tif (info == null) {\n\n\t\t\tvar element = $(\"<div></div>\").html(text)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t'max-width': width,\n\t\t\t\t\ttop: -9999\n\t\t\t\t})\n\t\t\t\t.appendTo(this.getTextLayer(layer));\n\n\t\t\tif (typeof font === \"object\") {\n\t\t\t\telement.css({\n\t\t\t\t\tfont: textStyle,\n\t\t\t\t\tcolor: font.color\n\t\t\t\t});\n\t\t\t} else if (typeof font === \"string\") {\n\t\t\t\telement.addClass(font);\n\t\t\t}\n\n\t\t\tinfo = styleCache[text] = {\n\t\t\t\twidth: element.outerWidth(true),\n\t\t\t\theight: element.outerHeight(true),\n\t\t\t\telement: element,\n\t\t\t\tpositions: []\n\t\t\t};\n\n\t\t\telement.detach();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t// Adds a text string to the canvas text overlay.\n\t//\n\t// The text isn't drawn immediately; it is marked as rendering, which will\n\t// result in its addition to the canvas on the next render pass.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number} x X coordinate at which to draw the text.\n\t// @param {number} y Y coordinate at which to draw the text.\n\t// @param {string} text Text string to draw.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @param {string=} halign Horizontal alignment of the text; either \"left\",\n\t//     \"center\" or \"right\".\n\t// @param {string=} valign Vertical alignment of the text; either \"top\",\n\t//     \"middle\" or \"bottom\".\n\n\tCanvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign) {\n\n\t\tvar info = this.getTextInfo(layer, text, font, angle, width),\n\t\t\tpositions = info.positions;\n\n\t\t// Tweak the div's position to match the text's alignment\n\n\t\tif (halign == \"center\") {\n\t\t\tx -= info.width / 2;\n\t\t} else if (halign == \"right\") {\n\t\t\tx -= info.width;\n\t\t}\n\n\t\tif (valign == \"middle\") {\n\t\t\ty -= info.height / 2;\n\t\t} else if (valign == \"bottom\") {\n\t\t\ty -= info.height;\n\t\t}\n\n\t\t// Determine whether this text already exists at this position.\n\t\t// If so, mark it for inclusion in the next render pass.\n\n\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\tposition.active = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the text doesn't exist at this position, create a new entry\n\n\t\t// For the very first position we'll re-use the original element,\n\t\t// while for subsequent ones we'll clone it.\n\n\t\tposition = {\n\t\t\tactive: true,\n\t\t\trendered: false,\n\t\t\telement: positions.length ? info.element.clone() : info.element,\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\n\t\tpositions.push(position);\n\n\t\t// Move the element to its final position within the container\n\n\t\tposition.element.css({\n\t\t\ttop: Math.round(y),\n\t\t\tleft: Math.round(x),\n\t\t\t'text-align': halign\t// In case the text wraps\n\t\t});\n\t};\n\n\t// Removes one or more text strings from the canvas text overlay.\n\t//\n\t// If no parameters are given, all text within the layer is removed.\n\t//\n\t// Note that the text is not immediately removed; it is simply marked as\n\t// inactive, which will result in its removal on the next render pass.\n\t// This avoids the performance penalty for 'clear and redraw' behavior,\n\t// where we potentially get rid of all text on a layer, but will likely\n\t// add back most or all of it later, as when redrawing axes, for example.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number=} x X coordinate of the text.\n\t// @param {number=} y Y coordinate of the text.\n\t// @param {string=} text Text string to remove.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which the text is rotated, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\n\tCanvas.prototype.removeText = function(layer, x, y, text, font, angle) {\n\t\tif (text == null) {\n\t\t\tvar layerCache = this._textCache[layer];\n\t\t\tif (layerCache != null) {\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar positions = this.getTextInfo(layer, text, font, angle).positions;\n\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\tposition.active = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The top-level container for the entire plot.\n\n    function Plot(placeholder, data_, options_, plugins) {\n        // data is on the form:\n        //   [ series1, series2 ... ]\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n\n        var series = [],\n            options = {\n                // the color theme used for graphs\n                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n                legend: {\n                    show: true,\n                    noColumns: 1, // number of colums in legend table\n                    labelFormatter: null, // fn: string -> string\n                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\n                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n                    position: \"ne\", // position of default legend container within plot\n                    margin: 5, // distance from grid edge to default legend container within plot\n                    backgroundColor: null, // null means auto-detect\n                    backgroundOpacity: 0.85, // set to 0 to avoid background\n                    sorted: null    // default to no legend sorting\n                },\n                xaxis: {\n                    show: null, // null = auto-detect, true = always, false = never\n                    position: \"bottom\", // or \"top\"\n                    mode: null, // null or \"time\"\n                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\n                    color: null, // base color, labels, ticks\n                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    transform: null, // null or f: number -> number to transform axis\n                    inverseTransform: null, // if transform is set, this should be the inverse function\n                    min: null, // min. value to show, null means set automatically\n                    max: null, // max. value to show, null means set automatically\n                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\n                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n                    tickFormatter: null, // fn: number -> string\n                    labelWidth: null, // size of tick labels in pixels\n                    labelHeight: null,\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\n                    alignTicksWithAxis: null, // axis number or null for no sync\n                    tickDecimals: null, // no. of decimals, null means auto\n                    tickSize: null, // number or [number, \"unit\"]\n                    minTickSize: null // number or [number, \"unit\"]\n                },\n                yaxis: {\n                    autoscaleMargin: 0.02,\n                    position: \"left\" // or \"right\"\n                },\n                xaxes: [],\n                yaxes: [],\n                series: {\n                    points: {\n                        show: false,\n                        radius: 3,\n                        lineWidth: 2, // in pixels\n                        fill: true,\n                        fillColor: \"#ffffff\",\n                        symbol: \"circle\" // or callback\n                    },\n                    lines: {\n                        // we don't put in show: false so we can see\n                        // whether lines were actively disabled\n                        lineWidth: 2, // in pixels\n                        fill: false,\n                        fillColor: null,\n                        steps: false\n                        // Omit 'zero', so we can later default its value to\n                        // match that of the 'fill' option.\n                    },\n                    bars: {\n                        show: false,\n                        lineWidth: 2, // in pixels\n                        barWidth: 1, // in units of the x axis\n                        fill: true,\n                        fillColor: null,\n                        align: \"left\", // \"left\", \"right\", or \"center\"\n                        horizontal: false,\n                        zero: true\n                    },\n                    shadowSize: 3,\n                    highlightColor: null\n                },\n                grid: {\n                    show: true,\n                    aboveData: false,\n                    color: \"#545454\", // primary color used for outline and labels\n                    backgroundColor: null, // null for transparent, else color\n                    borderColor: null, // set if different from the grid color\n                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    margin: 0, // distance from the canvas edge to the grid\n                    labelMargin: 5, // in pixels\n                    axisMargin: 8, // in pixels\n                    borderWidth: 2, // in pixels\n                    minBorderMargin: null, // in pixels, null means taken from points radius\n                    markings: null, // array of ranges or fn: axes -> array of ranges\n                    markingsColor: \"#f4f4f4\",\n                    markingsLineWidth: 2,\n                    // interactive stuff\n                    clickable: false,\n                    hoverable: false,\n                    autoHighlight: true, // highlight in case mouse is near\n                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\n                },\n                interaction: {\n                    redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\n                },\n                hooks: {}\n            },\n        surface = null,     // the canvas for the plot itself\n        overlay = null,     // canvas for interactive stuff on top of plot\n        eventHolder = null, // jQuery object that events should be bound to\n        ctx = null, octx = null,\n        xaxes = [], yaxes = [],\n        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\n        plotWidth = 0, plotHeight = 0,\n        hooks = {\n            processOptions: [],\n            processRawData: [],\n            processDatapoints: [],\n            processOffset: [],\n            drawBackground: [],\n            drawSeries: [],\n            draw: [],\n            bindEvents: [],\n            drawOverlay: [],\n            shutdown: []\n        },\n        plot = this;\n\n        // public functions\n        plot.setData = setData;\n        plot.setupGrid = setupGrid;\n        plot.draw = draw;\n        plot.getPlaceholder = function() { return placeholder; };\n        plot.getCanvas = function() { return surface.element; };\n        plot.getPlotOffset = function() { return plotOffset; };\n        plot.width = function () { return plotWidth; };\n        plot.height = function () { return plotHeight; };\n        plot.offset = function () {\n            var o = eventHolder.offset();\n            o.left += plotOffset.left;\n            o.top += plotOffset.top;\n            return o;\n        };\n        plot.getData = function () { return series; };\n        plot.getAxes = function () {\n            var res = {}, i;\n            $.each(xaxes.concat(yaxes), function (_, axis) {\n                if (axis)\n                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\n            });\n            return res;\n        };\n        plot.getXAxes = function () { return xaxes; };\n        plot.getYAxes = function () { return yaxes; };\n        plot.c2p = canvasToAxisCoords;\n        plot.p2c = axisToCanvasCoords;\n        plot.getOptions = function () { return options; };\n        plot.highlight = highlight;\n        plot.unhighlight = unhighlight;\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n        plot.pointOffset = function(point) {\n            return {\n                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\n                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\n            };\n        };\n        plot.shutdown = shutdown;\n        plot.destroy = function () {\n            shutdown();\n            placeholder.removeData(\"plot\").empty();\n\n            series = [];\n            options = null;\n            surface = null;\n            overlay = null;\n            eventHolder = null;\n            ctx = null;\n            octx = null;\n            xaxes = [];\n            yaxes = [];\n            hooks = null;\n            highlights = [];\n            plot = null;\n        };\n        plot.resize = function () {\n        \tvar width = placeholder.width(),\n        \t\theight = placeholder.height();\n            surface.resize(width, height);\n            overlay.resize(width, height);\n        };\n\n        // public attributes\n        plot.hooks = hooks;\n\n        // initialize\n        initPlugins(plot);\n        parseOptions(options_);\n        setupCanvases();\n        setData(data_);\n        setupGrid();\n        draw();\n        bindEvents();\n\n\n        function executeHooks(hook, args) {\n            args = [plot].concat(args);\n            for (var i = 0; i < hook.length; ++i)\n                hook[i].apply(this, args);\n        }\n\n        function initPlugins() {\n\n            // References to key classes, allowing plugins to modify them\n\n            var classes = {\n                Canvas: Canvas\n            };\n\n            for (var i = 0; i < plugins.length; ++i) {\n                var p = plugins[i];\n                p.init(plot, classes);\n                if (p.options)\n                    $.extend(true, options, p.options);\n            }\n        }\n\n        function parseOptions(opts) {\n\n            $.extend(true, options, opts);\n\n            // $.extend merges arrays, rather than replacing them.  When less\n            // colors are provided than the size of the default palette, we\n            // end up with those colors plus the remaining defaults, which is\n            // not expected behavior; avoid it by replacing them here.\n\n            if (opts && opts.colors) {\n            \toptions.colors = opts.colors;\n            }\n\n            if (options.xaxis.color == null)\n                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            if (options.yaxis.color == null)\n                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\n            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\n\n            if (options.grid.borderColor == null)\n                options.grid.borderColor = options.grid.color;\n            if (options.grid.tickColor == null)\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            // Fill in defaults for axis options, including any unspecified\n            // font-spec fields, if a font-spec was provided.\n\n            // If no x/y axis options were provided, create one of each anyway,\n            // since the rest of the code assumes that they exist.\n\n            var i, axisOptions, axisCount,\n                fontSize = placeholder.css(\"font-size\"),\n                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\n                fontDefaults = {\n                    style: placeholder.css(\"font-style\"),\n                    size: Math.round(0.8 * fontSizeDefault),\n                    variant: placeholder.css(\"font-variant\"),\n                    weight: placeholder.css(\"font-weight\"),\n                    family: placeholder.css(\"font-family\")\n                };\n\n            axisCount = options.xaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.xaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\n                options.xaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            axisCount = options.yaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.yaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\n                options.yaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            // backwards compatibility, to be removed in future\n            if (options.xaxis.noTicks && options.xaxis.ticks == null)\n                options.xaxis.ticks = options.xaxis.noTicks;\n            if (options.yaxis.noTicks && options.yaxis.ticks == null)\n                options.yaxis.ticks = options.yaxis.noTicks;\n            if (options.x2axis) {\n                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\n                options.xaxes[1].position = \"top\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.x2axis.min == null) {\n                    options.xaxes[1].min = null;\n                }\n                if (options.x2axis.max == null) {\n                    options.xaxes[1].max = null;\n                }\n            }\n            if (options.y2axis) {\n                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\n                options.yaxes[1].position = \"right\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.y2axis.min == null) {\n                    options.yaxes[1].min = null;\n                }\n                if (options.y2axis.max == null) {\n                    options.yaxes[1].max = null;\n                }\n            }\n            if (options.grid.coloredAreas)\n                options.grid.markings = options.grid.coloredAreas;\n            if (options.grid.coloredAreasColor)\n                options.grid.markingsColor = options.grid.coloredAreasColor;\n            if (options.lines)\n                $.extend(true, options.series.lines, options.lines);\n            if (options.points)\n                $.extend(true, options.series.points, options.points);\n            if (options.bars)\n                $.extend(true, options.series.bars, options.bars);\n            if (options.shadowSize != null)\n                options.series.shadowSize = options.shadowSize;\n            if (options.highlightColor != null)\n                options.series.highlightColor = options.highlightColor;\n\n            // save options on axes for future reference\n            for (i = 0; i < options.xaxes.length; ++i)\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n            for (i = 0; i < options.yaxes.length; ++i)\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n\n            // add hooks from options\n            for (var n in hooks)\n                if (options.hooks[n] && options.hooks[n].length)\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\n\n            executeHooks(hooks.processOptions, [options]);\n        }\n\n        function setData(d) {\n            series = parseData(d);\n            fillInSeriesOptions();\n            processData();\n        }\n\n        function parseData(d) {\n            var res = [];\n            for (var i = 0; i < d.length; ++i) {\n                var s = $.extend(true, {}, options.series);\n\n                if (d[i].data != null) {\n                    s.data = d[i].data; // move the data instead of deep-copy\n                    delete d[i].data;\n\n                    $.extend(true, s, d[i]);\n\n                    d[i].data = s.data;\n                }\n                else\n                    s.data = d[i];\n                res.push(s);\n            }\n\n            return res;\n        }\n\n        function axisNumber(obj, coord) {\n            var a = obj[coord + \"axis\"];\n            if (typeof a == \"object\") // if we got a real axis, extract number\n                a = a.n;\n            if (typeof a != \"number\")\n                a = 1; // default to first axis\n            return a;\n        }\n\n        function allAxes() {\n            // return flat array without annoying null entries\n            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\n        }\n\n        function canvasToAxisCoords(pos) {\n            // return an object with x/y corresponding to all used axes\n            var res = {}, i, axis;\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used)\n                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used)\n                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n            }\n\n            if (res.x1 !== undefined)\n                res.x = res.x1;\n            if (res.y1 !== undefined)\n                res.y = res.y1;\n\n            return res;\n        }\n\n        function axisToCanvasCoords(pos) {\n            // get canvas coords from the first pair of x/y found in pos\n            var res = {}, i, axis, key;\n\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used) {\n                    key = \"x\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"x\";\n\n                    if (pos[key] != null) {\n                        res.left = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used) {\n                    key = \"y\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"y\";\n\n                    if (pos[key] != null) {\n                        res.top = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        function getOrCreateAxis(axes, number) {\n            if (!axes[number - 1])\n                axes[number - 1] = {\n                    n: number, // save the number for future reference\n                    direction: axes == xaxes ? \"x\" : \"y\",\n                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\n                };\n\n            return axes[number - 1];\n        }\n\n        function fillInSeriesOptions() {\n\n            var neededColors = series.length, maxIndex = -1, i;\n\n            // Subtract the number of series that already have fixed colors or\n            // color indexes from the number that we still need to generate.\n\n            for (i = 0; i < series.length; ++i) {\n                var sc = series[i].color;\n                if (sc != null) {\n                    neededColors--;\n                    if (typeof sc == \"number\" && sc > maxIndex) {\n                        maxIndex = sc;\n                    }\n                }\n            }\n\n            // If any of the series have fixed color indexes, then we need to\n            // generate at least as many colors as the highest index.\n\n            if (neededColors <= maxIndex) {\n                neededColors = maxIndex + 1;\n            }\n\n            // Generate all the colors, using first the option colors and then\n            // variations on those colors once they're exhausted.\n\n            var c, colors = [], colorPool = options.colors,\n                colorPoolSize = colorPool.length, variation = 0;\n\n            for (i = 0; i < neededColors; i++) {\n\n                c = $.color.parse(colorPool[i % colorPoolSize] || \"#666\");\n\n                // Each time we exhaust the colors in the pool we adjust\n                // a scaling factor used to produce more variations on\n                // those colors. The factor alternates negative/positive\n                // to produce lighter/darker colors.\n\n                // Reset the variation after every few cycles, or else\n                // it will end up producing only white or black colors.\n\n                if (i % colorPoolSize == 0 && i) {\n                    if (variation >= 0) {\n                        if (variation < 0.5) {\n                            variation = -variation - 0.2;\n                        } else variation = 0;\n                    } else variation = -variation;\n                }\n\n                colors[i] = c.scale('rgb', 1 + variation);\n            }\n\n            // Finalize the series options, filling in their colors\n\n            var colori = 0, s;\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                // assign colors\n                if (s.color == null) {\n                    s.color = colors[colori].toString();\n                    ++colori;\n                }\n                else if (typeof s.color == \"number\")\n                    s.color = colors[s.color].toString();\n\n                // turn on lines automatically in case nothing is set\n                if (s.lines.show == null) {\n                    var v, show = true;\n                    for (v in s)\n                        if (s[v] && s[v].show) {\n                            show = false;\n                            break;\n                        }\n                    if (show)\n                        s.lines.show = true;\n                }\n\n                // If nothing was provided for lines.zero, default it to match\n                // lines.fill, since areas by default should extend to zero.\n\n                if (s.lines.zero == null) {\n                    s.lines.zero = !!s.lines.fill;\n                }\n\n                // setup axes\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n            }\n        }\n\n        function processData() {\n            var topSentry = Number.POSITIVE_INFINITY,\n                bottomSentry = Number.NEGATIVE_INFINITY,\n                fakeInfinity = Number.MAX_VALUE,\n                i, j, k, m, length,\n                s, points, ps, x, y, axis, val, f, p,\n                data, format;\n\n            function updateAxis(axis, min, max) {\n                if (min < axis.datamin && min != -fakeInfinity)\n                    axis.datamin = min;\n                if (max > axis.datamax && max != fakeInfinity)\n                    axis.datamax = max;\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                // init axis\n                axis.datamin = topSentry;\n                axis.datamax = bottomSentry;\n                axis.used = false;\n            });\n\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                s.datapoints = { points: [] };\n\n                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\n            }\n\n            // first pass: clean and copy data\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                data = s.data;\n                format = s.datapoints.format;\n\n                if (!format) {\n                    format = [];\n                    // find out how to copy\n                    format.push({ x: true, number: true, required: true });\n                    format.push({ y: true, number: true, required: true });\n\n                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\n                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\n                        if (s.bars.horizontal) {\n                            delete format[format.length - 1].y;\n                            format[format.length - 1].x = true;\n                        }\n                    }\n\n                    s.datapoints.format = format;\n                }\n\n                if (s.datapoints.pointsize != null)\n                    continue; // already filled in\n\n                s.datapoints.pointsize = format.length;\n\n                ps = s.datapoints.pointsize;\n                points = s.datapoints.points;\n\n                var insertSteps = s.lines.show && s.lines.steps;\n                s.xaxis.used = s.yaxis.used = true;\n\n                for (j = k = 0; j < data.length; ++j, k += ps) {\n                    p = data[j];\n\n                    var nullify = p == null;\n                    if (!nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = p[m];\n                            f = format[m];\n\n                            if (f) {\n                                if (f.number && val != null) {\n                                    val = +val; // convert to number\n                                    if (isNaN(val))\n                                        val = null;\n                                    else if (val == Infinity)\n                                        val = fakeInfinity;\n                                    else if (val == -Infinity)\n                                        val = -fakeInfinity;\n                                }\n\n                                if (val == null) {\n                                    if (f.required)\n                                        nullify = true;\n\n                                    if (f.defaultValue != null)\n                                        val = f.defaultValue;\n                                }\n                            }\n\n                            points[k + m] = val;\n                        }\n                    }\n\n                    if (nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = points[k + m];\n                            if (val != null) {\n                                f = format[m];\n                                // extract min/max info\n                                if (f.autoscale !== false) {\n                                    if (f.x) {\n                                        updateAxis(s.xaxis, val, val);\n                                    }\n                                    if (f.y) {\n                                        updateAxis(s.yaxis, val, val);\n                                    }\n                                }\n                            }\n                            points[k + m] = null;\n                        }\n                    }\n                    else {\n                        // a little bit of line specific stuff that\n                        // perhaps shouldn't be here, but lacking\n                        // better means...\n                        if (insertSteps && k > 0\n                            && points[k - ps] != null\n                            && points[k - ps] != points[k]\n                            && points[k - ps + 1] != points[k + 1]) {\n                            // copy the point to make room for a middle point\n                            for (m = 0; m < ps; ++m)\n                                points[k + ps + m] = points[k + m];\n\n                            // middle point has same y\n                            points[k + 1] = points[k - ps + 1];\n\n                            // we've added a point, better reflect that\n                            k += ps;\n                        }\n                    }\n                }\n            }\n\n            // give the hooks a chance to run\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\n            }\n\n            // second pass: find datamax/datamin for auto-scaling\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points;\n                ps = s.datapoints.pointsize;\n                format = s.datapoints.format;\n\n                var xmin = topSentry, ymin = topSentry,\n                    xmax = bottomSentry, ymax = bottomSentry;\n\n                for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                    for (m = 0; m < ps; ++m) {\n                        val = points[j + m];\n                        f = format[m];\n                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\n                            continue;\n\n                        if (f.x) {\n                            if (val < xmin)\n                                xmin = val;\n                            if (val > xmax)\n                                xmax = val;\n                        }\n                        if (f.y) {\n                            if (val < ymin)\n                                ymin = val;\n                            if (val > ymax)\n                                ymax = val;\n                        }\n                    }\n                }\n\n                if (s.bars.show) {\n                    // make sure we got room for the bar on the dancing floor\n                    var delta;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            delta = 0;\n                            break;\n                        case \"right\":\n                            delta = -s.bars.barWidth;\n                            break;\n                        default:\n                            delta = -s.bars.barWidth / 2;\n                    }\n\n                    if (s.bars.horizontal) {\n                        ymin += delta;\n                        ymax += delta + s.bars.barWidth;\n                    }\n                    else {\n                        xmin += delta;\n                        xmax += delta + s.bars.barWidth;\n                    }\n                }\n\n                updateAxis(s.xaxis, xmin, xmax);\n                updateAxis(s.yaxis, ymin, ymax);\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                if (axis.datamin == topSentry)\n                    axis.datamin = null;\n                if (axis.datamax == bottomSentry)\n                    axis.datamax = null;\n            });\n        }\n\n        function setupCanvases() {\n\n            // Make sure the placeholder is clear of everything except canvases\n            // from a previous plot in this container that we'll try to re-use.\n\n            placeholder.css(\"padding\", 0) // padding messes up the positioning\n                .children().filter(function(){\n                    return !$(this).hasClass(\"flot-overlay\") && !$(this).hasClass('flot-base');\n                }).remove();\n\n            if (placeholder.css(\"position\") == 'static')\n                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n\n            surface = new Canvas(\"flot-base\", placeholder);\n            overlay = new Canvas(\"flot-overlay\", placeholder); // overlay canvas for interactive features\n\n            ctx = surface.context;\n            octx = overlay.context;\n\n            // define which element we're listening for events on\n            eventHolder = $(overlay.element).unbind();\n\n            // If we're re-using a plot object, shut down the old one\n\n            var existing = placeholder.data(\"plot\");\n\n            if (existing) {\n                existing.shutdown();\n                overlay.clear();\n            }\n\n            // save in case we get replotted\n            placeholder.data(\"plot\", plot);\n        }\n\n        function bindEvents() {\n            // bind events\n            if (options.grid.hoverable) {\n                eventHolder.mousemove(onMouseMove);\n\n                // Use bind, rather than .mouseleave, because we officially\n                // still support jQuery 1.2.6, which doesn't define a shortcut\n                // for mouseenter or mouseleave.  This was a bug/oversight that\n                // was fixed somewhere around 1.3.x.  We can return to using\n                // .mouseleave when we drop support for 1.2.6.\n\n                eventHolder.bind(\"mouseleave\", onMouseLeave);\n            }\n\n            if (options.grid.clickable)\n                eventHolder.click(onClick);\n\n            executeHooks(hooks.bindEvents, [eventHolder]);\n        }\n\n        function shutdown() {\n            if (redrawTimeout)\n                clearTimeout(redrawTimeout);\n\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n            eventHolder.unbind(\"click\", onClick);\n\n            executeHooks(hooks.shutdown, [eventHolder]);\n        }\n\n        function setTransformationHelpers(axis) {\n            // set helper functions on the axis, assumes plot area\n            // has been computed already\n\n            function identity(x) { return x; }\n\n            var s, m, t = axis.options.transform || identity,\n                it = axis.options.inverseTransform;\n\n            // precompute how much the axis is scaling a point\n            // in canvas space\n            if (axis.direction == \"x\") {\n                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n                m = Math.min(t(axis.max), t(axis.min));\n            }\n            else {\n                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n                s = -s;\n                m = Math.max(t(axis.max), t(axis.min));\n            }\n\n            // data point to canvas coordinate\n            if (t == identity) // slight optimization\n                axis.p2c = function (p) { return (p - m) * s; };\n            else\n                axis.p2c = function (p) { return (t(p) - m) * s; };\n            // canvas coordinate to data point\n            if (!it)\n                axis.c2p = function (c) { return m + c / s; };\n            else\n                axis.c2p = function (c) { return it(m + c / s); };\n        }\n\n        function measureTickLabels(axis) {\n\n            var opts = axis.options,\n                ticks = axis.ticks || [],\n                labelWidth = opts.labelWidth || 0,\n                labelHeight = opts.labelHeight || 0,\n                maxWidth = labelWidth || (axis.direction == \"x\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\n                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                font = opts.font || \"flot-tick-label tickLabel\";\n\n            for (var i = 0; i < ticks.length; ++i) {\n\n                var t = ticks[i];\n\n                if (!t.label)\n                    continue;\n\n                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\n\n                labelWidth = Math.max(labelWidth, info.width);\n                labelHeight = Math.max(labelHeight, info.height);\n            }\n\n            axis.labelWidth = opts.labelWidth || labelWidth;\n            axis.labelHeight = opts.labelHeight || labelHeight;\n        }\n\n        function allocateAxisBoxFirstPhase(axis) {\n            // find the bounding box of the axis by looking at label\n            // widths/heights and ticks, make room by diminishing the\n            // plotOffset; this first phase only looks at one\n            // dimension per axis, the other dimension depends on the\n            // other axes so will have to wait\n\n            var lw = axis.labelWidth,\n                lh = axis.labelHeight,\n                pos = axis.options.position,\n                isXAxis = axis.direction === \"x\",\n                tickLength = axis.options.tickLength,\n                axisMargin = options.grid.axisMargin,\n                padding = options.grid.labelMargin,\n                innermost = true,\n                outermost = true,\n                first = true,\n                found = false;\n\n            // Determine the axis's position in its direction and on its side\n\n            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\n                if (a && (a.show || a.reserveSpace)) {\n                    if (a === axis) {\n                        found = true;\n                    } else if (a.options.position === pos) {\n                        if (found) {\n                            outermost = false;\n                        } else {\n                            innermost = false;\n                        }\n                    }\n                    if (!found) {\n                        first = false;\n                    }\n                }\n            });\n\n            // The outermost axis on each side has no margin\n\n            if (outermost) {\n                axisMargin = 0;\n            }\n\n            // The ticks for the first axis in each direction stretch across\n\n            if (tickLength == null) {\n                tickLength = first ? \"full\" : 5;\n            }\n\n            if (!isNaN(+tickLength))\n                padding += +tickLength;\n\n            if (isXAxis) {\n                lh += padding;\n\n                if (pos == \"bottom\") {\n                    plotOffset.bottom += lh + axisMargin;\n                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };\n                }\n                else {\n                    axis.box = { top: plotOffset.top + axisMargin, height: lh };\n                    plotOffset.top += lh + axisMargin;\n                }\n            }\n            else {\n                lw += padding;\n\n                if (pos == \"left\") {\n                    axis.box = { left: plotOffset.left + axisMargin, width: lw };\n                    plotOffset.left += lw + axisMargin;\n                }\n                else {\n                    plotOffset.right += lw + axisMargin;\n                    axis.box = { left: surface.width - plotOffset.right, width: lw };\n                }\n            }\n\n             // save for future reference\n            axis.position = pos;\n            axis.tickLength = tickLength;\n            axis.box.padding = padding;\n            axis.innermost = innermost;\n        }\n\n        function allocateAxisBoxSecondPhase(axis) {\n            // now that all axis boxes have been placed in one\n            // dimension, we can set the remaining dimension coordinates\n            if (axis.direction == \"x\") {\n                axis.box.left = plotOffset.left - axis.labelWidth / 2;\n                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\n            }\n            else {\n                axis.box.top = plotOffset.top - axis.labelHeight / 2;\n                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\n            }\n        }\n\n        function adjustLayoutForThingsStickingOut() {\n            // possibly adjust plot offset to ensure everything stays\n            // inside the canvas and isn't clipped off\n\n            var minMargin = options.grid.minBorderMargin,\n                axis, i;\n\n            // check stuff from the plot (FIXME: this should just read\n            // a value from the series, otherwise it's impossible to\n            // customize)\n            if (minMargin == null) {\n                minMargin = 0;\n                for (i = 0; i < series.length; ++i)\n                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth/2));\n            }\n\n            var margins = {\n                left: minMargin,\n                right: minMargin,\n                top: minMargin,\n                bottom: minMargin\n            };\n\n            // check axis labels, note we don't check the actual\n            // labels but instead use the overall width/height to not\n            // jump as much around with replots\n            $.each(allAxes(), function (_, axis) {\n                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\n                    if (axis.direction === \"x\") {\n                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\n                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\n                    } else {\n                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\n                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\n                    }\n                }\n            });\n\n            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\n            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\n            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\n            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\n        }\n\n        function setupGrid() {\n            var i, axes = allAxes(), showGrid = options.grid.show;\n\n            // Initialize the plot's offset from the edge of the canvas\n\n            for (var a in plotOffset) {\n                var margin = options.grid.margin || 0;\n                plotOffset[a] = typeof margin == \"number\" ? margin : margin[a] || 0;\n            }\n\n            executeHooks(hooks.processOffset, [plotOffset]);\n\n            // If the grid is visible, add its border width to the offset\n\n            for (var a in plotOffset) {\n                if(typeof(options.grid.borderWidth) == \"object\") {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\n                }\n                else {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\n                }\n            }\n\n            $.each(axes, function (_, axis) {\n                var axisOpts = axis.options;\n                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\n                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\n                setRange(axis);\n            });\n\n            if (showGrid) {\n\n                var allocatedAxes = $.grep(axes, function (axis) {\n                    return axis.show || axis.reserveSpace;\n                });\n\n                $.each(allocatedAxes, function (_, axis) {\n                    // make the ticks\n                    setupTickGeneration(axis);\n                    setTicks(axis);\n                    snapRangeToTicks(axis, axis.ticks);\n                    // find labelWidth/Height for axis\n                    measureTickLabels(axis);\n                });\n\n                // with all dimensions calculated, we can compute the\n                // axis bounding boxes, start from the outside\n                // (reverse order)\n                for (i = allocatedAxes.length - 1; i >= 0; --i)\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n\n                // make sure we've got enough space for things that\n                // might stick out\n                adjustLayoutForThingsStickingOut();\n\n                $.each(allocatedAxes, function (_, axis) {\n                    allocateAxisBoxSecondPhase(axis);\n                });\n            }\n\n            plotWidth = surface.width - plotOffset.left - plotOffset.right;\n            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\n            // now we got the proper plot dimensions, we can compute the scaling\n            $.each(axes, function (_, axis) {\n                setTransformationHelpers(axis);\n            });\n\n            if (showGrid) {\n                drawAxisLabels();\n            }\n\n            insertLegend();\n        }\n\n        function setRange(axis) {\n            var opts = axis.options,\n                min = +(opts.min != null ? opts.min : axis.datamin),\n                max = +(opts.max != null ? opts.max : axis.datamax),\n                delta = max - min;\n\n            if (delta == 0.0) {\n                // degenerate case\n                var widen = max == 0 ? 1 : 0.01;\n\n                if (opts.min == null)\n                    min -= widen;\n                // always widen max if we couldn't widen min to ensure we\n                // don't fall into min == max which doesn't work\n                if (opts.max == null || opts.min != null)\n                    max += widen;\n            }\n            else {\n                // consider autoscaling\n                var margin = opts.autoscaleMargin;\n                if (margin != null) {\n                    if (opts.min == null) {\n                        min -= delta * margin;\n                        // make sure we don't go below zero if all values\n                        // are positive\n                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\n                            min = 0;\n                    }\n                    if (opts.max == null) {\n                        max += delta * margin;\n                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\n                            max = 0;\n                    }\n                }\n            }\n            axis.min = min;\n            axis.max = max;\n        }\n\n        function setupTickGeneration(axis) {\n            var opts = axis.options;\n\n            // estimate number of ticks\n            var noTicks;\n            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\n                noTicks = opts.ticks;\n            else\n                // heuristic based on the model a*sqrt(x) fitted to\n                // some data points that seemed reasonable\n                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? surface.width : surface.height);\n\n            var delta = (axis.max - axis.min) / noTicks,\n                dec = -Math.floor(Math.log(delta) / Math.LN10),\n                maxDec = opts.tickDecimals;\n\n            if (maxDec != null && dec > maxDec) {\n                dec = maxDec;\n            }\n\n            var magn = Math.pow(10, -dec),\n                norm = delta / magn, // norm is between 1.0 and 10.0\n                size;\n\n            if (norm < 1.5) {\n                size = 1;\n            } else if (norm < 3) {\n                size = 2;\n                // special case for 2.5, requires an extra decimal\n                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n                    size = 2.5;\n                    ++dec;\n                }\n            } else if (norm < 7.5) {\n                size = 5;\n            } else {\n                size = 10;\n            }\n\n            size *= magn;\n\n            if (opts.minTickSize != null && size < opts.minTickSize) {\n                size = opts.minTickSize;\n            }\n\n            axis.delta = delta;\n            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\n            axis.tickSize = opts.tickSize || size;\n\n            // Time mode was moved to a plug-in in 0.8, and since so many people use it\n            // we'll add an especially friendly reminder to make sure they included it.\n\n            if (opts.mode == \"time\" && !axis.tickGenerator) {\n                throw new Error(\"Time mode requires the flot.time plugin.\");\n            }\n\n            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\n            // like flot.time.js.\n\n            if (!axis.tickGenerator) {\n\n                axis.tickGenerator = function (axis) {\n\n                    var ticks = [],\n                        start = floorInBase(axis.min, axis.tickSize),\n                        i = 0,\n                        v = Number.NaN,\n                        prev;\n\n                    do {\n                        prev = v;\n                        v = start + i * axis.tickSize;\n                        ticks.push(v);\n                        ++i;\n                    } while (v < axis.max && v != prev);\n                    return ticks;\n                };\n\n\t\t\t\taxis.tickFormatter = function (value, axis) {\n\n\t\t\t\t\tvar factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\n\t\t\t\t\tvar formatted = \"\" + Math.round(value * factor) / factor;\n\n\t\t\t\t\t// If tickDecimals was specified, ensure that we have exactly that\n\t\t\t\t\t// much precision; otherwise default to the value's own precision.\n\n\t\t\t\t\tif (axis.tickDecimals != null) {\n\t\t\t\t\t\tvar decimal = formatted.indexOf(\".\");\n\t\t\t\t\t\tvar precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\n\t\t\t\t\t\tif (precision < axis.tickDecimals) {\n\t\t\t\t\t\t\treturn (precision ? formatted : formatted + \".\") + (\"\" + factor).substr(1, axis.tickDecimals - precision);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n                    return formatted;\n                };\n            }\n\n            if ($.isFunction(opts.tickFormatter))\n                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\n\n            if (opts.alignTicksWithAxis != null) {\n                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n                if (otherAxis && otherAxis.used && otherAxis != axis) {\n                    // consider snapping min/max to outermost nice ticks\n                    var niceTicks = axis.tickGenerator(axis);\n                    if (niceTicks.length > 0) {\n                        if (opts.min == null)\n                            axis.min = Math.min(axis.min, niceTicks[0]);\n                        if (opts.max == null && niceTicks.length > 1)\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n                    }\n\n                    axis.tickGenerator = function (axis) {\n                        // copy ticks, scaled to this axis\n                        var ticks = [], v, i;\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n                            v = axis.min + v * (axis.max - axis.min);\n                            ticks.push(v);\n                        }\n                        return ticks;\n                    };\n\n                    // we might need an extra decimal since forced\n                    // ticks don't necessarily fit naturally\n                    if (!axis.mode && opts.tickDecimals == null) {\n                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\n                            ts = axis.tickGenerator(axis);\n\n                        // only proceed if the tick interval rounded\n                        // with an extra decimal doesn't give us a\n                        // zero at end\n                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\n                            axis.tickDecimals = extraDec;\n                    }\n                }\n            }\n        }\n\n        function setTicks(axis) {\n            var oticks = axis.options.ticks, ticks = [];\n            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\n                ticks = axis.tickGenerator(axis);\n            else if (oticks) {\n                if ($.isFunction(oticks))\n                    // generate the ticks\n                    ticks = oticks(axis);\n                else\n                    ticks = oticks;\n            }\n\n            // clean up/labelify the supplied ticks, copy them over\n            var i, v;\n            axis.ticks = [];\n            for (i = 0; i < ticks.length; ++i) {\n                var label = null;\n                var t = ticks[i];\n                if (typeof t == \"object\") {\n                    v = +t[0];\n                    if (t.length > 1)\n                        label = t[1];\n                }\n                else\n                    v = +t;\n                if (label == null)\n                    label = axis.tickFormatter(v, axis);\n                if (!isNaN(v))\n                    axis.ticks.push({ v: v, label: label });\n            }\n        }\n\n        function snapRangeToTicks(axis, ticks) {\n            if (axis.options.autoscaleMargin && ticks.length > 0) {\n                // snap to ticks\n                if (axis.options.min == null)\n                    axis.min = Math.min(axis.min, ticks[0].v);\n                if (axis.options.max == null && ticks.length > 1)\n                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n            }\n        }\n\n        function draw() {\n\n            surface.clear();\n\n            executeHooks(hooks.drawBackground, [ctx]);\n\n            var grid = options.grid;\n\n            // draw background, if any\n            if (grid.show && grid.backgroundColor)\n                drawBackground();\n\n            if (grid.show && !grid.aboveData) {\n                drawGrid();\n            }\n\n            for (var i = 0; i < series.length; ++i) {\n                executeHooks(hooks.drawSeries, [ctx, series[i]]);\n                drawSeries(series[i]);\n            }\n\n            executeHooks(hooks.draw, [ctx]);\n\n            if (grid.show && grid.aboveData) {\n                drawGrid();\n            }\n\n            surface.render();\n\n            // A draw implies that either the axes or data have changed, so we\n            // should probably update the overlay highlights as well.\n\n            triggerRedrawOverlay();\n        }\n\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = allAxes();\n\n            for (var i = 0; i < axes.length; ++i) {\n                axis = axes[i];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return { from: from, to: to, axis: axis };\n        }\n\n        function drawBackground() {\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\n            ctx.restore();\n        }\n\n        function drawGrid() {\n            var i, axes, bw, bc;\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // draw markings\n            var markings = options.grid.markings;\n            if (markings) {\n                if ($.isFunction(markings)) {\n                    axes = plot.getAxes();\n                    // xmin etc. is backwards compatibility, to be\n                    // removed in the future\n                    axes.xmin = axes.xaxis.min;\n                    axes.xmax = axes.xaxis.max;\n                    axes.ymin = axes.yaxis.min;\n                    axes.ymax = axes.yaxis.max;\n\n                    markings = markings(axes);\n                }\n\n                for (i = 0; i < markings.length; ++i) {\n                    var m = markings[i],\n                        xrange = extractRange(m, \"x\"),\n                        yrange = extractRange(m, \"y\");\n\n                    // fill in missing\n                    if (xrange.from == null)\n                        xrange.from = xrange.axis.min;\n                    if (xrange.to == null)\n                        xrange.to = xrange.axis.max;\n                    if (yrange.from == null)\n                        yrange.from = yrange.axis.min;\n                    if (yrange.to == null)\n                        yrange.to = yrange.axis.max;\n\n                    // clip\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\n                        continue;\n\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\n                    var xequal = xrange.from === xrange.to,\n                        yequal = yrange.from === yrange.to;\n\n                    if (xequal && yequal) {\n                        continue;\n                    }\n\n                    // then draw\n                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\n                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\n                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\n                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\n\n                    if (xequal || yequal) {\n                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\n                            subPixel = lineWidth % 2 ? 0.5 : 0;\n                        ctx.beginPath();\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n                        ctx.lineWidth = lineWidth;\n                        if (xequal) {\n                            ctx.moveTo(xrange.to + subPixel, yrange.from);\n                            ctx.lineTo(xrange.to + subPixel, yrange.to);\n                        } else {\n                            ctx.moveTo(xrange.from, yrange.to + subPixel);\n                            ctx.lineTo(xrange.to, yrange.to + subPixel);                            \n                        }\n                        ctx.stroke();\n                    } else {\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\n                        ctx.fillRect(xrange.from, yrange.to,\n                                     xrange.to - xrange.from,\n                                     yrange.from - yrange.to);\n                    }\n                }\n            }\n\n            // draw the ticks\n            axes = allAxes();\n            bw = options.grid.borderWidth;\n\n            for (var j = 0; j < axes.length; ++j) {\n                var axis = axes[j], box = axis.box,\n                    t = axis.tickLength, x, y, xoff, yoff;\n                if (!axis.show || axis.ticks.length == 0)\n                    continue;\n\n                ctx.lineWidth = 1;\n\n                // find the edges\n                if (axis.direction == \"x\") {\n                    x = 0;\n                    if (t == \"full\")\n                        y = (axis.position == \"top\" ? 0 : plotHeight);\n                    else\n                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\n                }\n                else {\n                    y = 0;\n                    if (t == \"full\")\n                        x = (axis.position == \"left\" ? 0 : plotWidth);\n                    else\n                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\n                }\n\n                // draw tick bar\n                if (!axis.innermost) {\n                    ctx.strokeStyle = axis.options.color;\n                    ctx.beginPath();\n                    xoff = yoff = 0;\n                    if (axis.direction == \"x\")\n                        xoff = plotWidth + 1;\n                    else\n                        yoff = plotHeight + 1;\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\") {\n                            y = Math.floor(y) + 0.5;\n                        } else {\n                            x = Math.floor(x) + 0.5;\n                        }\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                    ctx.stroke();\n                }\n\n                // draw ticks\n\n                ctx.strokeStyle = axis.options.tickColor;\n\n                ctx.beginPath();\n                for (i = 0; i < axis.ticks.length; ++i) {\n                    var v = axis.ticks[i].v;\n\n                    xoff = yoff = 0;\n\n                    if (isNaN(v) || v < axis.min || v > axis.max\n                        // skip those lying on the axes if we got a border\n                        || (t == \"full\"\n                            && ((typeof bw == \"object\" && bw[axis.position] > 0) || bw > 0)\n                            && (v == axis.min || v == axis.max)))\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        x = axis.p2c(v);\n                        yoff = t == \"full\" ? -plotHeight : t;\n\n                        if (axis.position == \"top\")\n                            yoff = -yoff;\n                    }\n                    else {\n                        y = axis.p2c(v);\n                        xoff = t == \"full\" ? -plotWidth : t;\n\n                        if (axis.position == \"left\")\n                            xoff = -xoff;\n                    }\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\")\n                            x = Math.floor(x) + 0.5;\n                        else\n                            y = Math.floor(y) + 0.5;\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                }\n\n                ctx.stroke();\n            }\n\n\n            // draw border\n            if (bw) {\n                // If either borderWidth or borderColor is an object, then draw the border\n                // line by line instead of as one rectangle\n                bc = options.grid.borderColor;\n                if(typeof bw == \"object\" || typeof bc == \"object\") {\n                    if (typeof bw !== \"object\") {\n                        bw = {top: bw, right: bw, bottom: bw, left: bw};\n                    }\n                    if (typeof bc !== \"object\") {\n                        bc = {top: bc, right: bc, bottom: bc, left: bc};\n                    }\n\n                    if (bw.top > 0) {\n                        ctx.strokeStyle = bc.top;\n                        ctx.lineWidth = bw.top;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left, 0 - bw.top/2);\n                        ctx.lineTo(plotWidth, 0 - bw.top/2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.right > 0) {\n                        ctx.strokeStyle = bc.right;\n                        ctx.lineWidth = bw.right;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\n                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\n                        ctx.stroke();\n                    }\n\n                    if (bw.bottom > 0) {\n                        ctx.strokeStyle = bc.bottom;\n                        ctx.lineWidth = bw.bottom;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\n                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.left > 0) {\n                        ctx.strokeStyle = bc.left;\n                        ctx.lineWidth = bw.left;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left/2, plotHeight + bw.bottom);\n                        ctx.lineTo(0- bw.left/2, 0);\n                        ctx.stroke();\n                    }\n                }\n                else {\n                    ctx.lineWidth = bw;\n                    ctx.strokeStyle = options.grid.borderColor;\n                    ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\n                }\n            }\n\n            ctx.restore();\n        }\n\n        function drawAxisLabels() {\n\n            $.each(allAxes(), function (_, axis) {\n                var box = axis.box,\n                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                    font = axis.options.font || \"flot-tick-label tickLabel\",\n                    tick, x, y, halign, valign;\n\n                // Remove text before checking for axis.show and ticks.length;\n                // otherwise plugins, like flot-tickrotor, that draw their own\n                // tick labels will end up with both theirs and the defaults.\n\n                surface.removeText(layer);\n\n                if (!axis.show || axis.ticks.length == 0)\n                    return;\n\n                for (var i = 0; i < axis.ticks.length; ++i) {\n\n                    tick = axis.ticks[i];\n                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        halign = \"center\";\n                        x = plotOffset.left + axis.p2c(tick.v);\n                        if (axis.position == \"bottom\") {\n                            y = box.top + box.padding;\n                        } else {\n                            y = box.top + box.height - box.padding;\n                            valign = \"bottom\";\n                        }\n                    } else {\n                        valign = \"middle\";\n                        y = plotOffset.top + axis.p2c(tick.v);\n                        if (axis.position == \"left\") {\n                            x = box.left + box.width - box.padding;\n                            halign = \"right\";\n                        } else {\n                            x = box.left + box.padding;\n                        }\n                    }\n\n                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\n                }\n            });\n        }\n\n        function drawSeries(series) {\n            if (series.lines.show)\n                drawSeriesLines(series);\n            if (series.bars.show)\n                drawSeriesBars(series);\n            if (series.points.show)\n                drawSeriesPoints(series);\n        }\n\n        function drawSeriesLines(series) {\n            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    prevx = null, prevy = null;\n\n                ctx.beginPath();\n                for (var i = ps; i < points.length; i += ps) {\n                    var x1 = points[i - ps], y1 = points[i - ps + 1],\n                        x2 = points[i], y2 = points[i + 1];\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min) {\n                        if (y2 < axisy.min)\n                            continue;   // line segment is outside\n                        // compute new intersection point\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min) {\n                        if (y1 < axisy.min)\n                            continue;\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max) {\n                        if (y2 > axisy.max)\n                            continue;\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max) {\n                        if (y1 > axisy.max)\n                            continue;\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (x1 != prevx || y1 != prevy)\n                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n\n                    prevx = x2;\n                    prevy = y2;\n                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n                }\n                ctx.stroke();\n            }\n\n            function plotLineArea(datapoints, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\n                    i = 0, top, areaOpen = false,\n                    ypos = 1, segmentStart = 0, segmentEnd = 0;\n\n                // we process each segment in two turns, first forward\n                // direction to sketch out top, then once we hit the\n                // end we go backwards to sketch the bottom\n                while (true) {\n                    if (ps > 0 && i > points.length + ps)\n                        break;\n\n                    i += ps; // ps is negative if going backwards\n\n                    var x1 = points[i - ps],\n                        y1 = points[i - ps + ypos],\n                        x2 = points[i], y2 = points[i + ypos];\n\n                    if (areaOpen) {\n                        if (ps > 0 && x1 != null && x2 == null) {\n                            // at turning point\n                            segmentEnd = i;\n                            ps = -ps;\n                            ypos = 2;\n                            continue;\n                        }\n\n                        if (ps < 0 && i == segmentStart + ps) {\n                            // done with the reverse sweep\n                            ctx.fill();\n                            areaOpen = false;\n                            ps = -ps;\n                            ypos = 1;\n                            i = segmentStart = segmentEnd + ps;\n                            continue;\n                        }\n                    }\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip x values\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (!areaOpen) {\n                        // open area\n                        ctx.beginPath();\n                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n                        areaOpen = true;\n                    }\n\n                    // now first check the case where both is outside\n                    if (y1 >= axisy.max && y2 >= axisy.max) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n                        continue;\n                    }\n                    else if (y1 <= axisy.min && y2 <= axisy.min) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n                        continue;\n                    }\n\n                    // else it's a bit more complicated, there might\n                    // be a flat maxed out rectangle first, then a\n                    // triangular cutout or reverse; to find these\n                    // keep track of the current x values\n                    var x1old = x1, x2old = x2;\n\n                    // clip the y values, without shortcutting, we\n                    // go through all cases in turn\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // if the x value was changed we got a rectangle\n                    // to fill\n                    if (x1 != x1old) {\n                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n                        // it goes to (x1, y1), but we fill that below\n                    }\n\n                    // fill triangular section, this sometimes result\n                    // in redundant points if (x1, y1) hasn't changed\n                    // from previous line to, but we just ignore that\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\n                    // fill the other rectangle if it's there\n                    if (x2 != x2old) {\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n                    }\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n            ctx.lineJoin = \"round\";\n\n            var lw = series.lines.lineWidth,\n                sw = series.shadowSize;\n            // FIXME: consider another form of shadow when filling is turned on\n            if (lw > 0 && sw > 0) {\n                // draw shadow as a thick and thin line with transparency\n                ctx.lineWidth = sw;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                // position shadow at angle from the mid of line\n                var angle = Math.PI/18;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\n                ctx.lineWidth = sw/2;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\n            if (fillStyle) {\n                ctx.fillStyle = fillStyle;\n                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\n            }\n\n            if (lw > 0)\n                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function drawSeriesPoints(series) {\n            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    var x = points[i], y = points[i + 1];\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                        continue;\n\n                    ctx.beginPath();\n                    x = axisx.p2c(x);\n                    y = axisy.p2c(y) + offset;\n                    if (symbol == \"circle\")\n                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n                    else\n                        symbol(ctx, x, y, radius, shadow);\n                    ctx.closePath();\n\n                    if (fillStyle) {\n                        ctx.fillStyle = fillStyle;\n                        ctx.fill();\n                    }\n                    ctx.stroke();\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            var lw = series.points.lineWidth,\n                sw = series.shadowSize,\n                radius = series.points.radius,\n                symbol = series.points.symbol;\n\n            // If the user sets the line width to 0, we change it to a very \n            // small value. A line width of 0 seems to force the default of 1.\n            // Doing the conditional here allows the shadow setting to still be \n            // optional even with a lineWidth of 0.\n\n            if( lw == 0 )\n                lw = 0.0001;\n\n            if (lw > 0 && sw > 0) {\n                // draw shadow in two steps\n                var w = sw / 2;\n                ctx.lineWidth = w;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                plotPoints(series.datapoints, radius, null, w + w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n\n                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n                plotPoints(series.datapoints, radius, null, w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            plotPoints(series.datapoints, radius,\n                       getFillStyle(series.points, series.color), 0, false,\n                       series.xaxis, series.yaxis, symbol);\n            ctx.restore();\n        }\n\n        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n            var left, right, bottom, top,\n                drawLeft, drawRight, drawTop, drawBottom,\n                tmp;\n\n            // in horizontal mode, we start the bar from the left\n            // instead of from the bottom so it appears to be\n            // horizontal rather than vertical\n            if (horizontal) {\n                drawBottom = drawRight = drawTop = true;\n                drawLeft = false;\n                left = b;\n                right = x;\n                top = y + barLeft;\n                bottom = y + barRight;\n\n                // account for negative bars\n                if (right < left) {\n                    tmp = right;\n                    right = left;\n                    left = tmp;\n                    drawLeft = true;\n                    drawRight = false;\n                }\n            }\n            else {\n                drawLeft = drawRight = drawTop = true;\n                drawBottom = false;\n                left = x + barLeft;\n                right = x + barRight;\n                bottom = b;\n                top = y;\n\n                // account for negative bars\n                if (top < bottom) {\n                    tmp = top;\n                    top = bottom;\n                    bottom = tmp;\n                    drawBottom = true;\n                    drawTop = false;\n                }\n            }\n\n            // clip\n            if (right < axisx.min || left > axisx.max ||\n                top < axisy.min || bottom > axisy.max)\n                return;\n\n            if (left < axisx.min) {\n                left = axisx.min;\n                drawLeft = false;\n            }\n\n            if (right > axisx.max) {\n                right = axisx.max;\n                drawRight = false;\n            }\n\n            if (bottom < axisy.min) {\n                bottom = axisy.min;\n                drawBottom = false;\n            }\n\n            if (top > axisy.max) {\n                top = axisy.max;\n                drawTop = false;\n            }\n\n            left = axisx.p2c(left);\n            bottom = axisy.p2c(bottom);\n            right = axisx.p2c(right);\n            top = axisy.p2c(top);\n\n            // fill the bar\n            if (fillStyleCallback) {\n                c.fillStyle = fillStyleCallback(bottom, top);\n                c.fillRect(left, top, right - left, bottom - top)\n            }\n\n            // draw outline\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n                c.beginPath();\n\n                // FIXME: inline moveTo is buggy with excanvas\n                c.moveTo(left, bottom);\n                if (drawLeft)\n                    c.lineTo(left, top);\n                else\n                    c.moveTo(left, top);\n                if (drawTop)\n                    c.lineTo(right, top);\n                else\n                    c.moveTo(right, top);\n                if (drawRight)\n                    c.lineTo(right, bottom);\n                else\n                    c.moveTo(right, bottom);\n                if (drawBottom)\n                    c.lineTo(left, bottom);\n                else\n                    c.moveTo(left, bottom);\n                c.stroke();\n            }\n        }\n\n        function drawSeriesBars(series) {\n            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    if (points[i] == null)\n                        continue;\n                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // FIXME: figure out a way to add shadows (for instance along the right edge)\n            ctx.lineWidth = series.bars.lineWidth;\n            ctx.strokeStyle = series.color;\n\n            var barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\n            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function getFillStyle(filloptions, seriesColor, bottom, top) {\n            var fill = filloptions.fill;\n            if (!fill)\n                return null;\n\n            if (filloptions.fillColor)\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n\n            var c = $.color.parse(seriesColor);\n            c.a = typeof fill == \"number\" ? fill : 0.4;\n            c.normalize();\n            return c.toString();\n        }\n\n        function insertLegend() {\n\n            if (options.legend.container != null) {\n                $(options.legend.container).html(\"\");\n            } else {\n                placeholder.find(\".legend\").remove();\n            }\n\n            if (!options.legend.show) {\n                return;\n            }\n\n            var fragments = [], entries = [], rowStarted = false,\n                lf = options.legend.labelFormatter, s, label;\n\n            // Build a list of legend entries, with each having a label and a color\n\n            for (var i = 0; i < series.length; ++i) {\n                s = series[i];\n                if (s.label) {\n                    label = lf ? lf(s.label, s) : s.label;\n                    if (label) {\n                        entries.push({\n                            label: label,\n                            color: s.color\n                        });\n                    }\n                }\n            }\n\n            // Sort the legend using either the default or a custom comparator\n\n            if (options.legend.sorted) {\n                if ($.isFunction(options.legend.sorted)) {\n                    entries.sort(options.legend.sorted);\n                } else if (options.legend.sorted == \"reverse\") {\n                \tentries.reverse();\n                } else {\n                    var ascending = options.legend.sorted != \"descending\";\n                    entries.sort(function(a, b) {\n                        return a.label == b.label ? 0 : (\n                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\n                        );\n                    });\n                }\n            }\n\n            // Generate markup for the list of entries, in their final order\n\n            for (var i = 0; i < entries.length; ++i) {\n\n                var entry = entries[i];\n\n                if (i % options.legend.noColumns == 0) {\n                    if (rowStarted)\n                        fragments.push('</tr>');\n                    fragments.push('<tr>');\n                    rowStarted = true;\n                }\n\n                fragments.push(\n                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\"></div></div></td>' +\n                    '<td class=\"legendLabel\">' + entry.label + '</td>'\n                );\n            }\n\n            if (rowStarted)\n                fragments.push('</tr>');\n\n            if (fragments.length == 0)\n                return;\n\n            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\n            if (options.legend.container != null)\n                $(options.legend.container).html(table);\n            else {\n                var pos = \"\",\n                    p = options.legend.position,\n                    m = options.legend.margin;\n                if (m[0] == null)\n                    m = [m, m];\n                if (p.charAt(0) == \"n\")\n                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n                else if (p.charAt(0) == \"s\")\n                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n                if (p.charAt(1) == \"e\")\n                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n                else if (p.charAt(1) == \"w\")\n                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\n                if (options.legend.backgroundOpacity != 0.0) {\n                    // put in the transparent background\n                    // separately to avoid blended labels and\n                    // label boxes\n                    var c = options.legend.backgroundColor;\n                    if (c == null) {\n                        c = options.grid.backgroundColor;\n                        if (c && typeof c == \"string\")\n                            c = $.color.parse(c);\n                        else\n                            c = $.color.extract(legend, 'background-color');\n                        c.a = 1;\n                        c = c.toString();\n                    }\n                    var div = legend.children();\n                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\n                }\n            }\n        }\n\n\n        // interactive features\n\n        var highlights = [],\n            redrawTimeout = null;\n\n        // returns the data item the mouse is over, or null if none is found\n        function findNearbyItem(mouseX, mouseY, seriesFilter) {\n            var maxDistance = options.grid.mouseActiveRadius,\n                smallestDistance = maxDistance * maxDistance + 1,\n                item = null, foundPoint = false, i, j, ps;\n\n            for (i = series.length - 1; i >= 0; --i) {\n                if (!seriesFilter(series[i]))\n                    continue;\n\n                var s = series[i],\n                    axisx = s.xaxis,\n                    axisy = s.yaxis,\n                    points = s.datapoints.points,\n                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\n                    my = axisy.c2p(mouseY),\n                    maxx = maxDistance / axisx.scale,\n                    maxy = maxDistance / axisy.scale;\n\n                ps = s.datapoints.pointsize;\n                // with inverse transforms, we can't use the maxx/maxy\n                // optimization, sadly\n                if (axisx.options.inverseTransform)\n                    maxx = Number.MAX_VALUE;\n                if (axisy.options.inverseTransform)\n                    maxy = Number.MAX_VALUE;\n\n                if (s.lines.show || s.points.show) {\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1];\n                        if (x == null)\n                            continue;\n\n                        // For points and lines, the cursor must be within a\n                        // certain distance to the data point\n                        if (x - mx > maxx || x - mx < -maxx ||\n                            y - my > maxy || y - my < -maxy)\n                            continue;\n\n                        // We have to calculate distances in pixels, not in\n                        // data units, because the scales of the axes may be different\n                        var dx = Math.abs(axisx.p2c(x) - mouseX),\n                            dy = Math.abs(axisy.p2c(y) - mouseY),\n                            dist = dx * dx + dy * dy; // we save the sqrt\n\n                        // use <= to ensure last point takes precedence\n                        // (last generally means on top of)\n                        if (dist < smallestDistance) {\n                            smallestDistance = dist;\n                            item = [i, j / ps];\n                        }\n                    }\n                }\n\n                if (s.bars.show && !item) { // no other point can be nearby\n\n                    var barLeft, barRight;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            barLeft = 0;\n                            break;\n                        case \"right\":\n                            barLeft = -s.bars.barWidth;\n                            break;\n                        default:\n                            barLeft = -s.bars.barWidth / 2;\n                    }\n\n                    barRight = barLeft + s.bars.barWidth;\n\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1], b = points[j + 2];\n                        if (x == null)\n                            continue;\n\n                        // for a bar graph, the cursor must be inside the bar\n                        if (series[i].bars.horizontal ?\n                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\n                             my >= y + barLeft && my <= y + barRight) :\n                            (mx >= x + barLeft && mx <= x + barRight &&\n                             my >= Math.min(b, y) && my <= Math.max(b, y)))\n                                item = [i, j / ps];\n                    }\n                }\n            }\n\n            if (item) {\n                i = item[0];\n                j = item[1];\n                ps = series[i].datapoints.pointsize;\n\n                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\n                         dataIndex: j,\n                         series: series[i],\n                         seriesIndex: i };\n            }\n\n            return null;\n        }\n\n        function onMouseMove(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return s[\"hoverable\"] != false; });\n        }\n\n        function onMouseLeave(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return false; });\n        }\n\n        function onClick(e) {\n            triggerClickHoverEvent(\"plotclick\", e,\n                                   function (s) { return s[\"clickable\"] != false; });\n        }\n\n        // trigger click or hover event (they send the same parameters\n        // so we share their code)\n        function triggerClickHoverEvent(eventname, event, seriesFilter) {\n            var offset = eventHolder.offset(),\n                canvasX = event.pageX - offset.left - plotOffset.left,\n                canvasY = event.pageY - offset.top - plotOffset.top,\n            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\n\n            pos.pageX = event.pageX;\n            pos.pageY = event.pageY;\n\n            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\n\n            if (item) {\n                // fill in mouse pos for any listeners out there\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\n            }\n\n            if (options.grid.autoHighlight) {\n                // clear auto-highlights\n                for (var i = 0; i < highlights.length; ++i) {\n                    var h = highlights[i];\n                    if (h.auto == eventname &&\n                        !(item && h.series == item.series &&\n                          h.point[0] == item.datapoint[0] &&\n                          h.point[1] == item.datapoint[1]))\n                        unhighlight(h.series, h.point);\n                }\n\n                if (item)\n                    highlight(item.series, item.datapoint, eventname);\n            }\n\n            placeholder.trigger(eventname, [ pos, item ]);\n        }\n\n        function triggerRedrawOverlay() {\n            var t = options.interaction.redrawOverlayInterval;\n            if (t == -1) {      // skip event queue\n                drawOverlay();\n                return;\n            }\n\n            if (!redrawTimeout)\n                redrawTimeout = setTimeout(drawOverlay, t);\n        }\n\n        function drawOverlay() {\n            redrawTimeout = null;\n\n            // draw highlights\n            octx.save();\n            overlay.clear();\n            octx.translate(plotOffset.left, plotOffset.top);\n\n            var i, hi;\n            for (i = 0; i < highlights.length; ++i) {\n                hi = highlights[i];\n\n                if (hi.series.bars.show)\n                    drawBarHighlight(hi.series, hi.point);\n                else\n                    drawPointHighlight(hi.series, hi.point);\n            }\n            octx.restore();\n\n            executeHooks(hooks.drawOverlay, [octx]);\n        }\n\n        function highlight(s, point, auto) {\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i == -1) {\n                highlights.push({ series: s, point: point, auto: auto });\n\n                triggerRedrawOverlay();\n            }\n            else if (!auto)\n                highlights[i].auto = false;\n        }\n\n        function unhighlight(s, point) {\n            if (s == null && point == null) {\n                highlights = [];\n                triggerRedrawOverlay();\n                return;\n            }\n\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i != -1) {\n                highlights.splice(i, 1);\n\n                triggerRedrawOverlay();\n            }\n        }\n\n        function indexOfHighlight(s, p) {\n            for (var i = 0; i < highlights.length; ++i) {\n                var h = highlights[i];\n                if (h.series == s && h.point[0] == p[0]\n                    && h.point[1] == p[1])\n                    return i;\n            }\n            return -1;\n        }\n\n        function drawPointHighlight(series, point) {\n            var x = point[0], y = point[1],\n                axisx = series.xaxis, axisy = series.yaxis,\n                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\n\n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                return;\n\n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n            octx.lineWidth = pointRadius;\n            octx.strokeStyle = highlightColor;\n            var radius = 1.5 * pointRadius;\n            x = axisx.p2c(x);\n            y = axisy.p2c(y);\n\n            octx.beginPath();\n            if (series.points.symbol == \"circle\")\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            else\n                series.points.symbol(octx, x, y, radius, false);\n            octx.closePath();\n            octx.stroke();\n        }\n\n        function drawBarHighlight(series, point) {\n            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\n                fillStyle = highlightColor,\n                barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            octx.lineWidth = series.bars.lineWidth;\n            octx.strokeStyle = highlightColor;\n\n            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\n                    function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n        }\n\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\n            if (typeof spec == \"string\")\n                return spec;\n            else {\n                // assume this is a gradient spec; IE currently only\n                // supports a simple vertical gradient properly, so that's\n                // what we support too\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n\n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n                    var c = spec.colors[i];\n                    if (typeof c != \"string\") {\n                        var co = $.color.parse(defaultColor);\n                        if (c.brightness != null)\n                            co = co.scale('rgb', c.brightness);\n                        if (c.opacity != null)\n                            co.a *= c.opacity;\n                        c = co.toString();\n                    }\n                    gradient.addColorStop(i / (l - 1), c);\n                }\n\n                return gradient;\n            }\n        }\n    }\n\n    // Add the plot function to the top level of the jQuery object\n\n    $.plot = function(placeholder, data, options) {\n        //var t0 = new Date();\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\n        return plot;\n    };\n\n    $.plot.version = \"0.8.3\";\n\n    $.plot.plugins = [];\n\n    // Also add the plot function as a chainable property\n\n    $.fn.plot = function(data, options) {\n        return this.each(function() {\n            $.plot(this, data, options);\n        });\n    };\n\n    // round to nearby lower multiple of base\n    function floorInBase(n, base) {\n        return base * Math.floor(n / base);\n    }\n\n})(jQuery);\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 124052
        },
        "cache": {},
        "timings": {
          "blocked": 2.64100008644164,
          "dns": -1,
          "connect": -1,
          "send": 0.08499994873999972,
          "wait": 2412.9039999097586,
          "receive": 63806.955999927595,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.167Z",
        "time": 8206.708999816328,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.blog.st-hatena.com/js/external/jquery.flot.time.js%3Fversion=0.8.3",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"0-2df8\""
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "content-length",
              "value": "11768"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 11768,
            "mimeType": "text/plain",
            "text": "/* Pretty handling of time axes.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\nAPI.txt for details.\n\n*/\n\n(function($) {\n\n\tvar options = {\n\t\txaxis: {\n\t\t\ttimezone: null,\t\t// \"browser\" for local to the client or timezone for timezone-js\n\t\t\ttimeformat: null,\t// format string to use\n\t\t\ttwelveHourClock: false,\t// 12 or 24 time in time mode\n\t\t\tmonthNames: null\t// list of names of months\n\t\t}\n\t};\n\n\t// round to nearby lower multiple of base\n\n\tfunction floorInBase(n, base) {\n\t\treturn base * Math.floor(n / base);\n\t}\n\n\t// Returns a string with the date d formatted according to fmt.\n\t// A subset of the Open Group's strftime format is supported.\n\n\tfunction formatDate(d, fmt, monthNames, dayNames) {\n\n\t\tif (typeof d.strftime == \"function\") {\n\t\t\treturn d.strftime(fmt);\n\t\t}\n\n\t\tvar leftPad = function(n, pad) {\n\t\t\tn = \"\" + n;\n\t\t\tpad = \"\" + (pad == null ? \"0\" : pad);\n\t\t\treturn n.length == 1 ? pad + n : n;\n\t\t};\n\n\t\tvar r = [];\n\t\tvar escape = false;\n\t\tvar hours = d.getHours();\n\t\tvar isAM = hours < 12;\n\n\t\tif (monthNames == null) {\n\t\t\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\t}\n\n\t\tif (dayNames == null) {\n\t\t\tdayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t\t}\n\n\t\tvar hours12;\n\n\t\tif (hours > 12) {\n\t\t\thours12 = hours - 12;\n\t\t} else if (hours == 0) {\n\t\t\thours12 = 12;\n\t\t} else {\n\t\t\thours12 = hours;\n\t\t}\n\n\t\tfor (var i = 0; i < fmt.length; ++i) {\n\n\t\t\tvar c = fmt.charAt(i);\n\n\t\t\tif (escape) {\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'a': c = \"\" + dayNames[d.getDay()]; break;\n\t\t\t\t\tcase 'b': c = \"\" + monthNames[d.getMonth()]; break;\n\t\t\t\t\tcase 'd': c = leftPad(d.getDate()); break;\n\t\t\t\t\tcase 'e': c = leftPad(d.getDate(), \" \"); break;\n\t\t\t\t\tcase 'h':\t// For back-compat with 0.7; remove in 1.0\n\t\t\t\t\tcase 'H': c = leftPad(hours); break;\n\t\t\t\t\tcase 'I': c = leftPad(hours12); break;\n\t\t\t\t\tcase 'l': c = leftPad(hours12, \" \"); break;\n\t\t\t\t\tcase 'm': c = leftPad(d.getMonth() + 1); break;\n\t\t\t\t\tcase 'M': c = leftPad(d.getMinutes()); break;\n\t\t\t\t\t// quarters not in Open Group's strftime specification\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tc = \"\" + (Math.floor(d.getMonth() / 3) + 1); break;\n\t\t\t\t\tcase 'S': c = leftPad(d.getSeconds()); break;\n\t\t\t\t\tcase 'y': c = leftPad(d.getFullYear() % 100); break;\n\t\t\t\t\tcase 'Y': c = \"\" + d.getFullYear(); break;\n\t\t\t\t\tcase 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;\n\t\t\t\t\tcase 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;\n\t\t\t\t\tcase 'w': c = \"\" + d.getDay(); break;\n\t\t\t\t}\n\t\t\t\tr.push(c);\n\t\t\t\tescape = false;\n\t\t\t} else {\n\t\t\t\tif (c == \"%\") {\n\t\t\t\t\tescape = true;\n\t\t\t\t} else {\n\t\t\t\t\tr.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn r.join(\"\");\n\t}\n\n\t// To have a consistent view of time-based data independent of which time\n\t// zone the client happens to be in we need a date-like object independent\n\t// of time zones.  This is done through a wrapper that only calls the UTC\n\t// versions of the accessor methods.\n\n\tfunction makeUtcWrapper(d) {\n\n\t\tfunction addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n\t\t\tsourceObj[sourceMethod] = function() {\n\t\t\t\treturn targetObj[targetMethod].apply(targetObj, arguments);\n\t\t\t};\n\t\t};\n\n\t\tvar utc = {\n\t\t\tdate: d\n\t\t};\n\n\t\t// support strftime, if found\n\n\t\tif (d.strftime != undefined) {\n\t\t\taddProxyMethod(utc, \"strftime\", d, \"strftime\");\n\t\t}\n\n\t\taddProxyMethod(utc, \"getTime\", d, \"getTime\");\n\t\taddProxyMethod(utc, \"setTime\", d, \"setTime\");\n\n\t\tvar props = [\"Date\", \"Day\", \"FullYear\", \"Hours\", \"Milliseconds\", \"Minutes\", \"Month\", \"Seconds\"];\n\n\t\tfor (var p = 0; p < props.length; p++) {\n\t\t\taddProxyMethod(utc, \"get\" + props[p], d, \"getUTC\" + props[p]);\n\t\t\taddProxyMethod(utc, \"set\" + props[p], d, \"setUTC\" + props[p]);\n\t\t}\n\n\t\treturn utc;\n\t};\n\n\t// select time zone strategy.  This returns a date-like object tied to the\n\t// desired timezone\n\n\tfunction dateGenerator(ts, opts) {\n\t\tif (opts.timezone == \"browser\") {\n\t\t\treturn new Date(ts);\n\t\t} else if (!opts.timezone || opts.timezone == \"utc\") {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t} else if (typeof timezoneJS != \"undefined\" && typeof timezoneJS.Date != \"undefined\") {\n\t\t\tvar d = new timezoneJS.Date();\n\t\t\t// timezone-js is fickle, so be sure to set the time zone before\n\t\t\t// setting the time.\n\t\t\td.setTimezone(opts.timezone);\n\t\t\td.setTime(ts);\n\t\t\treturn d;\n\t\t} else {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t}\n\t}\n\t\n\t// map of app. size of time units in milliseconds\n\n\tvar timeUnitSize = {\n\t\t\"second\": 1000,\n\t\t\"minute\": 60 * 1000,\n\t\t\"hour\": 60 * 60 * 1000,\n\t\t\"day\": 24 * 60 * 60 * 1000,\n\t\t\"month\": 30 * 24 * 60 * 60 * 1000,\n\t\t\"quarter\": 3 * 30 * 24 * 60 * 60 * 1000,\n\t\t\"year\": 365.2425 * 24 * 60 * 60 * 1000\n\t};\n\n\t// the allowed tick sizes, after 1 year we use\n\t// an integer algorithm\n\n\tvar baseSpec = [\n\t\t[1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n\t\t[30, \"second\"], \n\t\t[1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n\t\t[30, \"minute\"], \n\t\t[1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n\t\t[8, \"hour\"], [12, \"hour\"],\n\t\t[1, \"day\"], [2, \"day\"], [3, \"day\"],\n\t\t[0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n\t\t[2, \"month\"]\n\t];\n\n\t// we don't know which variant(s) we'll need yet, but generating both is\n\t// cheap\n\n\tvar specMonths = baseSpec.concat([[3, \"month\"], [6, \"month\"],\n\t\t[1, \"year\"]]);\n\tvar specQuarters = baseSpec.concat([[1, \"quarter\"], [2, \"quarter\"],\n\t\t[1, \"year\"]]);\n\n\tfunction init(plot) {\n\t\tplot.hooks.processOptions.push(function (plot, options) {\n\t\t\t$.each(plot.getAxes(), function(axisName, axis) {\n\n\t\t\t\tvar opts = axis.options;\n\n\t\t\t\tif (opts.mode == \"time\") {\n\t\t\t\t\taxis.tickGenerator = function(axis) {\n\n\t\t\t\t\t\tvar ticks = [];\n\t\t\t\t\t\tvar d = dateGenerator(axis.min, opts);\n\t\t\t\t\t\tvar minSize = 0;\n\n\t\t\t\t\t\t// make quarter use a possibility if quarters are\n\t\t\t\t\t\t// mentioned in either of these options\n\n\t\t\t\t\t\tvar spec = (opts.tickSize && opts.tickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ||\n\t\t\t\t\t\t\t(opts.minTickSize && opts.minTickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ? specQuarters : specMonths;\n\n\t\t\t\t\t\tif (opts.minTickSize != null) {\n\t\t\t\t\t\t\tif (typeof opts.tickSize == \"number\") {\n\t\t\t\t\t\t\t\tminSize = opts.tickSize;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tminSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var i = 0; i < spec.length - 1; ++i) {\n\t\t\t\t\t\t\tif (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]]\n\t\t\t\t\t\t\t\t\t\t\t  + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2\n\t\t\t\t\t\t\t\t&& spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = spec[i][0];\n\t\t\t\t\t\tvar unit = spec[i][1];\n\n\t\t\t\t\t\t// special-case the possibility of several years\n\n\t\t\t\t\t\tif (unit == \"year\") {\n\n\t\t\t\t\t\t\t// if given a minTickSize in years, just use it,\n\t\t\t\t\t\t\t// ensuring that it's an integer\n\n\t\t\t\t\t\t\tif (opts.minTickSize != null && opts.minTickSize[1] == \"year\") {\n\t\t\t\t\t\t\t\tsize = Math.floor(opts.minTickSize[0]);\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\n\t\t\t\t\t\t\t\tvar norm = (axis.delta / timeUnitSize.year) / magn;\n\n\t\t\t\t\t\t\t\tif (norm < 1.5) {\n\t\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t\t} else if (norm < 3) {\n\t\t\t\t\t\t\t\t\tsize = 2;\n\t\t\t\t\t\t\t\t} else if (norm < 7.5) {\n\t\t\t\t\t\t\t\t\tsize = 5;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsize = 10;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsize *= magn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// minimum size for years is 1\n\n\t\t\t\t\t\t\tif (size < 1) {\n\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taxis.tickSize = opts.tickSize || [size, unit];\n\t\t\t\t\t\tvar tickSize = axis.tickSize[0];\n\t\t\t\t\t\tunit = axis.tickSize[1];\n\n\t\t\t\t\t\tvar step = tickSize * timeUnitSize[unit];\n\n\t\t\t\t\t\tif (unit == \"second\") {\n\t\t\t\t\t\t\td.setSeconds(floorInBase(d.getSeconds(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"minute\") {\n\t\t\t\t\t\t\td.setMinutes(floorInBase(d.getMinutes(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"hour\") {\n\t\t\t\t\t\t\td.setHours(floorInBase(d.getHours(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"month\") {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"quarter\") {\n\t\t\t\t\t\t\td.setMonth(3 * floorInBase(d.getMonth() / 3,\n\t\t\t\t\t\t\t\ttickSize));\n\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\td.setFullYear(floorInBase(d.getFullYear(), tickSize));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reset smaller components\n\n\t\t\t\t\t\td.setMilliseconds(0);\n\n\t\t\t\t\t\tif (step >= timeUnitSize.minute) {\n\t\t\t\t\t\t\td.setSeconds(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.hour) {\n\t\t\t\t\t\t\td.setMinutes(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day) {\n\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day * 4) {\n\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.month * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 3));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.quarter * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 6));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.year) {\n\t\t\t\t\t\t\td.setMonth(0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar carry = 0;\n\t\t\t\t\t\tvar v = Number.NaN;\n\t\t\t\t\t\tvar prev;\n\n\t\t\t\t\t\tdo {\n\n\t\t\t\t\t\t\tprev = v;\n\t\t\t\t\t\t\tv = d.getTime();\n\t\t\t\t\t\t\tticks.push(v);\n\n\t\t\t\t\t\t\tif (unit == \"month\" || unit == \"quarter\") {\n\t\t\t\t\t\t\t\tif (tickSize < 1) {\n\n\t\t\t\t\t\t\t\t\t// a bit complicated - we'll divide the\n\t\t\t\t\t\t\t\t\t// month/quarter up but we need to take\n\t\t\t\t\t\t\t\t\t// care of fractions so we don't end up in\n\t\t\t\t\t\t\t\t\t// the middle of a day\n\n\t\t\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t\t\t\tvar start = d.getTime();\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\t(unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t\tvar end = d.getTime();\n\t\t\t\t\t\t\t\t\td.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n\t\t\t\t\t\t\t\t\tcarry = d.getHours();\n\t\t\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\ttickSize * (unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\t\td.setFullYear(d.getFullYear() + tickSize);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\td.setTime(v + step);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (v < axis.max && v != prev);\n\n\t\t\t\t\t\treturn ticks;\n\t\t\t\t\t};\n\n\t\t\t\t\taxis.tickFormatter = function (v, axis) {\n\n\t\t\t\t\t\tvar d = dateGenerator(v, axis.options);\n\n\t\t\t\t\t\t// first check global format\n\n\t\t\t\t\t\tif (opts.timeformat != null) {\n\t\t\t\t\t\t\treturn formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// possibly use quarters if quarters are mentioned in\n\t\t\t\t\t\t// any of these places\n\n\t\t\t\t\t\tvar useQuarters = (axis.options.tickSize &&\n\t\t\t\t\t\t\t\taxis.options.tickSize[1] == \"quarter\") ||\n\t\t\t\t\t\t\t(axis.options.minTickSize &&\n\t\t\t\t\t\t\t\taxis.options.minTickSize[1] == \"quarter\");\n\n\t\t\t\t\t\tvar t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n\t\t\t\t\t\tvar span = axis.max - axis.min;\n\t\t\t\t\t\tvar suffix = (opts.twelveHourClock) ? \" %p\" : \"\";\n\t\t\t\t\t\tvar hourCode = (opts.twelveHourClock) ? \"%I\" : \"%H\";\n\t\t\t\t\t\tvar fmt;\n\n\t\t\t\t\t\tif (t < timeUnitSize.minute) {\n\t\t\t\t\t\t\tfmt = hourCode + \":%M:%S\" + suffix;\n\t\t\t\t\t\t} else if (t < timeUnitSize.day) {\n\t\t\t\t\t\t\tif (span < 2 * timeUnitSize.day) {\n\t\t\t\t\t\t\t\tfmt = hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %d \" + hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (t < timeUnitSize.month) {\n\t\t\t\t\t\t\tfmt = \"%b %d\";\n\t\t\t\t\t\t} else if ((useQuarters && t < timeUnitSize.quarter) ||\n\t\t\t\t\t\t\t(!useQuarters && t < timeUnitSize.year)) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"%b\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (useQuarters && t < timeUnitSize.year) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"Q%q\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"Q%q %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfmt = \"%Y\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\n\t\t\t\t\t\treturn rt;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t$.plot.plugins.push({\n\t\tinit: init,\n\t\toptions: options,\n\t\tname: 'time',\n\t\tversion: '1.0'\n\t});\n\n\t// Time-axis support used to be in Flot core, which exposed the\n\t// formatDate function on the plot object.  Various plugins depend\n\t// on the function, so we need to re-expose it here.\n\n\t$.plot.formatDate = formatDate;\n\t$.plot.dateGenerator = dateGenerator;\n\n})(jQuery);\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 11888
        },
        "cache": {},
        "timings": {
          "blocked": 2.33899988234043,
          "dns": -1,
          "connect": -1,
          "send": 0.08099991828203024,
          "wait": 2412.9430002067274,
          "receive": 5791.345999808978,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.168Z",
        "time": 14755.745999980718,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.blog.st-hatena.com/js/texts-en.js%3Fversion=fa02f876e1143d1a11be707cd2bf96c0baa4df31&env=production",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"0-4d22\""
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "19746"
            }
          ],
          "cookies": [],
          "content": {
            "size": 19746,
            "mimeType": "text/plain",
            "text": "if (!window.Hatena) window.Hatena = {};\nif (!Hatena.Epic) Hatena.Epic = {};\nif (!Hatena.Epic.Locale) Hatena.Epic.Locale = {};\nif (!Hatena.Epic.Locale.Data) Hatena.Epic.Locale.Data = {};\nif (!Hatena.Epic.Locale.Data.Text) Hatena.Epic.Locale.Data.Text = {};\nHatena.Locale.project = 'Epic';\nHatena.Locale.reloadIfWrongLocale();\nHatena.Epic.Locale.Data.Text['en'] = {\"a.hatena.ne.jp\":{\"value\":\"Hatena Antenna\"},\"admin.blog.config.comment.add_refused_ips.note\":{\"value\":\"\\u30b2\\u30b9\\u30c8\\u306e\\u30b3\\u30e1\\u30f3\\u30c8\\u3092\\u62d2\\u5426\\u3057\\u305f\\u3044\\u5834\\u5408\\u306fIP\\u30a2\\u30c9\\u30ec\\u30b9\\u3092\\u5165\\u529b\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002IP\\u30a2\\u30c9\\u30ec\\u30b9\\u306f\\u30b3\\u30e1\\u30f3\\u30c8\\u7ba1\\u7406\\u753b\\u9762\\u3067\\u78ba\\u8a8d\\u3067\\u304d\\u307e\\u3059\\u3002\"},\"admin.blog.config.comment.add_refused_ips.note.comment_permission\":{\"value\":\"\\u30b2\\u30b9\\u30c8\\u306e\\u30b3\\u30e1\\u30f3\\u30c8\\u3092\\u3059\\u3079\\u3066\\u62d2\\u5426\\u3059\\u308b\\u306b\\u306f\\u3001\\u30b3\\u30e1\\u30f3\\u30c8\\u8a2d\\u5b9a\\u3067\\u30b3\\u30e1\\u30f3\\u30c8\\u8a31\\u53ef\\u3092\\u300c\\u30e6\\u30fc\\u30b6\\u30fc\\u300d\\u306b\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\"},\"admin.blog.config.comment.refused_ip.added\":{\"value\":\"Comments are now blocked from this ip address.\"},\"admin.blog.config.comment.refused_ip.not_found\":{\"value\":\"Comments are now blocked from this ip.\"},\"admin.blog.config.comment.refused_ip.removed\":{\"value\":\"Comments are now allowed from this ip address.\"},\"admin.blog.config.entry_ogimage.description\":{\"value\":\"You can set default og:image of entries.\"},\"admin.blog.config.image_upload_failure\":{\"value\":\"Your upload failed. Please try uploading again.\"},\"admin.blog.config.refused_ips\":{\"value\":\"Refused IP addresses\"},\"admin.blog.config.refused_ips.empty\":{\"value\":\"Empty\"},\"admin.blog.config.refused_users\":{\"value\":\"Comment refused users\"},\"admin.blog.config.refused_users.empty\":{\"value\":\"Empty\"},\"admin.blog.welcome_message\":{\"value\":\"Welcome to Hatena Blog!\"},\"admin.comments.delete.confirm\":{\"value\":\"Delete checked comments. Are you sure?\"},\"admin.design.module_setting_badvalue\":{\"value\":\"Please enter a valid value.\"},\"admin.design.preview_entry_page\":{\"value\":\"Preview Entry Page\"},\"admin.design.quit_preview_entry_page\":{\"value\":\"Quit preview entry page\"},\"admin.design.stop_header_image_confirm\":{\"value\":\"This image will be removed. Are you sure?\"},\"admin.image-upload-notice\":{\"value\":\"Images will be uploaded to Hatena Fotolife\"},\"admin.import.undo.confirm\":{\"value\":\"This import will be undone. Are you sure?\"},\"admin.odai.delete_odai.confirm\":{\"args\":[1,2],\"value\":\"Are you sure to delete odai \\\"%s\\\" (%s) ?\"},\"admin.odai.delete_odai.confirm %1%2\":{\"args\":[1,2],\"value\":\"Are you sure to delete odai \\\"%s\\\" (%s) ?\"},\"admin.odai.delete_odai.confirm [_1][_2]\":{\"args\":[1,2],\"value\":\"Are you sure to delete odai \\\"%s\\\" (%s) ?\"},\"admin.odai.fillin\":{\"args\":[1],\"value\":\"Odai\\u300c%s\\u300d\"},\"admin.odai.fillin %1\":{\"args\":[1],\"value\":\"Odai\\u300c%s\\u300d\"},\"admin.odai.fillin [_1]\":{\"args\":[1],\"value\":\"Odai\\u300c%s\\u300d\"},\"admin.odai.insert\":{\"value\":\"Insert this odai\"},\"admin.odai.leave_slot\":{\"value\":\"Back to promotions page\"},\"admin.odai.odai_slot\":{\"value\":\"Odai Slot\"},\"admin.odai.open_slot\":{\"value\":\"Open Odai Slot\"},\"admin.odai.slot_description\":{\"value\":\"[\\\"\\u21bb\\u30dc\\u30bf\\u30f3\\u3092\\u62bc\\u3059\\u3068\\u3001\\u30e9\\u30f3\\u30c0\\u30e0\\u306b\\u304a\\u984c\\u306e\\u30ad\\u30fc\\u30ef\\u30fc\\u30c9\\u3092\\u8868\\u793a\\u3057\\u307e\\u3059\\u3002\\\",\\n\\\"\\u66f8\\u304d\\u305f\\u3044\\u8a71\\u984c\\u3092\\u898b\\u3064\\u3051\\u305f\\u3089\\u300c\\u3053\\u306e\\u304a\\u984c\\u3067\\u66f8\\u304f\\u300d\\u30dc\\u30bf\\u30f3\\u3092\\u30af\\u30ea\\u30c3\\u30af\\u3002\\\"]\"},\"admin.odai.slot_description_1\":{\"value\":\"<i class=\\\"blogicon-repeat\\\"></i>\\u3092\\u30af\\u30ea\\u30c3\\u30af\\u3059\\u308b\\u305f\\u3073\\u306b\\u3001\\u304a\\u984c\\u306e\\u30ad\\u30fc\\u30ef\\u30fc\\u30c9\\u304c\\u5909\\u308f\\u308a\\u307e\\u3059\\u3002\"},\"admin.odai.slot_description_2\":{\"value\":\"\\u66f8\\u304d\\u305f\\u3044\\u8a71\\u984c\\u304c\\u898b\\u3064\\u304b\\u3063\\u305f\\u3089\\u300c\\u304a\\u984c\\u306e\\u8a18\\u4e8b\\u3092\\u66f8\\u304f\\u300d\\u3092\\u30af\\u30ea\\u30c3\\u30af\\u3002\"},\"admin.odai.slot_description_foot\":{\"value\":\"\\u203b\\u8a18\\u4e8b\\u4e2d\\u306e\\u304a\\u984c\\u30ad\\u30fc\\u30ef\\u30fc\\u30c9\\u3092\\u30af\\u30ea\\u30c3\\u30af\\u3059\\u308b\\u3068\\u3001\\u4ed6\\u306e\\u6295\\u7a3f\\u3092\\u4e00\\u89a7\\u3067\\u304d\\u307e\\u3059\\u3002\\n\"},\"admin.odai.slot_description_head\":{\"value\":\"\\u30b9\\u30ed\\u30c3\\u30c8\\u3092\\u56de\\u3057\\u3066\\u30d6\\u30ed\\u30b0\\u3092\\u66f8\\u3053\\u3046\\uff01<br>\\n\\u65b0\\u3057\\u3044\\u8a71\\u984c\\u3092\\u63a2\\u3057\\u3066\\u307f\\u307e\\u305b\\u3093\\u304b\\uff1f\"},\"admin.odai.turn\":{\"value\":\"Turn the slot\"},\"admin.paint\":{\"value\":\"Draw picture\"},\"admin.profile_edit\":{\"value\":\"Edit\"},\"admin.upload_image\":{\"value\":\"Upload Photo\"},\"album.hatena\":{\"value\":\"Hatena Album\"},\"b.hatena.ne.jp\":{\"value\":\"Hatena Bookmark\"},\"backup.clear_restore\":{\"value\":\"Clear\"},\"backup.notice\":{\"args\":[1],\"value\":\"Backup (%s) exists.\"},\"backup.notice %1\":{\"args\":[1],\"value\":\"Backup (%s) exists.\"},\"backup.notice [_1]\":{\"args\":[1],\"value\":\"Backup (%s) exists.\"},\"backup.notice.ask_restore\":{\"args\":[1],\"value\":\"Backup (%s) exists. Restore it?\"},\"backup.notice.ask_restore %1\":{\"args\":[1],\"value\":\"Backup (%s) exists. Restore it?\"},\"backup.notice.ask_restore [_1]\":{\"args\":[1],\"value\":\"Backup (%s) exists. Restore it?\"},\"backup.notice.auto_restored\":{\"args\":[1],\"value\":\"Backup(%s) is inserted\"},\"backup.notice.auto_restored %1\":{\"args\":[1],\"value\":\"Backup(%s) is inserted\"},\"backup.notice.auto_restored [_1]\":{\"args\":[1],\"value\":\"Backup(%s) is inserted\"},\"backup.restore\":{\"value\":\"Restore\"},\"blog.admin.edit-sidebar-module\":{\"value\":\"Edit module\\n\"},\"blog.category\":{\"value\":\"Category\"},\"blog.category.unavailable\":{\"value\":\"\\u30da\\u30fc\\u30b8\\u7de8\\u96c6\\u3067\\u306f\\u5229\\u7528\\u3067\\u304d\\u307e\\u305b\\u3093\\u3002\"},\"blog.confirm.delete\":{\"value\":\"Are you sure that you want to delete this?\"},\"blog.custom_url\":{\"value\":\"Custom URL\"},\"blog.datetime\":{\"value\":\"Date/time posted\"},\"blog.editform.label.socialize_on_post\":{\"value\":\"Share\"},\"blog.errors.body.long\":{\"value\":\"Body too long\"},\"blog.hatena.ne.jp\":{\"value\":\"Hatena Blog\"},\"blog.module.antenna\":{\"value\":\"Antenna\"},\"blog.module.archive\":{\"value\":\"Archive\"},\"blog.module.category\":{\"value\":\"Category\"},\"blog.module.circles\":{\"value\":\"Groups joined\"},\"blog.module.html\":{\"value\":\"HTML\"},\"blog.module.link\":{\"value\":\"Links\"},\"blog.module.profile\":{\"value\":\"Profile\"},\"blog.module.recent_comments\":{\"value\":\"Recent comments\"},\"blog.module.recent_entries\":{\"value\":\"Recent Entries\"},\"blog.module.search\":{\"value\":\"Search\"},\"blog.og_image\":{\"value\":\"post thumbnail\"},\"blog.posted\":{\"value\":\"Posted to Hatena Blog\"},\"blog.social.service.name.haiku\":{\"value\":\"\\u306f\\u3066\\u306a\\u30cf\\u30a4\\u30af\"},\"blog.social.service.name.mixi\":{\"value\":\"mixi\"},\"blog.social.service.name.twitter\":{\"value\":\"Twitter\"},\"blog.social.share.confirm\":{\"args\":[1],\"value\":\"%s\\u306b\\u30b7\\u30a7\\u30a2\\u3057\\u307e\\u3059\\u304b\\uff1f\"},\"blog.social.share.confirm %1\":{\"args\":[1],\"value\":\"%s\\u306b\\u30b7\\u30a7\\u30a2\\u3057\\u307e\\u3059\\u304b\\uff1f\"},\"blog.social.share.confirm [_1]\":{\"args\":[1],\"value\":\"%s\\u306b\\u30b7\\u30a7\\u30a2\\u3057\\u307e\\u3059\\u304b\\uff1f\"},\"blog.social.share.success\":{\"args\":[1],\"value\":\"%s\\u3078\\u306e\\u30b7\\u30a7\\u30a2\\u304c\\u5b8c\\u4e86\\u3057\\u307e\\u3057\\u305f\\u3002\"},\"blog.social.share.success %1\":{\"args\":[1],\"value\":\"%s\\u3078\\u306e\\u30b7\\u30a7\\u30a2\\u304c\\u5b8c\\u4e86\\u3057\\u307e\\u3057\\u305f\\u3002\"},\"blog.social.share.success [_1]\":{\"args\":[1],\"value\":\"%s\\u3078\\u306e\\u30b7\\u30a7\\u30a2\\u304c\\u5b8c\\u4e86\\u3057\\u307e\\u3057\\u305f\\u3002\"},\"blog.social.twitter.default.message\":{\"value\":\"\\u306f\\u3066\\u306a\\u30d6\\u30ed\\u30b0\\u306b\\u6295\\u7a3f\\u3057\\u307e\\u3057\\u305f #\\u306f\\u3066\\u306a\\u30d6\\u30ed\\u30b0\"},\"blog.social_button.label.facebook\":{\"value\":\"Post to Facebook\"},\"blog.social_button.label.haiku\":{\"value\":\"Post to Hatena Haiku\"},\"blog.social_button.label.mixicheck\":{\"value\":\"Post to mixi\"},\"blog.social_button.label.twitter\":{\"value\":\"Post to Twitter\"},\"blog.title\":{\"value\":\"Title\"},\"blog.twitter.length.over.error\":{\"value\":\"\\u5165\\u529b\\u3067\\u304d\\u308b\\u6700\\u5927\\u6587\\u5b57\\u6570\\u3092\\u8d85\\u3048\\u3066\\u3044\\u307e\\u3059\"},\"c.hatena.ne.jp\":{\"value\":\"Hatena Coco\"},\"category.new\":{\"value\":\"New Category\"},\"category.new.prompt\":{\"value\":\"Enter category name.\"},\"category.none\":{\"value\":\"None\"},\"close\":{\"value\":\"Close\"},\"comment.delete.messages.confirm\":{\"value\":\"This comment will be deleted. Are you sure?\"},\"counter.hatena.ne.jp\":{\"value\":\"Hatena Counter\"},\"create_category\":{\"value\":\"Create a new category\"},\"d.hatena.ne.jp\":{\"value\":\"Hatena Diary\"},\"datetime.ago\":{\"args\":[1],\"value\":\"%s ago\"},\"datetime.ago %1\":{\"args\":[1],\"value\":\"%s ago\"},\"datetime.ago [_1]\":{\"args\":[1],\"value\":\"%s ago\"},\"datetime.later\":{\"args\":[1],\"value\":\"%s later\"},\"datetime.later %1\":{\"args\":[1],\"value\":\"%s later\"},\"datetime.later [_1]\":{\"args\":[1],\"value\":\"%s later\"},\"datetime.update_preview\":{\"value\":\"Update preview\"},\"days_n\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s days\",\"value_1\":\"%s day\"},\"days_n %1\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s days\",\"value_1\":\"%s day\"},\"days_n [_1]\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s days\",\"value_1\":\"%s day\"},\"done\":{\"value\":\"Done\"},\"e.hatena.ne.jp\":{\"value\":\"Hatena Blog\"},\"edit\":{\"value\":\"Edit\"},\"edit_form.advanced_title.og_title\":{\"value\":\"og:title\"},\"edit_form.advanced_title.page_title\":{\"value\":\"Page Title\"},\"edit_form.advanced_title.settings\":{\"value\":\"Advanced Title Settings\"},\"edit_form.archive\":{\"value\":\"Insert from old entries\"},\"edit_form.archive.not_found\":{\"value\":\"No entries found.\"},\"edit_form.archive.placeholder\":{\"value\":\"Enter keyword\"},\"edit_form.archive.searching\":{\"value\":\"Searching...\"},\"edit_form.body_length_exceeded_error\":{\"value\":\"Body is too long.\"},\"edit_form.category_description\":{\"value\":\"Enter category name or choose from category list.\"},\"edit_form.character_count_exceeded_error\":{\"args\":[1],\"value\":\"Your entry cannot be posted because it exceeds %s characters.\"},\"edit_form.character_count_exceeded_error %1\":{\"args\":[1],\"value\":\"Your entry cannot be posted because it exceeds %s characters.\"},\"edit_form.character_count_exceeded_error [_1]\":{\"args\":[1],\"value\":\"Your entry cannot be posted because it exceeds %s characters.\"},\"edit_form.character_count_unit\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s characters\",\"value_1\":\"%s character\"},\"edit_form.character_count_unit %1\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s characters\",\"value_1\":\"%s character\"},\"edit_form.character_count_unit [_1]\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s characters\",\"value_1\":\"%s character\"},\"edit_form.colorpicker.cancel\":{\"value\":\"Reset\"},\"edit_form.customurl_description\":{\"args\":[1],\"value\":\"Change the URL from %sentry/ to one of your preference.\"},\"edit_form.customurl_description %1\":{\"args\":[1],\"value\":\"Change the URL from %sentry/ to one of your preference.\"},\"edit_form.customurl_description [_1]\":{\"args\":[1],\"value\":\"Change the URL from %sentry/ to one of your preference.\"},\"edit_form.datetime_description\":{\"value\":\"Edit the posting date/time of your entry\"},\"edit_form.editor_option\":{\"value\":\"Editing options\"},\"edit_form.empty_items\":{\"value\":\"not found\"},\"edit_form.flickr\":{\"value\":\"Insert Flickr images\"},\"edit_form.flickr.description\":{\"value\":\"Search and insert Creative Commons licensed images on Flickr.\"},\"edit_form.flickr.photostream\":{\"value\":\"Photostream\"},\"edit_form.flickr.photostream.description\":{\"value\":\"Enter Flickr screen name to load your photos.\"},\"edit_form.flickr.placeholder\":{\"value\":\"Enter keyword\"},\"edit_form.flickr.register\":{\"value\":\"Link account\"},\"edit_form.flickr.screen_name\":{\"value\":\"Flickr screen name\"},\"edit_form.flickr.search\":{\"value\":\"Search\"},\"edit_form.flickr.search.description\":{\"value\":\"Search and insert Creative Commons licensed images on Flickr.\"},\"edit_form.flickr.user_name\":{\"value\":\"Flickr user name\"},\"edit_form.footnote_message\":{\"value\":\"Write footnote here\"},\"edit_form.gist\":{\"value\":\"Insert Gist\"},\"edit_form.gist.description\":{\"value\":\"Enter GitHub User name to search Gists.\"},\"edit_form.gist.user_name\":{\"value\":\"GitHub user name\"},\"edit_form.loading\":{\"value\":\"Loading...\"},\"edit_form.og_description\":{\"value\":\"You can specify post description in this entry.\"},\"edit_form.og_description.label\":{\"value\":\"post description\"},\"edit_form.og_description.placeholder\":{\"value\":\"\\u6982\\u8981\"},\"edit_form.og_image_description\":{\"value\":\"You can choose post thumbnail from images in the entry.\"},\"edit_form.paste\":{\"value\":\"Insert selected items\"},\"edit_form.pikaday.months\":{\"value\":\"Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec\"},\"edit_form.pikaday.next_month\":{\"value\":\"Next month\"},\"edit_form.pikaday.previous_month\":{\"value\":\"Previous month\"},\"edit_form.pikaday.weekdays\":{\"value\":\"Sumday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday\"},\"edit_form.pikaday.weekdays_short\":{\"value\":\"Sun,Mon,Tue,Wed,Thu,Fri,Sat\"},\"edit_form.pikaday.year_suffix\":{\"value\":\"\\u5e74\"},\"edit_form.publish_soon\":{\"value\":\"\\u3059\\u3050\\u306b\\u516c\\u958b\\u3059\\u308b\"},\"edit_form.rakuten\":{\"value\":\"Insert Rakuten Products\"},\"edit_form.rakuten.api_limit_exceeded\":{\"value\":\"Failed to load data. Please try again later.\"},\"edit_form.rakuten.description\":{\"value\":\"You can search items from Rakuten and insert links to your entry.\"},\"edit_form.rakuten.empty\":{\"args\":[1],\"value\":\"No items were found for keyword \\\"%s\\\".\"},\"edit_form.rakuten.empty %1\":{\"args\":[1],\"value\":\"No items were found for keyword \\\"%s\\\".\"},\"edit_form.rakuten.empty [_1]\":{\"args\":[1],\"value\":\"No items were found for keyword \\\"%s\\\".\"},\"edit_form.rakuten.placeholder\":{\"value\":\"Input keyword\"},\"edit_form.rakuten.price\":{\"value\":\"Price: %1 yen\"},\"edit_form.schedule_coming_entry\":{\"value\":\"\\u672a\\u6765\\u306e\\u65e5\\u6642\\u3092\\u9078\\u629e\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\"},\"edit_form.schedule_this_entry\":{\"value\":\"Schedule a post for the specified date/time\"},\"edit_form.toolbar.button_hide\":{\"value\":\"Open / Close\"},\"edit_form.toolbar.button_more\":{\"value\":\"Open / Close\"},\"edit_form.toolbar.insertTOC\":{\"value\":\"Table of contents\"},\"edit_form.url_description\":{\"args\":[1],\"value\":\"Change the URL from %s to one of your preference.\"},\"edit_form.url_description %1\":{\"args\":[1],\"value\":\"Change the URL from %s to one of your preference.\"},\"edit_form.url_description [_1]\":{\"args\":[1],\"value\":\"Change the URL from %s to one of your preference.\"},\"edit_tab\":{\"value\":\"Edit Tabs\"},\"epic.confirm_subscribe\":{\"args\":[1,2],\"value\":\"Subscribe \\\"%s\\\" (%s) ?\"},\"epic.confirm_subscribe %1%2\":{\"args\":[1,2],\"value\":\"Subscribe \\\"%s\\\" (%s) ?\"},\"epic.confirm_subscribe [_1][_2]\":{\"args\":[1,2],\"value\":\"Subscribe \\\"%s\\\" (%s) ?\"},\"epic.confirm_unsubscribe\":{\"args\":[1,2],\"value\":\"Unsubscribe \\\"%s\\\" (%s)?\"},\"epic.confirm_unsubscribe %1%2\":{\"args\":[1,2],\"value\":\"Unsubscribe \\\"%s\\\" (%s)?\"},\"epic.confirm_unsubscribe [_1][_2]\":{\"args\":[1,2],\"value\":\"Unsubscribe \\\"%s\\\" (%s)?\"},\"epic.delete.confirm\":{\"value\":\"This will now be deleted. Are you sure you want to continue?\"},\"epic.delete.confirm.category\":{\"value\":\"This category will now be deleted. Are you sure you want to continue?\"},\"epic.editarea.hover\":{\"value\":\"Drop image files here\"},\"epic.entry.delete.confirm\":{\"value\":\"This will now be deleted. Are you sure you want to continue?\"},\"epic.more\":{\"value\":\"Read more\"},\"epic.subscribe\":{\"value\":\"Subscribe\"},\"epic.subscriber_count\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s\",\"value_1\":\"%s\"},\"epic.subscriber_count %1\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s\",\"value_1\":\"%s\"},\"epic.subscriber_count [_1]\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s\",\"value_1\":\"%s\"},\"epic.subscribing\":{\"value\":\"Subscribed\"},\"epic.syntax_switch\":{\"value\":\"Body and title will be deleted after syntax switching, and you can't undo this operation.\\n\\nAre you sure to switch the editing mode ? \\n\"},\"f.hatena.ne.jp\":{\"value\":\"Hatena Fotolife\"},\"form.confirm.changed\":{\"value\":\"Do you want to continue without saving?\"},\"form.confirm.changed.epic\":{\"value\":\"Do you want to continue without saving?\"},\"fotolife.folder.top\":{\"value\":\"Top\"},\"g.hatena.ne.jp\":{\"value\":\"Hatena Group\"},\"global.confirm\":{\"value\":\"Are you sure?\"},\"global.done\":{\"value\":\"Done\"},\"global.message.deleted\":{\"value\":\"Deleted\"},\"go_to_settings\":{\"value\":\"External Service Settings\"},\"h.hatena.ne.jp\":{\"value\":\"Hatena Haiku\"},\"help\":{\"value\":\"Help\"},\"hours_n\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s hours\",\"value_1\":\"%s hour\"},\"hours_n %1\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s hours\",\"value_1\":\"%s hour\"},\"hours_n [_1]\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s hours\",\"value_1\":\"%s hour\"},\"i.hatena.ne.jp\":{\"value\":\"Hatena Idea\"},\"k.hatena.ne.jp\":{\"value\":\"Hatena Keyword\"},\"l.hatena.ne.jp\":{\"value\":\"Hatena Land\"},\"lang\":{\"value\":\"Language\"},\"lang.en.native\":{\"value\":\"English\"},\"lang.ja.native\":{\"value\":\"\\u65e5\\u672c\\u8a9e\"},\"list.more\":{\"value\":\"See more\"},\"loading\":{\"value\":\"Loading\\u2026\"},\"logout\":{\"value\":\"Logout\"},\"m.hatena.ne.jp\":{\"value\":\"Hatena Message\"},\"minutes_n\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s minutes\",\"value_1\":\"%s minute\"},\"minutes_n %1\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s minutes\",\"value_1\":\"%s minute\"},\"minutes_n [_1]\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s minutes\",\"value_1\":\"%s minute\"},\"mono.hatena.ne.jp\":{\"value\":\"Hatena Monolith\"},\"my_hatena\":{\"value\":\"My Hatena\"},\"n.hatena.ne.jp\":{\"value\":\"Hatena\"},\"notices\":{\"value\":\"Notices\"},\"pager.page_num\":{\"args\":[1],\"value\":\"Page %s\"},\"pager.page_num %1\":{\"args\":[1],\"value\":\"Page %s\"},\"pager.page_num [_1]\":{\"args\":[1],\"value\":\"Page %s\"},\"placeholder.ip_address\":{\"value\":\"IP Address\"},\"plural_entries\":{\"value\":\"entries\"},\"plural_entry\":{\"value\":\"entries\"},\"preview\":{\"value\":\"Preview\"},\"profile\":{\"value\":\"Profile\"},\"profile.change\":{\"value\":\"Change\"},\"profile.image.change\":{\"value\":\"Change your profile image\"},\"publication.layout\":{\"value\":\"\\u30ec\\u30a4\\u30a2\\u30a6\\u30c8\"},\"publication.layout.description\":{\"value\":\"\\u30da\\u30fc\\u30b8\\u306e\\u30ec\\u30a4\\u30a2\\u30a6\\u30c8\\u3092\\u8a2d\\u5b9a\\u3067\\u304d\\u307e\\u3059\"},\"publication.layout.entry\":{\"value\":\"\\u8a18\\u4e8b\\u30ec\\u30a4\\u30a2\\u30a6\\u30c8\"},\"publication.layout.free\":{\"value\":\"\\u30d5\\u30ea\\u30fc\\u30ec\\u30a4\\u30a2\\u30a6\\u30c8\"},\"publication.layout.header_footer\":{\"value\":\"\\u30d8\\u30c3\\u30c0\\u30fb\\u30d5\\u30c3\\u30bf\\u30ec\\u30a4\\u30a2\\u30a6\\u30c8\"},\"q.hatena.ne.jp\":{\"value\":\"Hatena Question\"},\"r.hatena.ne.jp\":{\"value\":\"Hatena RSS\"},\"read_more_comments\":{\"value\":\"Read more\"},\"really_want_to_logout\":{\"value\":\"Do you really want to logout?\"},\"s.hatena.ne.jp\":{\"value\":\"Hatena Star\"},\"see_more\":{\"value\":\"Read more\"},\"services_in_use\":{\"value\":\"Services used\"},\"settings\":{\"value\":\"Settings\"},\"space.hatena.ne.jp\":{\"value\":\"Hatena Space\"},\"star-navigation-message\":{\"value\":\"If you liked this entry, push the star button to let the author know!\"},\"there_are_no_service_in_use\":{\"value\":\"No services in use\"},\"ugomemo.hatena.ne.jp\":{\"value\":\"Flipnote Hatena\"},\"uploading\":{\"value\":\"Uploading\"},\"user.config.profile.errors.check_type\":{\"value\":\"You can upload jpg, png, gif, and bmp images.\"},\"users_entry\":{\"args\":[1,2],\"value\":\"%s's %s\"},\"users_entry %1%2\":{\"args\":[1,2],\"value\":\"%s's %s\"},\"users_entry [_1][_2]\":{\"args\":[1,2],\"value\":\"%s's %s\"},\"years_n\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s years\",\"value_1\":\"%s year\"},\"years_n %1\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s years\",\"value_1\":\"%s year\"},\"years_n [_1]\":{\"args\":[1],\"args_1\":[1],\"quanttype\":\"1_o\",\"value\":\"%s years\",\"value_1\":\"%s year\"},\"youth.hatena\":{\"value\":\"Hatena\"}};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 19866
        },
        "cache": {},
        "timings": {
          "blocked": 1.87400006689131,
          "dns": -1,
          "connect": -1,
          "send": 0.03500003367663007,
          "wait": 2709.070999873802,
          "receive": 12044.766000006348,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:41.168Z",
        "time": 5929.3319999706,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/www.google.com/recaptcha/api.js",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 10:53:47 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f1b3b-2a6\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "application/javascript"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 678,
            "mimeType": "application/javascript",
            "text": "/* PLEASE DO NOT COPY AND PASTE THIS CODE. */(function() {if (!window['___grecaptcha_cfg']) { window['___grecaptcha_cfg'] = {}; };if (!window['___grecaptcha_cfg']['render']) { window['___grecaptcha_cfg']['render'] = 'onload'; };window['__google_recaptcha_client'] = true;var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;po.src = 'https://www.gstatic.com/recaptcha/api2/r20170126104253/recaptcha__en.js'; var elem = document.querySelector('script[nonce]');var nonce = elem && elem.getAttribute('nonce');if (nonce) { po.setAttribute('nonce', nonce); }var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);})();"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 558
        },
        "cache": {},
        "timings": {
          "blocked": 1.63300009444356,
          "dns": -1,
          "connect": -1,
          "send": 0.040999846532939976,
          "wait": 2446.7350000049937,
          "receive": 3480.92300002463,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:42.654Z",
        "time": 5415.072000119835,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/fonts.googleapis.com/css%3Ffamily=Open+Sans:300,400italic,400,600.css",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Tue, 31 Jan 2017 00:24:52 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588fd954-241c\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "text/css; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 9244,
            "mimeType": "text/css",
            "text": "/* cyrillic-ext */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 300;\n  src: local('Open Sans Light'), local('OpenSans-Light'), url(../fonts.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTa-j2U0lmluP9RWlSytm3ho.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+20B4, U+2DE0-2DFF, U+A640-A69F;\n}\n/* cyrillic */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 300;\n  src: local('Open Sans Light'), local('OpenSans-Light'), url(../fonts.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTZX5f-9o1vgP2EXwfjgl7AY.woff2) format('woff2');\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* greek-ext */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 300;\n  src: local('Open Sans Light'), local('OpenSans-Light'), url(../fonts.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTRWV49_lSm1NYrwo-zkhivY.woff2) format('woff2');\n  unicode-range: U+1F00-1FFF;\n}\n/* greek */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 300;\n  src: local('Open Sans Light'), local('OpenSans-Light'), url(../fonts.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTaaRobkAwv3vxw3jMhVENGA.woff2) format('woff2');\n  unicode-range: U+0370-03FF;\n}\n/* vietnamese */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 300;\n  src: local('Open Sans Light'), local('OpenSans-Light'), url(../fonts.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTf8zf_FOSsgRmwsS7Aa9k2w.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+1EA0-1EF9, U+20AB;\n}\n/* latin-ext */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 300;\n  src: local('Open Sans Light'), local('OpenSans-Light'), url(../fonts.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTT0LW-43aMEzIO6XUTLjad8.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 300;\n  src: local('Open Sans Light'), local('OpenSans-Light'), url(../fonts.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTegdm0LZdjqr5-oayXSOefg.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;\n}\n/* cyrillic-ext */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Open Sans'), local('OpenSans'), url(../fonts.gstatic.com/s/opensans/v13/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+20B4, U+2DE0-2DFF, U+A640-A69F;\n}\n/* cyrillic */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Open Sans'), local('OpenSans'), url(../fonts.gstatic.com/s/opensans/v13/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2) format('woff2');\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* greek-ext */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Open Sans'), local('OpenSans'), url(../fonts.gstatic.com/s/opensans/v13/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2) format('woff2');\n  unicode-range: U+1F00-1FFF;\n}\n/* greek */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Open Sans'), local('OpenSans'), url(../fonts.gstatic.com/s/opensans/v13/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2) format('woff2');\n  unicode-range: U+0370-03FF;\n}\n/* vietnamese */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Open Sans'), local('OpenSans'), url(../fonts.gstatic.com/s/opensans/v13/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+1EA0-1EF9, U+20AB;\n}\n/* latin-ext */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Open Sans'), local('OpenSans'), url(../fonts.gstatic.com/s/opensans/v13/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Open Sans'), local('OpenSans'), url(../fonts.gstatic.com/s/opensans/v13/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;\n}\n/* cyrillic-ext */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 600;\n  src: local('Open Sans Semibold'), local('OpenSans-Semibold'), url(../fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+20B4, U+2DE0-2DFF, U+A640-A69F;\n}\n/* cyrillic */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 600;\n  src: local('Open Sans Semibold'), local('OpenSans-Semibold'), url(../fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2) format('woff2');\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* greek-ext */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 600;\n  src: local('Open Sans Semibold'), local('OpenSans-Semibold'), url(../fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2) format('woff2');\n  unicode-range: U+1F00-1FFF;\n}\n/* greek */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 600;\n  src: local('Open Sans Semibold'), local('OpenSans-Semibold'), url(../fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2) format('woff2');\n  unicode-range: U+0370-03FF;\n}\n/* vietnamese */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 600;\n  src: local('Open Sans Semibold'), local('OpenSans-Semibold'), url(../fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+1EA0-1EF9, U+20AB;\n}\n/* latin-ext */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 600;\n  src: local('Open Sans Semibold'), local('OpenSans-Semibold'), url(../fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 600;\n  src: local('Open Sans Semibold'), local('OpenSans-Semibold'), url(../fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;\n}\n/* cyrillic-ext */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-weight: 400;\n  src: local('Open Sans Italic'), local('OpenSans-Italic'), url(../fonts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+20B4, U+2DE0-2DFF, U+A640-A69F;\n}\n/* cyrillic */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-weight: 400;\n  src: local('Open Sans Italic'), local('OpenSans-Italic'), url(../fonts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2) format('woff2');\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* greek-ext */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-weight: 400;\n  src: local('Open Sans Italic'), local('OpenSans-Italic'), url(../fonts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2) format('woff2');\n  unicode-range: U+1F00-1FFF;\n}\n/* greek */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-weight: 400;\n  src: local('Open Sans Italic'), local('OpenSans-Italic'), url(../fonts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2) format('woff2');\n  unicode-range: U+0370-03FF;\n}\n/* vietnamese */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-weight: 400;\n  src: local('Open Sans Italic'), local('OpenSans-Italic'), url(../fonts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+1EA0-1EF9, U+20AB;\n}\n/* latin-ext */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-weight: 400;\n  src: local('Open Sans Italic'), local('OpenSans-Italic'), url(../fonts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-weight: 400;\n  src: local('Open Sans Italic'), local('OpenSans-Italic'), url(../fonts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;\n}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 1256
        },
        "cache": {},
        "timings": {
          "blocked": 0.435000052675605,
          "dns": -1,
          "connect": -1,
          "send": 0.117999967187643,
          "wait": 1546.2899999693068,
          "receive": 3868.229000130665,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.086Z",
        "time": 5428.098999895155,
        "request": {
          "method": "GET",
          "url": "https://www.google-analytics.com/analytics.js",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/analytics.js"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": ":authority",
              "value": "www.google-analytics.com"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 404,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "date",
              "value": "Fri, 17 Feb 2017 18:59:51 GMT"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "status",
              "value": "404"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "20"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "text/plain",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 152,
          "_error": ""
        },
        "cache": {},
        "timings": {
          "blocked": 0.284999841824174,
          "dns": 0.0070000533014540345,
          "connect": 2859.9390001036245,
          "send": 0.1099999062698771,
          "wait": 2566.93700002506,
          "receive": 0.8209999650753161,
          "ssl": 1606.1510001309202
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "10251",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.092Z",
        "time": 1093.1540001183748,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.blog.st-hatena.com/images/common/logo-icon.svg%3Fversion=c570949326e4e1ec6f258179bb9985ce829d4d0c&env=production",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 304,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "status",
              "value": "304"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"0-246\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 582,
            "mimeType": "text/plain",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 582
        },
        "cache": {},
        "timings": {
          "blocked": 0.671999994665384,
          "dns": -1,
          "connect": -1,
          "send": 0.114000169560314,
          "wait": 1091.0979998297944,
          "receive": 1.2700001243547376,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.108Z",
        "time": 20450.370999984443,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/fonts.gstatic.com/s/opensans/v13/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/fonts.googleapis.com/css%3Ffamily=Open+Sans:300,400italic,400,600.css"
            },
            {
              "name": "Origin",
              "value": "https://web.hfelo.se"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 27 Apr 2015 23:46:39 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"553eca5f-3cd4\""
            },
            {
              "name": "content-type",
              "value": "application/octet-stream"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "15572"
            }
          ],
          "cookies": [],
          "content": {
            "size": 15572,
            "mimeType": "application/octet-stream",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 17050
        },
        "cache": {},
        "timings": {
          "blocked": 0.575999962165952,
          "dns": -1,
          "connect": -1,
          "send": 0.11999998241663001,
          "wait": 1264.7730000317074,
          "receive": 19184.902000008155,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.109Z",
        "time": 66874.89099986851,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/82c3ff925fecb84c7bc7324a4dcebfdfa130801a/backend=imagemagick%3Bheight=340%3Bversion=1%3Bwidth=600/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fk%252Fkanemotonomukuu%252F20170129%252F20170129212644.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:09 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d75-214e8\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "136424"
            }
          ],
          "cookies": [],
          "content": {
            "size": 136424,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 136565
        },
        "cache": {},
        "timings": {
          "blocked": 0.307000009343028,
          "dns": -1,
          "connect": -1,
          "send": 0.08099991828203201,
          "wait": 1329.0750000160149,
          "receive": 65545.42799992487,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.109Z",
        "time": 20191.209000069648,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/c0dedcf96d827b78874bdcd84fd2d738abaf2aaa/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Ff%252Ffirst1178%252F20170129%252F20170129165500.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:10 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d76-3ad7\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "15063"
            }
          ],
          "cookies": [],
          "content": {
            "size": 15063,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 15202
        },
        "cache": {},
        "timings": {
          "blocked": 0.674000009894371,
          "dns": -1,
          "connect": -1,
          "send": 0.08399994112551201,
          "wait": 1730.9330001007802,
          "receive": 18459.518000017848,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.109Z",
        "time": 94827.324999962,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/6186b71748327c268b58b32133915351669be533/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fx%252Fxin9le%252F20170130%252F20170130232536.png",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:12 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d78-48dae\""
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "298414"
            }
          ],
          "cookies": [],
          "content": {
            "size": 298414,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 302532
        },
        "cache": {},
        "timings": {
          "blocked": 0.468000071123242,
          "dns": -1,
          "connect": -1,
          "send": 0.07699988782405903,
          "wait": 1731.1279999557928,
          "receive": 93095.65200004727,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.191Z",
        "time": 21238.662000047043,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/fonts.googleapis.com/css%3Ffamily=Open+Sans:300,400italic,400,600.css"
            },
            {
              "name": "Origin",
              "value": "https://web.hfelo.se"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 27 Apr 2015 23:45:12 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"553eca08-3f24\""
            },
            {
              "name": "content-type",
              "value": "application/octet-stream"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "16164"
            }
          ],
          "cookies": [],
          "content": {
            "size": 16164,
            "mimeType": "application/octet-stream",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 16311
        },
        "cache": {},
        "timings": {
          "blocked": 0.367000000551343,
          "dns": -1,
          "connect": -1,
          "send": 0.084000173956156,
          "wait": 1572.6809999905524,
          "receive": 19665.529999881983,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.470Z",
        "time": 20960.16800007783,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/fonts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/fonts.googleapis.com/css%3Ffamily=Open+Sans:300,400italic,400,600.css"
            },
            {
              "name": "Origin",
              "value": "https://web.hfelo.se"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 27 Apr 2015 23:46:21 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"553eca4d-3a78\""
            },
            {
              "name": "content-type",
              "value": "application/octet-stream"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "content-length",
              "value": "14968"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 14968,
            "mimeType": "application/octet-stream",
            "text": "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",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 15115
        },
        "cache": {},
        "timings": {
          "blocked": 0.423000194132328,
          "dns": -1,
          "connect": -1,
          "send": 0.20399992354214197,
          "wait": 1865.1449999306355,
          "receive": 19094.39600002952,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.471Z",
        "time": 27509.895999915898,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.blog.st-hatena.com/fonts/public/blogicon/blogicon-regular.woff%3Fversion=e6c6301f8f411fe89573b16cc9a90fdfa73423b4",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/cdn.blog.st-hatena.com/css/service.css%3Fversion=82d341e0c0d884831642dfe4e418cbe57cdd8b8a&env=production.css"
            },
            {
              "name": "Origin",
              "value": "https://web.hfelo.se"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"0-57f0\""
            },
            {
              "name": "content-type",
              "value": "application/octet-stream"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "22512"
            }
          ],
          "cookies": [],
          "content": {
            "size": 22512,
            "mimeType": "application/octet-stream",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 23948
        },
        "cache": {},
        "timings": {
          "blocked": 0.51099993288517,
          "dns": -1,
          "connect": -1,
          "send": 0.10300008580088604,
          "wait": 2030.537999933584,
          "receive": 25478.743999963626,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.471Z",
        "time": 11538.464999990538,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/f8fb5b450467203d2c2007d70ebbb4c5c4a07c6a/backend=imagemagick%3Bheight=120%3Bversion=1%3Bwidth=120/http:%252F%252Fcdn.mogile.archive.st-hatena.com%252Fv1%252Fimage%252Fhatenablog%252F297787643751636513.gif",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:34 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d8e-1690\""
            },
            {
              "name": "content-type",
              "value": "image/gif"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "content-length",
              "value": "5776"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 5776,
            "mimeType": "image/gif",
            "text": "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",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 5913
        },
        "cache": {},
        "timings": {
          "blocked": 1.38300005346537,
          "dns": -1,
          "connect": -1,
          "send": 0.07499987259507002,
          "wait": 1616.1619999911595,
          "receive": 9920.845000073317,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.472Z",
        "time": 9919.412999879569,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/f1b1451ce360691afd61378a1a3a2e2633ce0131/backend=imagemagick%3Bheight=120%3Bversion=1%3Bwidth=120/https:%252F%252Fimages-fe.ssl-images-amazon.com%252Fimages%252FI%252F51sNsTOPv8L._SL160_.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:35 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d8f-fdd\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "content-length",
              "value": "4061"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4061,
            "mimeType": "image/jpeg",
            "text": "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",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 4199
        },
        "cache": {},
        "timings": {
          "blocked": 1.16899982094765,
          "dns": -1,
          "connect": -1,
          "send": 0.05899998359381997,
          "wait": 2029.1350001934886,
          "receive": 7889.0499998815385,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.472Z",
        "time": 9919.300999958068,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/88938f48ad84745514056a09b53a25aa196df03a/backend=imagemagick%3Bheight=120%3Bversion=1%3Bwidth=120/http:%252F%252Fcdn.mogile.archive.st-hatena.com%252Fv1%252Fimage%252Fhatenablog%252F297787643747682600.gif",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:36 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d90-1254\""
            },
            {
              "name": "content-type",
              "value": "image/gif"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "4692"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4692,
            "mimeType": "image/gif",
            "text": "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",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 4829
        },
        "cache": {},
        "timings": {
          "blocked": 2.23999982699752,
          "dns": -1,
          "connect": -1,
          "send": 0.06900005973875034,
          "wait": 2051.498000044374,
          "receive": 7865.494000026958,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.472Z",
        "time": 25875.83400006406,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/77ef5ac7a43c930519e362720fa43897713c87b9/backend=imagemagick%3Bheight=120%3Bversion=1%3Bwidth=120/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fh%252Fhatenablog%252F20170125%252F20170125180221.png",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:37 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d91-4dea\""
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "19946"
            }
          ],
          "cookies": [],
          "content": {
            "size": 19946,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 20084
        },
        "cache": {},
        "timings": {
          "blocked": 1.88200012780726,
          "dns": -1,
          "connect": -1,
          "send": 0.03999983891844994,
          "wait": 2241.054000100124,
          "receive": 23632.85799999721,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.473Z",
        "time": 2681.7699999082834,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.blog.st-hatena.com/images/top/serviceTop-startHatenablog-bg.jpg%3Fversion=118735b6fce0aad6c0702a2ac0534ba4ad4ecb95&%3Benv=production",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 404,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "status",
              "value": "404"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            }
          ],
          "cookies": [],
          "content": {
            "size": 14,
            "mimeType": "text/plain",
            "text": "404 Not Found\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 14
        },
        "cache": {},
        "timings": {
          "blocked": 3.22499987669289,
          "dns": -1,
          "connect": -1,
          "send": 0.04000007174909026,
          "wait": 2214.853000128638,
          "receive": 463.6519998312033,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.473Z",
        "time": 33393.74799979851,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/b6d39ae672721d7f6607e2f7cf5cac622cdf0d37/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/http:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fg%252Fgoodbyebluemonday23%252F20160124%252F20160124083835.png",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:28 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d88-7fcb\""
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "32715"
            }
          ],
          "cookies": [],
          "content": {
            "size": 32715,
            "mimeType": "image/png",
            "text": "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",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 32853
        },
        "cache": {},
        "timings": {
          "blocked": 3.0280000064522,
          "dns": -1,
          "connect": -1,
          "send": 0.03100000321864993,
          "wait": 2677.876999834549,
          "receive": 30712.811999954287,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.474Z",
        "time": 13388.764000032097,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/e52bc2ca1910d8e421dd3c9ef67a3ec018f54e08/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/http:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fc%252Fcruller%252F20160128%252F20160128214330.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:29 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d89-1dc5\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "7621"
            }
          ],
          "cookies": [],
          "content": {
            "size": 7621,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 7759
        },
        "cache": {},
        "timings": {
          "blocked": 2.78099998831749,
          "dns": -1,
          "connect": -1,
          "send": 0.02899998798966008,
          "wait": 2434.454999864103,
          "receive": 10951.499000191687,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.474Z",
        "time": 83926.75300012343,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/e20e2a91df334fc97cb1d01bd0d3593354f07e11/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/http:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fm%252Fmad_ochi%252F20160129%252F20160129111154.png",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:30 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d8a-382e9\""
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "230121"
            }
          ],
          "cookies": [],
          "content": {
            "size": 230121,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 231590
        },
        "cache": {},
        "timings": {
          "blocked": 3.34200006909668,
          "dns": -1,
          "connect": -1,
          "send": 0.03500003367663007,
          "wait": 2694.2809999454767,
          "receive": 81229.09500007518,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.474Z",
        "time": 17908.77900016494,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/a85cf4a611c7ed9cb2f4f68222cb17ae2a9e9c70/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fp%252Fpaiza%252F20170130%252F20170130135254.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:16 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d7c-2d2c\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "content-length",
              "value": "11564"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 11564,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 11703
        },
        "cache": {},
        "timings": {
          "blocked": 3.74300009571016,
          "dns": -1,
          "connect": -1,
          "send": 0.03500003367661986,
          "wait": 2237.5789999496233,
          "receive": 15667.422000085931,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.475Z",
        "time": 22091.766000026837,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/28260650b3e2e4a54ae6a7397531a6b342de1b43/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fimages-fe.ssl-images-amazon.com%252Fimages%252FI%252F51lqgv%252BWyxL._SL160_.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:18 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d7e-377c\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "14204"
            }
          ],
          "cookies": [],
          "content": {
            "size": 14204,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 14343
        },
        "cache": {},
        "timings": {
          "blocked": 3.50500014610589,
          "dns": -1,
          "connect": -1,
          "send": 0.02899998798966008,
          "wait": 3120.7590000703944,
          "receive": 18967.47299982235,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.475Z",
        "time": 15130.100999958813,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/f76edc61996caa63d3cb95890873ba9ebb895cec/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fimages-fe.ssl-images-amazon.com%252Fimages%252FI%252F51UuacnMrjL._SL160_.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:19 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d7f-1c80\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "7296"
            }
          ],
          "cookies": [],
          "content": {
            "size": 7296,
            "mimeType": "image/jpeg",
            "text": "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",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 7434
        },
        "cache": {},
        "timings": {
          "blocked": 3.8079998921603,
          "dns": -1,
          "connect": -1,
          "send": 0.03400002606213004,
          "wait": 3326.6650000587074,
          "receive": 11799.593999981884,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.475Z",
        "time": 38478.19099994376,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/9862b729e672030862d2591152a23211eaab09ab/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fh%252Fhozumi3081%252F20170130%252F20170130011755.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:19 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d7f-9f45\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "40773"
            }
          ],
          "cookies": [],
          "content": {
            "size": 40773,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 40912
        },
        "cache": {},
        "timings": {
          "blocked": 3.59499990008771,
          "dns": -1,
          "connect": -1,
          "send": 0.02899998798966985,
          "wait": 3256.288000149653,
          "receive": 35218.27899990603,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.476Z",
        "time": 20200.114000122994,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/b5662a96c87398a9b4f276f62089e14f888655a9/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fimages-fe.ssl-images-amazon.com%252Fimages%252FI%252F514uJA4ls-L._SL160_.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:20 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d80-31bd\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "12733"
            }
          ],
          "cookies": [],
          "content": {
            "size": 12733,
            "mimeType": "image/jpeg",
            "text": "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",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 14203
        },
        "cache": {},
        "timings": {
          "blocked": 3.3640000037849,
          "dns": -1,
          "connect": -1,
          "send": 0.029999995604150342,
          "wait": 3283.212000038471,
          "receive": 16913.508000085134,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.476Z",
        "time": 27617.54500004463,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/fab927269322762dfd5091a1250b92df02e62108/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fk%252Fkenmoja%252F20170130%252F20170130195649.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:21 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d81-58c0\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "22720"
            }
          ],
          "cookies": [],
          "content": {
            "size": 22720,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 22859
        },
        "cache": {},
        "timings": {
          "blocked": 3.11299995519221,
          "dns": -1,
          "connect": -1,
          "send": 0.02799998037516982,
          "wait": 3326.799000147733,
          "receive": 24287.604999961328,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.477Z",
        "time": 40545.293000061065,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/a148894bc77042a7c4ebbfe986e98162707863a2/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fm%252Fmkonohazuku%252F20170127%252F20170127174950.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:22 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d82-adfc\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "44540"
            }
          ],
          "cookies": [],
          "content": {
            "size": 44540,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 44679
        },
        "cache": {},
        "timings": {
          "blocked": 2.64799990691245,
          "dns": -1,
          "connect": -1,
          "send": 0.02899998798966008,
          "wait": 3120.1270001474777,
          "receive": 37422.489000018686,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.477Z",
        "time": 16860.206000041217,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/65ba4b252f66b33b87811881ace53241a33e4047/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Ffarm1.staticflickr.com%252F488%252F32209484840_8c7dfcbb41_b.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:24 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d84-21c6\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "8646"
            }
          ],
          "cookies": [],
          "content": {
            "size": 8646,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 11433
        },
        "cache": {},
        "timings": {
          "blocked": 2.43100011721253,
          "dns": -1,
          "connect": -1,
          "send": 0.026999972760680002,
          "wait": 3737.256999826057,
          "receive": 13120.491000125186,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.477Z",
        "time": 20363.009999971837,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/5cfebb299d35d1446d28a945a137711791deaa34/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Flh3.googleusercontent.com%252F-StaunoNz2yI%252FWI8r_Vdo1ZI%252FAAAAAAAAMZc%252FwTVikyFtZMAKaYBkvTHIAZJxEGqxpQHrQCE0%252Fs1024%252FIMG_1280.JPG",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:25 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d85-2dab\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "11691"
            }
          ],
          "cookies": [],
          "content": {
            "size": 11691,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 11830
        },
        "cache": {},
        "timings": {
          "blocked": 2.21500010229647,
          "dns": -1,
          "connect": -1,
          "send": 0.028999987989670295,
          "wait": 3377.862999914214,
          "receive": 16982.902999967337,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.477Z",
        "time": 37012.9639999941,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/18630b25ba5b9143ab1b14b64e7612c12446077e/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fk%252Fkyu_com%252F20170130%252F20170130180840.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:26 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d86-97d5\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "38869"
            }
          ],
          "cookies": [],
          "content": {
            "size": 38869,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 39008
        },
        "cache": {},
        "timings": {
          "blocked": 1.93200004287064,
          "dns": -1,
          "connect": -1,
          "send": 0.02899998798965986,
          "wait": 3737.6139999833,
          "receive": 33273.388999979936,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.478Z",
        "time": 28020.17100015655,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/dca8308ff52d5f0889b7d343ec82a860c518200b/backend=imagemagick%3Bheight=200%3Bversion=1%3Bwidth=200/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fo%252Fone00one%252F20170130%252F20170130122302.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:27 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d87-5c2c\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "content-length",
              "value": "23596"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            }
          ],
          "cookies": [],
          "content": {
            "size": 23596,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 23735
        },
        "cache": {},
        "timings": {
          "blocked": 1.72300008125603,
          "dns": -1,
          "connect": -1,
          "send": 0.02799998037517004,
          "wait": 3768.6300000641486,
          "receive": 24249.79000003077,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.478Z",
        "time": 42716.42499999143,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/21ebb879c64973d6ef8804a7ad06f91584fc607f/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252FR%252FRootport%252F20170128%252F20170128085740.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:13 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d79-c4f7\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "50423"
            }
          ],
          "cookies": [],
          "content": {
            "size": 50423,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 50562
        },
        "cache": {},
        "timings": {
          "blocked": 1.49499997496605,
          "dns": -1,
          "connect": -1,
          "send": 0.02899998798965986,
          "wait": 3769.007999915634,
          "receive": 38945.89300011284,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.478Z",
        "time": 67906.39099990949,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/0bf5e317bc334f0e5ee7f659ed40d15e1ac78ca4/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/https:%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fo%252Fookichi%252F20170130%252F20170130222626.png",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:14 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d7a-22477\""
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "140407"
            }
          ],
          "cookies": [],
          "content": {
            "size": 140407,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 140547
        },
        "cache": {},
        "timings": {
          "blocked": 1.1529999319464,
          "dns": -1,
          "connect": -1,
          "send": 0.02999999560415012,
          "wait": 3769.2640000022993,
          "receive": 64135.94399997964,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T18:59:48.479Z",
        "time": 15752.703999867663,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/cdn.image.st-hatena.com/image/square/e42c07ceb58306ef0f1d89b654bd1e42f4776038/backend=imagemagick%3Bheight=170%3Bversion=1%3Bwidth=300/https:%252F%252Fwww.instagram.com%252Fp%252FBO12KMtluRi%252Fmedia%252F",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 19:01:15 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588f8d7b-1bd9\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "alternate-protocol",
              "value": "443:quic"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "alt-svc",
              "value": "quic=\":443\"; ma=2592000; v=\"36,35,34\""
            },
            {
              "name": "content-length",
              "value": "7129"
            }
          ],
          "cookies": [],
          "content": {
            "size": 7129,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 7267
        },
        "cache": {},
        "timings": {
          "blocked": 0.934999901801348,
          "dns": -1,
          "connect": -1,
          "send": 0.02799998037517004,
          "wait": 3922.2790000494533,
          "receive": 11829.461999936033,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "pageref": "page_14"
      },
      {
        "startedDateTime": "2017-02-17T19:01:05.448Z",
        "time": 0,
        "request": {
          "method": "GET",
          "url": "https://platform.twitter.com/widgets.js",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/hatenablog.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 0,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "x-unknown"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 0,
          "_error": "net::ERR_CONNECTION_CLOSED"
        },
        "cache": {},
        "timings": {
          "blocked": -1,
          "dns": -1,
          "connect": -1,
          "send": 0,
          "wait": 0,
          "receive": 0,
          "ssl": -1
        },
        "serverIPAddress": "",
        "pageref": "page_14"
      }
    ]
  }
}