{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "WebInspector",
      "version": "537.36"
    },
    "pages": [
      {
        "startedDateTime": "2017-02-22T10:52:18.248Z",
        "id": "page_18",
        "title": "https://web.hfelo.se/flirt4free.com",
        "pageTimings": {
          "onContentLoad": null,
          "onLoad": null
        }
      }
    ],
    "entries": [
      {
        "startedDateTime": "2017-02-22T10:52:18.248Z",
        "time": 5389.54500015825,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/flirt4free.com",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/flirt4free.com"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "upgrade-insecure-requests",
              "value": "1"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": ":authority",
              "value": "web.hfelo.se"
            },
            {
              "name": "cookie",
              "value": "s_fid=5F0AC94433688EDD-34F86F3C8150A37D; s_nr=1487759249799-New; s_vnum=1488322800801%26vn%3D1; s_invisit=true; s_lv=1487759249803; s_lv_s=First%20Visit; s_cc=true; __unam=bdafff1-15a65691ebf-3ed91f61-1; fclo=1487760200439%2Cen-US%2C1%20DST"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [],
          "cookies": [
            {
              "name": "s_fid",
              "value": "5F0AC94433688EDD-34F86F3C8150A37D",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_nr",
              "value": "1487759249799-New",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_vnum",
              "value": "1488322800801%26vn%3D1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_invisit",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv",
              "value": "1487759249803",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv_s",
              "value": "First%20Visit",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_cc",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "__unam",
              "value": "bdafff1-15a65691ebf-3ed91f61-1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "fclo",
              "value": "1487760200439%2Cen-US%2C1%20DST",
              "expires": null,
              "httpOnly": false,
              "secure": false
            }
          ],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 301,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "status",
              "value": "301"
            },
            {
              "name": "date",
              "value": "Wed, 22 Feb 2017 10:52:21 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "content-length",
              "value": "51"
            },
            {
              "name": "location",
              "value": "/flirt4free.com/"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "text/html"
          },
          "redirectURL": "/flirt4free.com/",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 144
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 3376.88100012019,
          "send": 0.13699987904010413,
          "wait": 2011.7000001482597,
          "receive": 0.8270000107604574,
          "ssl": 2372.16799985617
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "9111",
        "pageref": "page_18"
      },
      {
        "startedDateTime": "2017-02-22T10:52:23.638Z",
        "time": 11505.517000099644,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/flirt4free.com/",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/flirt4free.com/"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "upgrade-insecure-requests",
              "value": "1"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": ":authority",
              "value": "web.hfelo.se"
            },
            {
              "name": "cookie",
              "value": "s_fid=5F0AC94433688EDD-34F86F3C8150A37D; s_nr=1487759249799-New; s_vnum=1488322800801%26vn%3D1; s_invisit=true; s_lv=1487759249803; s_lv_s=First%20Visit; s_cc=true; __unam=bdafff1-15a65691ebf-3ed91f61-1; fclo=1487760200439%2Cen-US%2C1%20DST"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [],
          "cookies": [
            {
              "name": "s_fid",
              "value": "5F0AC94433688EDD-34F86F3C8150A37D",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_nr",
              "value": "1487759249799-New",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_vnum",
              "value": "1488322800801%26vn%3D1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_invisit",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv",
              "value": "1487759249803",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv_s",
              "value": "First%20Visit",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_cc",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "__unam",
              "value": "bdafff1-15a65691ebf-3ed91f61-1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "fclo",
              "value": "1487760200439%2Cen-US%2C1%20DST",
              "expires": null,
              "httpOnly": false,
              "secure": false
            }
          ],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 22 Feb 2017 10:52:25 GMT"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Tue, 31 Jan 2017 00:24:50 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588fd952-1796b0\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1330849,
            "mimeType": "text/html"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 61676,
          "_error": "net::ERR_CONNECTION_CLOSED"
        },
        "cache": {},
        "timings": {
          "blocked": 0.568000134080648,
          "dns": -1,
          "connect": -1,
          "send": 0.202999915927649,
          "wait": 2307.124000042682,
          "receive": 9197.622000006953,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "9111",
        "pageref": "page_18"
      },
      {
        "startedDateTime": "2017-02-22T10:52:26.147Z",
        "time": 5151.593999937177,
        "request": {
          "method": "GET",
          "url": "https://fonts.googleapis.com/css?family=Open+Sans",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/css?family=Open+Sans"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "text/css,*/*;q=0.1"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": ":authority",
              "value": "fonts.googleapis.com"
            },
            {
              "name": "referer",
              "value": "https://web.hfelo.se/flirt4free.com/"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [
            {
              "name": "family",
              "value": "Open+Sans"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 404,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "status",
              "value": "404"
            },
            {
              "name": "date",
              "value": "Wed, 22 Feb 2017 10:52:28 GMT"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "content-length",
              "value": "20"
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "text/plain",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 91,
          "_error": ""
        },
        "cache": {},
        "timings": {
          "blocked": 1.02999992668629,
          "dns": 0.017000129446379963,
          "connect": 2524.3029999546675,
          "send": 0.11299992911972367,
          "wait": 2625.50600012764,
          "receive": 0.6249998696166585,
          "ssl": 1708.5250001400682
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "9148",
        "pageref": "page_18"
      },
      {
        "startedDateTime": "2017-02-22T10:52:26.148Z",
        "time": 8996.519000036642,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/ecsm.vscdns.com/min/css/group/css_live_f4f_v2_20161129_02.css",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/ecsm.vscdns.com/min/css/group/css_live_f4f_v2_20161129_02.css"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "text/css,*/*;q=0.1"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": ":authority",
              "value": "web.hfelo.se"
            },
            {
              "name": "cookie",
              "value": "s_fid=5F0AC94433688EDD-34F86F3C8150A37D; s_nr=1487759249799-New; s_vnum=1488322800801%26vn%3D1; s_invisit=true; s_lv=1487759249803; s_lv_s=First%20Visit; s_cc=true; __unam=bdafff1-15a65691ebf-3ed91f61-1; fclo=1487760200439%2Cen-US%2C1%20DST"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "referer",
              "value": "https://web.hfelo.se/flirt4free.com/"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [],
          "cookies": [
            {
              "name": "s_fid",
              "value": "5F0AC94433688EDD-34F86F3C8150A37D",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_nr",
              "value": "1487759249799-New",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_vnum",
              "value": "1488322800801%26vn%3D1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_invisit",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv",
              "value": "1487759249803",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv_s",
              "value": "First%20Visit",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_cc",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "__unam",
              "value": "bdafff1-15a65691ebf-3ed91f61-1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "fclo",
              "value": "1487760200439%2Cen-US%2C1%20DST",
              "expires": null,
              "httpOnly": false,
              "secure": false
            }
          ],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 22 Feb 2017 10:52:26 GMT"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Tue, 31 Jan 2017 00:24:54 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588fd956-8dd63\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "text/css; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            }
          ],
          "cookies": [],
          "content": {
            "size": 68709,
            "mimeType": "text/css",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 12413,
          "_error": "net::ERR_CONNECTION_CLOSED"
        },
        "cache": {},
        "timings": {
          "blocked": 0.793999992311001,
          "dns": -1,
          "connect": -1,
          "send": 0.17600017599761497,
          "wait": 2174.1219998803012,
          "receive": 6821.426999988033,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "9111",
        "pageref": "page_18"
      },
      {
        "startedDateTime": "2017-02-22T10:52:26.172Z",
        "time": 5615.118000190705,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/www.vs4.com/impr.php%3Fz=&r=246146.html",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/www.vs4.com/impr.php%3Fz=&r=246146.html"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "image/webp,image/*,*/*;q=0.8"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": ":authority",
              "value": "web.hfelo.se"
            },
            {
              "name": "cookie",
              "value": "s_fid=5F0AC94433688EDD-34F86F3C8150A37D; s_nr=1487759249799-New; s_vnum=1488322800801%26vn%3D1; s_invisit=true; s_lv=1487759249803; s_lv_s=First%20Visit; s_cc=true; __unam=bdafff1-15a65691ebf-3ed91f61-1; fclo=1487760200439%2Cen-US%2C1%20DST"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "referer",
              "value": "https://web.hfelo.se/flirt4free.com/"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [],
          "cookies": [
            {
              "name": "s_fid",
              "value": "5F0AC94433688EDD-34F86F3C8150A37D",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_nr",
              "value": "1487759249799-New",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_vnum",
              "value": "1488322800801%26vn%3D1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_invisit",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv",
              "value": "1487759249803",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv_s",
              "value": "First%20Visit",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_cc",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "__unam",
              "value": "bdafff1-15a65691ebf-3ed91f61-1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "fclo",
              "value": "1487760200439%2Cen-US%2C1%20DST",
              "expires": null,
              "httpOnly": false,
              "secure": false
            }
          ],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 22 Feb 2017 10:52:26 GMT"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Mon, 30 Jan 2017 23:45:09 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588fd005-0\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "23"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "text/html",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 90
        },
        "cache": {},
        "timings": {
          "blocked": 0.499000074341893,
          "dns": -1,
          "connect": -1,
          "send": 0.19400008022785198,
          "wait": 2395.3839999157904,
          "receive": 3219.041000120345,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "9111",
        "pageref": "page_18"
      },
      {
        "startedDateTime": "2017-02-22T10:52:26.173Z",
        "time": 4861.243000021204,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/ecsm.vscdns.com/javascript/validation.js",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/ecsm.vscdns.com/javascript/validation.js"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": ":authority",
              "value": "web.hfelo.se"
            },
            {
              "name": "cookie",
              "value": "s_fid=5F0AC94433688EDD-34F86F3C8150A37D; s_nr=1487759249799-New; s_vnum=1488322800801%26vn%3D1; s_invisit=true; s_lv=1487759249803; s_lv_s=First%20Visit; s_cc=true; __unam=bdafff1-15a65691ebf-3ed91f61-1; fclo=1487760200439%2Cen-US%2C1%20DST"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "referer",
              "value": "https://web.hfelo.se/flirt4free.com/"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [],
          "cookies": [
            {
              "name": "s_fid",
              "value": "5F0AC94433688EDD-34F86F3C8150A37D",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_nr",
              "value": "1487759249799-New",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_vnum",
              "value": "1488322800801%26vn%3D1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_invisit",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv",
              "value": "1487759249803",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv_s",
              "value": "First%20Visit",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_cc",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "__unam",
              "value": "bdafff1-15a65691ebf-3ed91f61-1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "fclo",
              "value": "1487760200439%2Cen-US%2C1%20DST",
              "expires": null,
              "httpOnly": false,
              "secure": false
            }
          ],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 22 Feb 2017 10:52:26 GMT"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Wed, 26 Oct 2016 17:28:30 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"5810e7be-667c\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "application/javascript"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            }
          ],
          "cookies": [],
          "content": {
            "size": 26236,
            "mimeType": "application/javascript",
            "text": "/*\r\nValidator validates any form, provided the corresponding rules exist\r\n*/\r\n\r\n/************************************************* RULES: *********************************************************\r\n\r\nPARAMS for Validator call: \r\n\r\n\t\t@formId : id of the form being validated\t\r\n\t\r\n\t\t@errorTextObject is defined outside the validation.js in case, at some point, this will come from a PHP variable for diff languages. In any case, if any specific kind of message from @errorTextObject was not provided, a default message is shown. (therefore, it is possible to use partial @errorTextObject to make customer error messages, and let some others be the default ones).\r\n\r\n\t\tSample errorTextObject:\r\n\r\n\t\t\t\tvar errorMessages\t= {\t\r\n\t\t\t\t\r\n\t\t\t\t\tpasswordMsg: {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tinvalid_characters\t: \"<span>Invalid characters!</span>\",\r\n\t\t\t\r\n\t\t\t\t\t\tshort_pass\t\t\t: \"<span>Password is too short</span>\",\r\n\t\t\t\r\n\t\t\t\t\t\tweak_pass\t\t\t: \"<span>Weak password</span>\",\r\n\t\t\t\r\n\t\t\t\t\t\tmedium_pass\t\t\t: \"<span>Medium strength</span>\",\r\n\t\t\t\t\r\n\t\t\t\t\t\tstrong_pass\t\t\t: \"<span>Strong Password!</span>\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t\temailStrengthMsg: \"<span>Address is not valid</span>\",\r\n\t\t\t\t\t\r\n\t\t\t\t\trequiredFieldMsg: \"<span>This field is required</span>\"\t\t\t\r\n\t\t\t\t};\r\n\r\nFORM MARKUP:\t\t\t\t\r\n\t\r\n\t\tAn input needs an id and the 'data-validation' attribute\r\n\t\te.g.: <input data-validation='ruleName' id='inputId' />\r\n \r\n\t\tpossible @dataValidation values:\r\n \r\n\t\t 1) required ( = cannot be blank)\r\n\t\t 2) email ( = valid email string)\r\n\t\t 3) password ( = checks password strength)\r\n\t\t 4) confirm_'id_of_the_element_to_confirm'(for confirmation fields, e.g. data-validate=\"confirm_nick_name\", where \"nick_name\" is the id of the username input that need to compare this value with)\r\n\r\n\r\nERROR MESSAGES: \r\n \r\n\tPHP error messages have class .fieldErrorS\r\n\tJavascript validation errors have class .fieldErrorC (those will be created and inserted on init, then shown and hidden).\r\n\tWhile at least one .fieldErrorC is visible, the form is considered invalid \r\n\tAll messages will have class .error (for styling) - both php and js\r\n\t\r\n**/\r\n\r\n\r\nfunction Validator(formId, errorTextObject) {\r\n\t\r\n\tthis.formElem\t\t\t= document.getElementById(formId);\r\n\tthis.errorTextObject\t= errorTextObject || {};\t\r\n};\r\n\r\n\r\n/**\r\n*\tRemoves the form's action and method to prevent submitting\r\n*\tGets reference to all the inputs that were marked for validation\r\n*\tCalls configureInputsForValidation()\r\n*\r\n*\t@return\r\n**/\r\nValidator.prototype.init = function() {\r\n\r\n\tthis.firstSubmit\t\t\t= true;\t\r\n\t\r\n\t//\tGet reference to the form's method and action and remove them until the form becomes valid\t\t\r\n\tthis.formAction\t\t\t\t= this.formElem.action;\r\n\tthis.formMethod\t\t\t\t= this.formElem.method;\r\n\t\r\n\tthis.formElem.action\t\t= '';\r\n\tthis.formElem.method\t\t=  '';\r\n\t\r\n\tvar allElems\t\t\t\t= this.formElem.elements;\r\n\t\r\n\t//\tGet reference to all the inputs (except hidden ones and the submit input) in the form\r\n\tthis.formInputs\t\t\t\t= [];\r\n\t\r\n\tfor(var i = 0; i < allElems.length; i++) {\r\n\t\t\r\n\t\tif(allElems[i].getAttribute('type') != 'hidden' && allElems[i].getAttribute('type') != 'submit' &&( allElems[i].tagName.toLowerCase() == 'input' || allElems[i].tagName.toLowerCase() == 'textarea')) {\r\n\t\t\t\r\n\t\t\tthis.formInputs.push(allElems[i]);\r\n\t\t};\r\n\t}\r\n\t\r\n\t// Focus on the first one\r\n\t//\tie8\r\n\ttry {\r\n\t\r\n\t\tthis.formInputs[0].focus();\r\n\t\t\r\n\t} catch(err) {\r\n\t\r\n\t}\r\n\t\r\n\t//\tAll the inputs in the form that had been marked for validation\r\n\tthis.needValidationInputs\t= [];\r\n\t\r\n\t//\tGet reference to only the inputs that need validation\r\n\tfor(var i = 0; i < this.formInputs.length; i++) {\r\n\t\t\r\n\t\tvar inputEl\t\t\t\t= this.formInputs[i];\r\n\t\tvar inputValidationRule\t= inputEl.getAttribute('data-validate');\r\n\t\t\r\n\t\tif(inputValidationRule != null && inputValidationRule != '') {\r\n\t\t\t\r\n\t\t\tthis.needValidationInputs.push(this.formInputs[i]); \r\n\t\t}\r\n\t}\r\n\t\r\n\t//\tGo through all the inputs and see what kind of validation rules were assigned to them \r\n\t//\tAdd event listeners, based on what\r\n\tthis.configureInputsForValidation();\r\n};\r\n\r\n\r\n/**\r\n*\tIf form had been previously submitted and now shows php errors, for each elem, hide the php error\r\n*\tonce user starts editiing the field\r\n*\r\n*\t@param event ev\r\n*\r\n*\t@return\r\n**/\r\nValidator.prototype.hidePHPError = function(ev) {\r\n\r\n\tvar el\t\t\t\t\t= ev.target || ev.srcElement;\r\n\t\r\n\t//\tHide php errors (display: none), if there are any for this element\r\n\tthis.phpErrorMessages\t= document.querySelectorAll('.fieldErrorS');\r\n\t\r\n\tvar elemChildren\t\t= el.parentNode.children;\r\n\t\t\r\n\tfor(var i = 0; i < elemChildren.length; i++) {\r\n\t\t\r\n\t\tif(elemChildren[i].className.indexOf('fieldErrorS') != -1) {\r\n\t\t\t\r\n\t\t\telemChildren[i].style.display = 'none';\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n*\tFor inputs that were deemed 'needing validation' in the init() fn,\r\n*\t1) creates and appends error spans for each type of rule\r\n*\t2) assigns event listeners to these inputs\r\n*\t3) assigns event listener for submitting the whole form\r\n*\r\n*\t@return\r\n**/\r\nValidator.prototype.configureInputsForValidation = function() {\r\n\t\r\n\t//\tInputs that will be required (rule='required'). Start validating those on the first submit of the form and assign continuous validation from that point on\r\n\tthis.requiredInputs\t= [];\r\n\t\r\n\tfor(var i = 0; i < this.needValidationInputs.length; i++) {\r\n\t\t\r\n\t\tvar inputEl\t\t\t\t\t= this.needValidationInputs[i];\r\n\t\tvar inputValidationRule \t= inputEl.getAttribute('data-validate');\t\t\t\t\r\n\t\tvar inputId\t\t\t\t\t= inputEl.getAttribute('id');\r\n\t\t\r\n\t\t//For each input, add eventlistener to hide its corresponding php error if it is visible\r\n\t\t\r\n\t\t//\tFor radio and checkboxes will be watching the 'change' event\r\n\t\tif(inputEl.getAttribute('type') == 'checkbox' || inputEl.getAttribute('type') == 'radio') {\r\n\t\t\r\n\t\t\tthis.makeEventListener(inputEl, 'change', this.hidePHPError.bind(this));\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tthis.makeEventListener(inputEl, 'keyup', this.hidePHPError.bind(this));\r\n\t\t\tthis.makeEventListener(inputEl, 'input', this.hidePHPError.bind(this));\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//\tMake a 'clonable' error span, since we found that rules will need to be applied to all these inputs\r\n\t\tvar errorDiv\t\t\t\t= document.createElement('span');\r\n\t\terrorDiv.className\t\t\t= 'fieldErrorC error';\r\n\t\t\r\n\t\t//\tHidden by default\r\n\t\terrorDiv.style.display\t\t= 'none';\r\n\t\r\n\t\t\r\n\t\t//\tRULE = REQUIRED\r\n\t\tif(inputValidationRule.indexOf('required') > -1) {\r\n\t\t\t\r\n\t\t\t//\tAdd to the array of required inputs\r\n\t\t\tthis.requiredInputs.push(inputEl);\r\n\r\n\t\t\tvar reqErrorDiv\t\t\t= errorDiv.cloneNode();\r\n\t\t\treqErrorDiv.id\t\t\t= inputId + '_error';\r\n\t\t\t\r\n\t\t\t//\tInsert the text right away because it won't change\r\n\t\t\treqErrorDiv.innerHTML\t= (this.errorTextObject.requiredFieldMsg) ? this.errorTextObject.requiredFieldMsg : \"<span>This field is required</span>\";\r\n\t\t\t\r\n\t\t\tinputEl.parentNode.appendChild(reqErrorDiv);\r\n\t\t\t\r\n\t\t\t//\t*Event listeners for required fields are added after the first form submit attempt\r\n\t\t}\r\n\t\t\r\n\t\t//\tRULE = EMAIL\r\n\t\tif(inputValidationRule.indexOf('email') > -1) {\r\n\t\t\t\r\n\t\t\tvar reqErrorDiv\t\t\t= errorDiv.cloneNode();\r\n\t\t\treqErrorDiv.id\t\t\t= inputId + '_strength_error';\r\n\t\t\t\r\n\t\t\t//\tInsert the text right away because it won't change\r\n\t\t\treqErrorDiv.innerHTML\t= (this.errorTextObject.emailStrengthMsg) ? this.errorTextObject.emailStrengthMsg : \"<span>Address is not valid</span>\";\r\n\t\t\t\r\n\t\t\tinputEl.parentNode.appendChild(reqErrorDiv);\r\n\t\t\t\r\n\t\t\t//\tAdd event listeners\r\n\t\t\tthis.makeEventListener(inputEl, \"keyup\", this.validateEmail.bind(this));\r\n\t\t\tthis.makeEventListener(inputEl, \"input\", this.validateEmail.bind(this));\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//\tRULE = PASSWORD\r\n\t\tif(inputValidationRule.indexOf('password') > -1) {\r\n\t\t\t\r\n\t\t\tvar reqErrorDiv\t\t\t= errorDiv.cloneNode();\r\n\t\t\treqErrorDiv.id\t\t\t= inputId + '_password_strength';\r\n\t\t\t\r\n\t\t\t//\tPassword strength has no class 'fieldErrorC' because the form can be valid when this message is visible\r\n\t\t\treqErrorDiv.className\t= 'error'; \r\n\t\t\tinputEl.parentNode.appendChild(reqErrorDiv);\r\n\t\t\t\r\n\t\t\t//\tAdd event listeners\r\n\t\t\tthis.makeEventListener(inputEl, \"keyup\", this.validatePassword.bind(this));\r\n\t\t\tthis.makeEventListener(inputEl, \"input\", this.validatePassword.bind(this));\r\n\t\t}\r\n\t\t\r\n\t\t//\tRULE = USERNAME\r\n\t\tif(inputValidationRule.indexOf('username') > -1) {\r\n\t\t\t\r\n\t\t\tvar reqErrorDiv\t\t\t= errorDiv.cloneNode();\r\n\t\t\treqErrorDiv.id\t\t\t= inputId + '_username_strength';\r\n\t\t\t\r\n\t\t\tinputEl.parentNode.appendChild(reqErrorDiv);\r\n\t\t\t\r\n\t\t\t//\tAdd event listeners\r\n\t\t\tthis.makeEventListener(inputEl, \"keyup\", this.validateUsername.bind(this));\r\n\t\t\tthis.makeEventListener(inputEl, \"input\", this.validateUsername.bind(this));\r\n\t\t}\r\n\t\t\r\n\t\t//\tRULE = LENGTH\r\n\t\tif(inputValidationRule.indexOf('length') > -1) {\r\n\t\t\t\r\n\t\t\tvar reqErrorDiv\t\t\t= errorDiv.cloneNode();\r\n\t\t\treqErrorDiv.id\t\t\t= inputId + '_length_error';\r\n\t\r\n\t\t\tinputEl.parentNode.appendChild(reqErrorDiv);\r\n\t\t\t\r\n\t\t\t//\tAdd event listeners\r\n\t\t\tthis.makeEventListener(inputEl, \"keyup\", this.validateLength.bind(this));\r\n\t\t\tthis.makeEventListener(inputEl, \"input\", this.validateLength.bind(this));\r\n\t\t}\r\n\t\t\r\n\t\t//\tRULE = CONFIRM\r\n\t\tif(inputValidationRule.indexOf('confirm') > -1) {\r\n\t\t\t\r\n\t\t\tvar reqErrorDiv\t\t\t= errorDiv.cloneNode();\r\n\t\t\treqErrorDiv.id\t\t\t= inputId + '_confirmation';\r\n\t\t\t\r\n\t\t\t//\tConfirmation message has no class 'fieldErrorC' because the form can be valid when this message is visible\r\n\t\t\treqErrorDiv.className\t= 'error';\r\n\t\r\n\t\t\tinputEl.parentNode.appendChild(reqErrorDiv);\r\n\t\t\t\r\n\t\t\t//\tAdd event listeners\r\n\t\t\tthis.makeEventListener(inputEl, \"keyup\", this.validateConfirm.bind(this));\r\n\t\t\tthis.makeEventListener(inputEl, \"input\", this.validateConfirm.bind(this));\t\t\t\r\n\t\t}\t\r\n\t}\r\n\r\n\t//\tAfter assigning all the event handlers and rules, add event listener to validate the whole form on submit\r\n\tthis.makeEventListener(this.formElem, \"submit\", this.validateForm.bind(this));\r\n};\r\n\r\n\r\n/**\r\n*\tA cross-browser fn to add event listeners to elements\r\n*\r\n*\r\n*\t@return\r\n**/\r\nValidator.prototype.makeEventListener = function(element, eventName, callbackFn) {\r\n\t\r\n\tif(document.addEventListener) {\r\n\t\t\r\n\t\telement.addEventListener(eventName, callbackFn);\r\n\t\t\r\n\t} else if(document.attachEvent) {\r\n\t\t\r\n\t\telement.attachEvent(\"on\" + eventName, callbackFn);\r\n\t}\r\n\r\n};\r\n\r\n\r\n/** Validation functions **/\r\n\r\n\r\n\r\n/**\r\n*\tValidates email for email address validity (regex test)\r\n*\t\r\n*\t@param event ev\r\n*\t\r\n*\t@return\r\n**/\r\nValidator.prototype.validateEmail = function(ev) {\r\n\t\r\n\tvar emailInput\t\t\t\t= ev.target || ev.srcElement;\r\n\t\r\n\tvar emailInputId\t\t\t= emailInput.getAttribute('id');\r\n\t\r\n\tvar emailValidMessage\t\t= document.getElementById(emailInputId + '_strength_error');\r\n\t\r\n\tvar isEmailValidType\t\t=  /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i.test(emailInput.value);\r\n\r\n\tif(isEmailValidType || emailInput.value === '') {\r\n\t\t\r\n\t\temailValidMessage.style.display = 'none';\t\t\t\r\n\t\r\n\t} else {\r\n\t\r\n\t\temailValidMessage.style.display = 'inline-block';\r\n\t}\r\n};\r\n\r\n/**\r\n*\tCurrently, the rule is 'no special character at [0]' for username\r\n*\r\n*\r\n*\t@return\r\n**/\r\nValidator.prototype.validateUsername = function(ev) {\r\n\t\r\n\tvar usernameInput\t\t\t= ev.target || ev.srcElement;\r\n\t\r\n\tvar usernameInputId\t\t\t= usernameInput.getAttribute('id');\r\n\tvar usernameStrenthError\t= document.getElementById(usernameInputId + '_username_strength');\r\n\t\r\n\tvar maxlength\t\t\t\t= parseInt(usernameInput.getAttribute('maxlength'), 10) || 32;\r\n\tvar minlength\t\t\t\t= parseInt(usernameInput.getAttribute('minlength'), 10) || 6;\r\n\t\r\n\tvar isSpecialCharacter\t\t= /[0-9a-zA-Z@\\._-]+/i.test(usernameInput.value[0]);//[@\\._-]\r\n\r\n\tif(isSpecialCharacter) {\r\n\t\t\r\n\t\tusernameStrenthError.innerHTML\t\t= '';\r\n\t\tusernameStrenthError.style.display\t= 'none';\r\n\t\t\r\n\t} else {\r\n\t\t//\tFailed the special characters check\r\n\t\tusernameStrenthError.innerHTML\t\t= (this.errorTextObject.usernameMsg) ? this.errorTextObject.usernameMsg : \"<span>Not a valid username</span>\";\r\n\t\tusernameStrenthError.style.display\t= 'inline-block';\r\n\t}\r\n\t\r\n\t//\tOnly once user has triggered a 'keyup' on the username input, start validating username availability via ajax\r\n\tif(!this.userNameAvailabilityListenerSet) {\r\n\t\t\r\n\t\tthis.makeEventListener(usernameInput, \"blur\", this.validateUsernameAvailability.bind(this));\r\n\t\tthis.userNameAvailabilityListenerSet = true;\r\n\t}\r\n};\r\n\r\n/**\r\n*\tOn username input blur, sends ajax request to the webservice\r\n*\tto check user name availability and validity\r\n*\tAlso , after 10 unsuccessful attempts, it 'blocks' user and shows an error msg as well\r\n*\r\n*\t@return\r\n**/\r\nValidator.prototype.validateUsernameAvailability = function(ev) {\r\n\t\r\n\tvar usernameInput\t\t\t= ev.target || ev.srcElement;\r\n\t\r\n\tvar usernameInputId\t\t\t= usernameInput.getAttribute('id');\r\n\tvar usernameStrenthError\t= document.getElementById(usernameInputId + '_username_strength');\r\n\t\r\n\tvar url = \"/webservices/validate-username.php?a=validate_username&username=\" + usernameInput.value;\r\n\r\n\tvar callbackFn = function(data) {\r\n\t\t\r\n\t\tvar jsonResponse = JSON.parse(data.responseText);\r\n\t\t\r\n\t\tif(jsonResponse.error) {\r\n\t\t\t\r\n\t\t\tusernameStrenthError.innerHTML\t\t= jsonResponse.message;\r\n\t\t\tusernameStrenthError.style.display\t= 'inline-block';\t\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t//\tHide error msg\r\n\t\t\tusernameStrenthError.innerHTML\t\t= '';\r\n\t\t\tusernameStrenthError.style.display\t= 'none';\t\t\r\n\t\t}\r\n\t};\r\n\t\r\n\tAjax.call(url, callbackFn);\r\n\t\r\n};\r\n\r\n\r\n/**\r\n*\tChecks that length of the input's value is either between minlength and maxlength's attributes' values \r\n*\t(if those were specified), or 0 and 32 (default)\r\n*\r\n*\t@return\r\n**/\r\nValidator.prototype.validateLength = function(ev) {\r\n\t\r\n\tvar inputEl\t\t= ev.target || ev.srcElement;\r\n\t\r\n\tvar usernameInputId\t\t= inputEl.getAttribute('id');\r\n\tvar lengthError\t\t\t= document.getElementById(usernameInputId + '_length_error');\r\n\t\r\n\tvar maxlength\t\t\t= parseInt(inputEl.getAttribute('maxlength'), 10) || 32;\r\n\tvar minlength\t\t\t= parseInt(inputEl.getAttribute('minlength'), 10) || 0;\r\n\t\r\n\tlengthError.innerHTML\t= (this.errorTextObject.lengthMsg) ? this.errorTextObject.lengthMsg : \"<span>Field value should be \" + minlength + \" - \" + maxlength + \" characters long</span>\";\r\n\t\r\n\tif((inputEl.value.length > 0 && inputEl.value.length < minlength) || (inputEl.value.length > 0 && inputEl.value.length > maxlength)) {\r\n\t\t\r\n\t\tlengthError.style.display = 'inline-block';\r\n\t\t\r\n\t} else {\r\n\t\t\r\n\t\tlengthError.style.display = 'none';\r\n\t}\r\n};\r\n\r\n\r\n\r\n/**\r\n*\tValidates the filed that was marked with 'confirm_' rule,\r\n*\talso assigns the event listener to its 'master' element to perform the check, once the user has started editing the *\tformer\r\n*\t\r\n*\t@param event ev\r\n*\t\r\n*\t@return\r\n**/\r\nValidator.prototype.validateConfirm = function(ev) {\r\n\t\r\n\tvar inputEl\t\t\t\t= ev.target || ev.srcElement;\r\n\t\r\n\t//\tFrom the data-validate attribute of the confirmation input, get the id of the input that this one is supposed to match (the 'master' input)\r\n\tvar inputId\t\t\t\t= inputEl.getAttribute('id');\r\n\r\n\tvar inputAttributeVal\t= inputEl.getAttribute('data-validate');\r\n\t\r\n\tvar indexStart\t\t\t= inputAttributeVal.indexOf('confirm_');\r\n\t\r\n\t//\tIf this function was called on the 'master' element (element WITH which the value is being compared)\r\n\tif(indexStart == -1) {\r\n\t\t\r\n\t\tfor(var i = 0; i < this.formInputs.length; i++) {\r\n\t\t\t\r\n\t\t\tif(this.formInputs[i].getAttribute('data-validate') && this.formInputs[i].getAttribute('data-validate').indexOf('confirm_'+ inputId) != -1) {\r\n\t\t\t\r\n\t\t\t\tvar matchingInput\t\t= this.formInputs[i];\r\n\t\t\t\tvar confirmMatchEl\t\t= document.getElementById(matchingInput.getAttribute('id') + '_confirmation');\r\n\t\t\t\tbreak;\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\r\n\t\t//\tIf this function was called on the element that is supposed to match (the original marked field)\r\n\t\tvar remainingAttributeVal\t\t= inputAttributeVal.slice(indexStart+8);\r\n\t\t\r\n\t\tif(remainingAttributeVal.indexOf(' ') != -1) {\r\n\t\t\t\r\n\t\t\tvar indexEnd\t\t\t\t= remainingAttributeVal.indexOf(' ');\r\n\t\t\t\r\n\t\t\tremainingAttributeVal\t\t= remainingAttributeVal.slice(0, indexEnd);\r\n\t\t}\r\n\t\t\r\n\t\tvar matchingInputId\t\t\t\t= remainingAttributeVal;\r\n\t\tvar matchingInput\t\t\t\t= document.getElementById(remainingAttributeVal);\r\n\t\tvar confirmMatchEl\t\t\t\t= document.getElementById(inputId + '_confirmation');\r\n\t}\r\n\t\r\n\t//\tWhen checking for the first time, assign event listener on the 'master' input element, so that when its value is changing, the check is performed as well\r\n\tif(!this.parentFieldAssignedWatch) {\r\n\t\r\n\t\tthis.makeEventListener(matchingInput, 'keyup', this.validateConfirm.bind(this));\r\n\t\tthis.makeEventListener(matchingInput, 'input', this.validateConfirm.bind(this));\r\n\t\tthis.parentFieldAssignedWatch = true;\r\n\t}\r\n\t\r\n\t//\tThe message is displayed in both cases, but text chages (similar to the password strength validation)\r\n\tif(inputEl.value == matchingInput.value) {\r\n\t\t\r\n\t\t//\tMATCH\r\n\t\t\r\n\t\tconfirmMatchEl.innerHTML\t\t\t\t= (this.errorTextObject['confirm_' + matchingInputId + '_Match']) ? this.errorTextObject['confirm_' + matchingInputId + '_Match'] : \"<span>Field matches!</span>\";\r\n\t\tconfirmMatchEl.className\t\t\t\t= 'error greenError';\r\n\t\tconfirmMatchEl.style.display = 'inline-block';\r\n\t\r\n\t} else {\r\n\t\r\n\t\t//\tNO MATCH\r\n\t\tconfirmMatchEl.innerHTML\t\t\t\t= (this.errorTextObject['confirm_' + matchingInputId + '_Mismatch']) ? this.errorTextObject['confirm_' + matchingInputId + '_Mismatch'] : \"<span>Field does not match</span>\";\r\n\t\tconfirmMatchEl.className\t\t\t\t= 'error';\r\n\t\tconfirmMatchEl.style.display = 'inline-block';\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n*\tValidates the password based on the calculated password score\r\n*\r\n*\t@param event ev\r\n*\t\r\n*\t@return\r\n**/\r\nValidator.prototype.validatePassword = function(ev) {\r\n\t\r\n\tvar inputEl\t\t\t\t= ev.target || ev.srcElement;\r\n\t\r\n\tvar passwordInputId\t\t= inputEl.getAttribute('id');\r\n\t\t\r\n\tvar password_score\t\t= this.getPasswordScore(inputEl.value);\r\n\r\n\tvar passwordStrengthEl\t= document.getElementById(passwordInputId + '_password_strength');\r\n\t\r\n\tpasswordStrengthEl.innerHTML = '';\r\n\t\r\n\t\r\n\tif( password_score != 0 ) {\r\n\t\r\n\t\tpassword_text \t\t\t\t\t\t\t\t\t= this.getPasswordScoreText(password_score);\r\n\t\t\r\n\t\tpasswordStrengthEl.innerHTML\t\t\t\t\t= password_text;\r\n\t\t\r\n\t\tpasswordStrengthEl.style.display\t\t\t\t= 'inline-block';\r\n\r\n\t\t\r\n\t\tif( password_score < 34 ) {\r\n\t\r\n\t\t\tpasswordStrengthEl.className\t\t\t\t= 'error fieldErrorC';\t\t\t\t\t\t\r\n\t\r\n\t\t} else if( password_score < 68 ) {\r\n\t\r\n\t\t\tpasswordStrengthEl.className\t\t\t\t= 'error yellowError';\t\t\t\r\n\t\t\r\n\t\t} else {\r\n\r\n\t\t\tpasswordStrengthEl.className\t\t\t\t= 'error greenError';\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\r\n\t\tpasswordStrengthEl.style.display\t\t\t\t= 'none';\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n*\tValidates the fields with 'rule=required'\r\n*\t\r\n*\t@param event ev, element elem\r\n*\t\r\n*\t@return\r\n**/\r\nValidator.prototype.validateRequired = function(ev, elem) {\r\n\t\r\n\tif(!elem) {\r\n\t\r\n\t\tvar el\t\t\t= ev.target || ev.srcElement;\r\n\t\tvar elemId\t\t= el.getAttribute('id');\r\n\t\tvar elemType\t= el.getAttribute('type');\r\n\t\t\r\n\t} else {\r\n\r\n\t\tvar el\t\t\t= elem;\t\t\r\n\t\tvar elemId\t\t= el.getAttribute('id');\r\n\t\tvar elemType\t= el.getAttribute('type');\r\n\t}\r\n\t\r\n\tvar correspondingErrorMsg\t= document.getElementById(elemId + '_error');\r\n\t\t\r\n\tif(elemType == 'checkbox') {\r\n\t\t\r\n\t\tif(el.checked) {\r\n\t\t\r\n\t\t\tcorrespondingErrorMsg.style.display = 'none';\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\r\n\t\t\tcorrespondingErrorMsg.style.display = 'inline-block';\t\t\t\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\t\r\n\t\tif(el.value != '') {\r\n\t\t\r\n\t\t\tcorrespondingErrorMsg.style.display = 'none';\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\r\n\t\t\tcorrespondingErrorMsg.style.display = 'inline-block';\r\n\t\t}\t\r\n\t}\t\r\n};\r\n\r\n/**\r\n*\tValidates the entire form (on submit)\r\n*\t\r\n*\t@param event ev\r\n*\t\r\n*\t@return\r\n**/\r\nValidator.prototype.validateForm = function(ev) {\r\n\t\r\n\t//(ev.preventDefault) ? ev.preventDefault() : ev.returnValue = false;\r\n\t\r\n\tthis.formIsValid = true;\r\n\t\r\n\t//\tValidate all the required inputs\r\n\tfor(var i = 0; i < this.requiredInputs.length; i++) {\r\n\t\r\n\t\tthis.validateRequired(ev, this.requiredInputs[i]);\r\n\t}\r\n\r\n\t//\tIf any errors (at least one error div is showing), form is not valid (doesn't matter which one)\r\n\tvar allErrorSpans = document.querySelectorAll('.fieldErrorC');\r\n\t\r\n\tfor(var i = 0; i < allErrorSpans.length; i++) {\r\n\t\r\n\t\tif(allErrorSpans[i].style.display == 'block' || allErrorSpans[i].style.display == 'inline-block') {\r\n\t\t\t\r\n\t\t\tthis.formIsValid = false;\r\n\t\t\t\r\n\t\t\t//\tFocus on the 'neighboring' (corresponding) input element of the first error message\r\n\t\t\tvar neighborElements = allErrorSpans[i].parentNode.children;\r\n\t\t\t\r\n\t\t\tfor(var j = 0; j < neighborElements.length; j++) {\r\n\t\t\t\t\r\n\t\t\t\tif(neighborElements[j].tagName.toLowerCase() == 'input') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t//\tie8\r\n\t\t\t\t\ttry {\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tneighborElements[j].focus();\r\n\t\t\t\t\t\r\n\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t\tbreak;\t\t\r\n\t\t}\r\n\t}\r\n\t\t\r\n\t//\tAfter the first submit, if form is not valid, add event listeners to all the required fields to start validating on keyup/input\r\n\tif(!this.formIsValid && this.firstSubmit) {\r\n\t\t\r\n\t\tfor(var i = 0; i < this.requiredInputs.length; i++) {\r\n\t\t\r\n\t\t\t//\tFor radio and checkboxes will be watching the 'change' event\r\n\t\t\tif(this.requiredInputs[i].getAttribute('type') == 'checkbox' || this.requiredInputs[i].getAttribute('type') == 'radio') {\r\n\t\t\t\r\n\t\t\t\tthis.makeEventListener(this.requiredInputs[i], 'change', this.validateRequired);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t//\tFor all the rest of the inputs, will be watching the 'keyup' and 'input' events\r\n\t\t\t\tthis.makeEventListener(this.requiredInputs[i], 'keyup', this.validateRequired);\r\n\t\t\t\tthis.makeEventListener(this.requiredInputs[i], 'input', this.validateRequired);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t//\tSet the flag that the next submit will not be the first one\r\n\t\tthis.firstSubmit = false;\r\n\t}\r\n\t\t\r\n\t//\tIf passed validation, put the method and form action back and submit\r\n\tif(this.formIsValid) {\r\n\t\r\n\t\tthis.formElem.method = this.formMethod;\r\n\t\tthis.formElem.action = this.formAction;\r\n\t\t//this.formElem.submit();\r\n\t} else {\r\n\t\t(ev.preventDefault) ? ev.preventDefault() : ev.returnValue = false;\r\n\t}\r\n};\r\n\r\n/**\r\n*\tChecks a password's strength and returns an integer between 0-100\r\n*\t\r\n*\t@param string password\r\n*\t\r\n*\t@return\r\n**/\r\nValidator.prototype.getPasswordScore = function(password) {\r\n\r\n\t//\tInitialize score at zero\r\n\tvar score = 0;\r\n\t\r\n\t// no password entered\r\n\tif (password.length == 0) return 0;\r\n\t\r\n\t//\tpassword < 4\r\n\tif (password.length < 4) return -20;\r\n\t\r\n\t//\tpassword has invalid characters\r\n\tif(!password.match(/(^[a-zA-Z0-9!,@,#,$,%,^,&,*,?,_,~]*$)/)) return -5;\r\n\t\r\n\t//\tpassword length\r\n\tscore += password.length * 4;\r\n\tscore += (this.checkRepetition(1,password).length - password.length ) * 1;\r\n\tscore += (this.checkRepetition(2,password).length - password.length ) * 1;\r\n\tscore += (this.checkRepetition(3,password).length - password.length ) * 1;\r\n\tscore += (this.checkRepetition(4,password).length - password.length ) * 1;\r\n\t\r\n\t//\tpassword has 3 numbers\r\n\tif(password.match(/(.*[0-9].*[0-9].*[0-9])/))  score += 5;\r\n\t\r\n\t//password has 2 sybols\r\n\tif(password.match(/(.*[!,@,#,$,%,^,&,*,?,_,~].*[!,@,#,$,%,^,&,*,?,_,~])/)) score += 5;\r\n\t\r\n\t//password has Upper and Lower chars\r\n\tif(password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/))  score += 10;\r\n\t\r\n\t//\tpassword has number and chars\r\n\tif(password.match(/([a-zA-Z])/) && password.match(/([0-9])/))  score += 15;\r\n\t\r\n\t//\tpassword has number and symbol\r\n\tif(password.match(/([!,@,#,$,%,^,&,*,?,_,~])/) && password.match(/([0-9])/))  score += 15;\r\n\t\r\n\t//\tpassword has char and symbol\r\n\tif(password.match(/([!,@,#,$,%,^,&,*,?,_,~])/) && password.match(/([a-zA-Z])/))  score += 15;\r\n\t\r\n\t//\tpassword is just a numbers or chars\r\n\tif(password.match(/^\\w+$/) || password.match(/^\\d+$/))  score -= 10 ;\r\n\t\r\n\t//\r\n\t//\tOur Rules:\r\n\t//\t\t- Between 4 and 32 characters\r\n\t//\t\t- at least one UPPER CASE and LOWER CASE letter\r\n\t//\t\t- at least one number\r\n\t//\r\n\tif(password.match(/(.*[0-9])/) && password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\r\n\t\r\n\t\t//\tMeets our criteria! give a score of 100\r\n\t\treturn 100;\t\r\n\t}\r\n\t\r\n\t//\tReturn Numeric Score\r\n\tif(score > 100) return 100;\r\n\treturn (score);\r\n};\r\n\r\n/**\r\n*\tReturns password strength messages (either from the object that was provided, or default)\r\n*\t\r\n*\t@param number score\r\n*\t\r\n*\t@return\r\n**/\r\nValidator.prototype.getPasswordScoreText = function(score) {\r\n\t\r\n\tif(score == 0)\t\treturn \"\";\r\n\r\n\tif(score == -5)\t\treturn  (this.errorTextObject.passwordMsg && this.errorTextObject.passwordMsg.invalid_characters) ? this.errorTextObject.passwordMsg.invalid_characters : \"<span>Invalid characters!</span>\";\r\n\t\r\n\tif(score == -20) \treturn (this.errorTextObject.passwordMsg && this.errorTextObject.passwordMsg.short_pass) ? this.errorTextObject.passwordMsg.short_pass : \"<span>Password is too short</span>\";\r\n\t\r\n\tif(score < 34)\t\treturn (this.errorTextObject.passwordMsg && this.errorTextObject.passwordMsg.weak_pass) ? this.errorTextObject.passwordMsg.weak_pass : \"<span>Weak password</span>\";\r\n\t\r\n\tif(score < 68)\t\treturn (this.errorTextObject.passwordMsg && this.errorTextObject.passwordMsg.medium_pass) ? this.errorTextObject.passwordMsg.medium_pass : \"<span>Medium strength</span>\";\r\n\t\r\n\treturn (this.errorTextObject.passwordMsg && this.errorTextObject.passwordMsg.strong_pass) ? this.errorTextObject.passwordMsg.strong_pass : \"<span>Strong Password!</span>\";\r\n};\r\n\r\n/**\r\n*\tCheck for character repetition\r\n\r\n*\t@param pLen, str\r\n*\t\r\n*\t@return\r\n**/\t\r\nValidator.prototype.checkRepetition = function(pLen, str) {\r\n\t\r\n\tres = \"\"\r\n\tfor (i=0; i<str.length ; i++) {\r\n\t\trepeated=true\r\n\t\tfor (j=0;j < pLen && (j+i+pLen) < str.length;j++)\r\n\t\trepeated=repeated && (str.charAt(j+i)==str.charAt(j+i+pLen))\r\n\t\tif (j<pLen) repeated=false\r\n\t\tif (repeated) {\r\n\t\t\ti+=pLen-1\r\n\t\t\trepeated=false\r\n\t\t} else {\r\n\t\t\tres+=str.charAt(i)\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn res;\r\n};\r\n\r\n\r\n\r\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 6642
        },
        "cache": {},
        "timings": {
          "blocked": 0.307000009343028,
          "dns": -1,
          "connect": -1,
          "send": 0.09099999442696599,
          "wait": 2395.06700006314,
          "receive": 2465.7779999542945,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "9111",
        "pageref": "page_18"
      },
      {
        "startedDateTime": "2017-02-22T10:52:26.467Z",
        "time": 4812.578999903053,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/lvlt.vscdns.com/images/aspect/4x3.gif",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/lvlt.vscdns.com/images/aspect/4x3.gif"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "image/webp,image/*,*/*;q=0.8"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": ":authority",
              "value": "web.hfelo.se"
            },
            {
              "name": "cookie",
              "value": "s_fid=5F0AC94433688EDD-34F86F3C8150A37D; s_nr=1487759249799-New; s_vnum=1488322800801%26vn%3D1; s_invisit=true; s_lv=1487759249803; s_lv_s=First%20Visit; s_cc=true; __unam=bdafff1-15a65691ebf-3ed91f61-1; fclo=1487760200439%2Cen-US%2C1%20DST"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "referer",
              "value": "https://web.hfelo.se/flirt4free.com/"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [],
          "cookies": [
            {
              "name": "s_fid",
              "value": "5F0AC94433688EDD-34F86F3C8150A37D",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_nr",
              "value": "1487759249799-New",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_vnum",
              "value": "1488322800801%26vn%3D1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_invisit",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv",
              "value": "1487759249803",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv_s",
              "value": "First%20Visit",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_cc",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "__unam",
              "value": "bdafff1-15a65691ebf-3ed91f61-1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "fclo",
              "value": "1487760200439%2Cen-US%2C1%20DST",
              "expires": null,
              "httpOnly": false,
              "secure": false
            }
          ],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 22 Feb 2017 10:52:26 GMT"
            },
            {
              "name": "last-modified",
              "value": "Tue, 04 Aug 2015 17:51:25 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"55c0fb9d-44c\""
            },
            {
              "name": "content-type",
              "value": "image/gif"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "1100"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1100,
            "mimeType": "image/gif",
            "text": "R0lGODlhBAADAIAAAP///wAAACH/C1hNUCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMwNjcgNzkuMTU3NzQ3LCAyMDE1LzAzLzMwLTIzOjQwOjQyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxNSAoV2luZG93cykiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NEI3NkZERTgzQUQxMTFFNThCOTBGRjQ1OEQyNTU1NzgiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6NEI3NkZERTkzQUQxMTFFNThCOTBGRjQ1OEQyNTU1NzgiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo0Qjc2RkRFNjNBRDExMUU1OEI5MEZGNDU4RDI1NTU3OCIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo0Qjc2RkRFNzNBRDExMUU1OEI5MEZGNDU4RDI1NTU3OCIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf29fTz8vHw7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769vLu6ubi3trW0s7KxsK+urayrqqmop6alpKOioaCfnp2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWEg4KBgH9+fXx7enl4d3Z1dHNycXBvbm1sa2ppaGdmZWRjYmFgX15dXFtaWVhXVlVUU1JRUE9OTUxLSklIR0ZFRENCQUA/Pj08Ozo5ODc2NTQzMjEwLy4tLCsqKSgnJiUkIyIhIB8eHRwbGhkYFxYVFBMSERAPDg0MCwoJCAcGBQQDAgEAACH5BAEAAAAALAAAAAAEAAMAAAIDhI9WADs=",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 1126
        },
        "cache": {},
        "timings": {
          "blocked": 1.37899979017675,
          "dns": -1,
          "connect": -1,
          "send": 0.44400012120604004,
          "wait": 2100.2919999882574,
          "receive": 2710.464000003413,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "9111",
        "pageref": "page_18"
      },
      {
        "startedDateTime": "2017-02-22T10:52:26.467Z",
        "time": 4004.927000030875,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/ecsm.vscdns.com/images/aspect/4x3.gif",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/ecsm.vscdns.com/images/aspect/4x3.gif"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "image/webp,image/*,*/*;q=0.8"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": ":authority",
              "value": "web.hfelo.se"
            },
            {
              "name": "cookie",
              "value": "s_fid=5F0AC94433688EDD-34F86F3C8150A37D; s_nr=1487759249799-New; s_vnum=1488322800801%26vn%3D1; s_invisit=true; s_lv=1487759249803; s_lv_s=First%20Visit; s_cc=true; __unam=bdafff1-15a65691ebf-3ed91f61-1; fclo=1487760200439%2Cen-US%2C1%20DST"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "referer",
              "value": "https://web.hfelo.se/flirt4free.com/"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [],
          "cookies": [
            {
              "name": "s_fid",
              "value": "5F0AC94433688EDD-34F86F3C8150A37D",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_nr",
              "value": "1487759249799-New",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_vnum",
              "value": "1488322800801%26vn%3D1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_invisit",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv",
              "value": "1487759249803",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv_s",
              "value": "First%20Visit",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_cc",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "__unam",
              "value": "bdafff1-15a65691ebf-3ed91f61-1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "fclo",
              "value": "1487760200439%2Cen-US%2C1%20DST",
              "expires": null,
              "httpOnly": false,
              "secure": false
            }
          ],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 22 Feb 2017 10:52:26 GMT"
            },
            {
              "name": "last-modified",
              "value": "Tue, 04 Aug 2015 17:51:25 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"55c0fb9d-44c\""
            },
            {
              "name": "content-type",
              "value": "image/gif"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "1100"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1100,
            "mimeType": "image/gif",
            "text": "R0lGODlhBAADAIAAAP///wAAACH/C1hNUCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMwNjcgNzkuMTU3NzQ3LCAyMDE1LzAzLzMwLTIzOjQwOjQyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxNSAoV2luZG93cykiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NEI3NkZERTgzQUQxMTFFNThCOTBGRjQ1OEQyNTU1NzgiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6NEI3NkZERTkzQUQxMTFFNThCOTBGRjQ1OEQyNTU1NzgiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo0Qjc2RkRFNjNBRDExMUU1OEI5MEZGNDU4RDI1NTU3OCIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo0Qjc2RkRFNzNBRDExMUU1OEI5MEZGNDU4RDI1NTU3OCIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf29fTz8vHw7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769vLu6ubi3trW0s7KxsK+urayrqqmop6alpKOioaCfnp2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWEg4KBgH9+fXx7enl4d3Z1dHNycXBvbm1sa2ppaGdmZWRjYmFgX15dXFtaWVhXVlVUU1JRUE9OTUxLSklIR0ZFRENCQUA/Pj08Ozo5ODc2NTQzMjEwLy4tLCsqKSgnJiUkIyIhIB8eHRwbGhkYFxYVFBMSERAPDg0MCwoJCAcGBQQDAgEAACH5BAEAAAAALAAAAAAEAAMAAAIDhI9WADs=",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 1175
        },
        "cache": {},
        "timings": {
          "blocked": 1.09299994073808,
          "dns": -1,
          "connect": -1,
          "send": 0.31800009310246,
          "wait": 2099.3879998568495,
          "receive": 1904.1280001401851,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "9111",
        "pageref": "page_18"
      },
      {
        "startedDateTime": "2017-02-22T10:52:26.468Z",
        "time": 2103.5879999399185,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/flirt4free.com/index.html",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/flirt4free.com/index.html"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "image/webp,image/*,*/*;q=0.8"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": ":authority",
              "value": "web.hfelo.se"
            },
            {
              "name": "cookie",
              "value": "s_fid=5F0AC94433688EDD-34F86F3C8150A37D; s_nr=1487759249799-New; s_vnum=1488322800801%26vn%3D1; s_invisit=true; s_lv=1487759249803; s_lv_s=First%20Visit; s_cc=true; __unam=bdafff1-15a65691ebf-3ed91f61-1; fclo=1487760200439%2Cen-US%2C1%20DST"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "referer",
              "value": "https://web.hfelo.se/flirt4free.com/"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [],
          "cookies": [
            {
              "name": "s_fid",
              "value": "5F0AC94433688EDD-34F86F3C8150A37D",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_nr",
              "value": "1487759249799-New",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_vnum",
              "value": "1488322800801%26vn%3D1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_invisit",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv",
              "value": "1487759249803",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv_s",
              "value": "First%20Visit",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_cc",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "__unam",
              "value": "bdafff1-15a65691ebf-3ed91f61-1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "fclo",
              "value": "1487760200439%2Cen-US%2C1%20DST",
              "expires": null,
              "httpOnly": false,
              "secure": false
            }
          ],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 22 Feb 2017 10:52:26 GMT"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "last-modified",
              "value": "Tue, 31 Jan 2017 00:24:50 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"588fd952-1796b0\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            }
          ],
          "cookies": [],
          "content": {
            "size": 25582,
            "mimeType": "text/html",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 25582
        },
        "cache": {},
        "timings": {
          "blocked": 0.928999856114388,
          "dns": -1,
          "connect": -1,
          "send": 0.23500015959143195,
          "wait": 2099.8539999127343,
          "receive": 2.5700000114784416,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "9111",
        "pageref": "page_18"
      },
      {
        "startedDateTime": "2017-02-22T10:52:26.666Z",
        "time": 8478.601000038907,
        "request": {
          "method": "GET",
          "url": "https://web.hfelo.se/ecsm.vscdns.com/images/promo/_generic-striptease/promo-640x480-homepage.jpg",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": ":path",
              "value": "/ecsm.vscdns.com/images/promo/_generic-striptease/promo-640x480-homepage.jpg"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, sdch, br"
            },
            {
              "name": "accept-language",
              "value": "en-US,en;q=0.8"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            },
            {
              "name": "accept",
              "value": "image/webp,image/*,*/*;q=0.8"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": ":authority",
              "value": "web.hfelo.se"
            },
            {
              "name": "cookie",
              "value": "s_fid=5F0AC94433688EDD-34F86F3C8150A37D; s_nr=1487759249799-New; s_vnum=1488322800801%26vn%3D1; s_invisit=true; s_lv=1487759249803; s_lv_s=First%20Visit; s_cc=true; __unam=bdafff1-15a65691ebf-3ed91f61-1; fclo=1487760200439%2Cen-US%2C1%20DST"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "referer",
              "value": "https://web.hfelo.se/flirt4free.com/"
            },
            {
              "name": ":method",
              "value": "GET"
            }
          ],
          "queryString": [],
          "cookies": [
            {
              "name": "s_fid",
              "value": "5F0AC94433688EDD-34F86F3C8150A37D",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_nr",
              "value": "1487759249799-New",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_vnum",
              "value": "1488322800801%26vn%3D1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_invisit",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv",
              "value": "1487759249803",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_lv_s",
              "value": "First%20Visit",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "s_cc",
              "value": "true",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "__unam",
              "value": "bdafff1-15a65691ebf-3ed91f61-1",
              "expires": null,
              "httpOnly": false,
              "secure": false
            },
            {
              "name": "fclo",
              "value": "1487760200439%2Cen-US%2C1%20DST",
              "expires": null,
              "httpOnly": false,
              "secure": false
            }
          ],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 22 Feb 2017 10:52:26 GMT"
            },
            {
              "name": "last-modified",
              "value": "Wed, 29 Jun 2016 18:02:55 GMT"
            },
            {
              "name": "server",
              "value": "Caddy"
            },
            {
              "name": "etag",
              "value": "W/\"57740d4f-127fc\""
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "status",
              "value": "200"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "75772"
            }
          ],
          "cookies": [],
          "content": {
            "size": 49152,
            "mimeType": "image/jpeg",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 49249,
          "_error": "net::ERR_CONNECTION_CLOSED"
        },
        "cache": {},
        "timings": {
          "blocked": 0.610999995842576,
          "dns": -1,
          "connect": -1,
          "send": 0.205999938771129,
          "wait": 1902.0010000094762,
          "receive": 6575.783000094817,
          "ssl": -1
        },
        "serverIPAddress": "192.168.100.1",
        "connection": "9111",
        "pageref": "page_18"
      },
      {
        "startedDateTime": "2017-02-22T10:52:35.146Z",
        "time": 0,
        "request": {
          "method": "GET",
          "url": "https://platform.twitter.com/widgets.js",
          "httpVersion": "unknown",
          "headers": [
            {
              "name": "Referer",
              "value": "https://web.hfelo.se/flirt4free.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36 OPR/43.0.2442.806"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 0,
          "statusText": "",
          "httpVersion": "unknown",
          "headers": [],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "x-unknown"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 0,
          "_error": "net::ERR_CONNECTION_RESET"
        },
        "cache": {},
        "timings": {
          "blocked": -1,
          "dns": -1,
          "connect": -1,
          "send": 0,
          "wait": 0,
          "receive": 0,
          "ssl": -1
        },
        "serverIPAddress": "",
        "pageref": "page_18"
      }
    ]
  }
}