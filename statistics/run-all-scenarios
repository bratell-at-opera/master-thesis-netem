#!/usr/bin/env python3

import time
import sys
import os
import subprocess
from scenarios import scenarios, \
                      bandwidth_scenarios, \
                      loss_scenarios, \
                      extra_scenarios, \
                      latency_scenarios

if len(sys.argv) not in [3, 4]:
    print("Incorrect nr args!")
    sys.exit(1)

this_folder = os.path.dirname(os.path.realpath(__file__))
log_file = this_folder + \
           os.path.sep + \
           ".." + os.path.sep \
           + "logs" + os.path.sep \
           + "netem.all.log"
scenarios_to_run = None
protocol = None

if len(sys.argv) == 4:
    protocol = sys.argv[2:4]
else:
    protocol = [sys.argv[2]]
print("Using protocol: " + str(protocol))

if sys.argv[1] == "--bandwidth":
    scenarios_to_run = bandwidth_scenarios
elif sys.argv[1] == "--latency":
    scenarios_to_run = latency_scenarios
elif sys.argv[1] == "--loss":
    scenarios_to_run = loss_scenarios
elif sys.argv[1] == "--all":
    scenarios_to_run = scenarios
elif sys.argv[1] == "--extra-scenarios":
    scenarios_to_run = extra_scenarios
else:
    print("Incorrect nr args!")
    sys.exit(2)

# Run all scenatios
# Open connections
for scenario in scenarios_to_run:
    print("Runing open connection test: " + str(scenario[1]))
    subprocess.check_call(
        [this_folder + os.path.sep + ".." + os.path.sep + "netem"] +
        scenario[1] +
        ["--open-connection", "--browser=google-chrome", "-g"] +
        protocol
        #stdout=open(log_file, "a+")
        )
    time.sleep(5)

# Close connections
for scenario in scenarios_to_run:
    print("Runing closed connection test: ")
    for value in scenario:
        print(value)
    subprocess.check_call(
        [this_folder + os.path.sep + ".." + os.path.sep + "netem"] +
        scenario[1] +
        ["--browser=google-chrome", "-g"] +
        protocol
        #stdout=open(log_file, "a+")
        )
    time.sleep(5)

