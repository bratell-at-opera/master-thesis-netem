#!/usr/bin/env python3

import statistics
import sys
import os
import json
from scenarios import bandwidth_scenarios
import subprocess
from matplotlib import pyplot


this_folder = os.path.dirname(os.path.realpath(__file__))
fig_nr = 1


for scen in bandwidth_scenarios:
    scenario_id = ""
    for val in scen:
        scenario_id += val + ", "
    # Open connections
    process = subprocess.Popen(
        [this_folder + os.path.sep + "generate-stats"] +
        scen +
        ["--open-connection", "-h1"],
        stdout=subprocess.PIPE
        )
    http1_out, http1_err = process.communicate()
    process = subprocess.Popen(
        [this_folder + os.path.sep + "generate-stats"] +
        scen +
        ["--open-connection", "-h2"],
        stdout=subprocess.PIPE
        )
    http2_out, http2_err = process.communicate()
    process = subprocess.Popen(
        [this_folder + os.path.sep + "generate-stats"] +
        scen +
        ["--open-connection", "-q", "-pq"],
        stdout=subprocess.PIPE
        )
    quic_out, quic_err = process.communicate()

    outs = []
    outs.append(json.loads(http2_out.decode('utf-8')))
    outs.append(json.loads(quic_out.decode('utf-8')))

    # Create plot
    #pyplot.figure(fig_nr)
    #fig_nr += 1
    fig, ax = pyplot.subplots()

    for data in outs:
        nr_urls = 0
        urls = []
        url_means = []

        for url, stats_list in data["webpages"].items():
            nr_urls = nr_urls + 1
            new_values = []
            for stat in stats_list:
                if stat["status"] is True:
                    new_values.append(stat["resource_count"])
            if len(new_values) != 0:
                url_means.append(
                    statistics.mean(new_values)
                    )
                urls.append(url)

        url_means.sort()
        cdf_scaler = []
        y_value = 0
        for i in range(0, nr_urls):
            cdf_scaler.append(y_value)
            y_value += 1/float(nr_urls)


        ax.errorbar(url_means, cdf_scaler, label=data["identifiers"]["web_protocol"])
        #pyplot.plot(url_means, cdf_scaler)
    pyplot.xlabel('Nr resources fetched')
    pyplot.ylabel('Ranking')
    pyplot.title('CDF ' + scenario_id)
    pyplot.legend(bbox_to_anchor=(0.285, 0.99), loc=1, borderaxespad=0.)
    pyplot.grid(True)

pyplot.show()
