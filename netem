#!/bin/bash

function printHelp {
    if [ -n "$2" ]; then
        echo "ERROR: $2"
        echo ""
    else
        echo "netem - Web protocol analyzer which simulates a bottleneck link of your choise."
    fi
    echo
    echo "Usage:"
    echo "  $1 [-q|--quic|-h2|--http2|-h1|--http1]"
    echo ""
    echo "-d|--debug"
    echo "      Run browser on primary display. Default is to initialize virtual display."
    echo ""
    echo "-h2|--http2"
    echo "      Use a web server serving pages using HTTP/2."
    echo ""
    echo "-h1|--http1"
    echo "      Use a web server serving pages using HTTP/1.1."
    echo ""
    echo "-q|--quic"
    echo "      Use a web server serving pages using QUIC."
    echo ""
    echo "-pq|--proto-quic"
    echo "      Use the goquic server implementation instead of Caddy for serving QUIC. This uses proto-quic which is extracted from Chromium sources."
    echo ""
    echo "--loss-prob-move-to-gap-dl= / --loss-prob-move-to-gap-dl="
    echo "      Given in percent. Specify the probability of switching state in the Gilbert-Elliot model of loss rate, for the down-link/up-link  respectively. Note: Up-link rarely sees loss in cellular networks. "
    echo ""
    echo "--loss-rate-burst-dl= / --loss-rate-burst-ul="
    echo "      Given in percent. Specify the loss rate on the down-link/up-link in the burst state (Gilbert-Elliot model see https://en.wikipedia.org/wiki/Burst_error) given in percent. 1-3% on down-link in rare cases but mostly below 1% by an order of magnitude. Up-link rarely sees loss in cellular networks. "
    echo ""
    echo "--loss-prob-move-burst-dl= / --loss-prob-move-burst-ul="
    echo "      Given in percent. Specify the loss rate on the down-link/up-link in the burst state (Gilbert-Elliot model see https://en.wikipedia.org/wiki/Burst_error) given in percent. 1-3% on down-link in rare cases but mostly below 1% by an order of magnitude. Up-link rarely sees loss in cellular networks. "
    echo ""
    echo "--delay-dl= / --delay-ul"
    echo "      Specify the delay in ms on the down-link/up-link. "
    echo ""
    echo "--delay-deviation-dl= / --delay-deviation-ul"
    echo "      Specify the standard deviation of the delay ms on the down-link/up-link. "
    echo ""
    echo "--bandwidth-dl= / --bandwidth-ul"
    echo "      Specify the bandiwdth in Mbit/s on down-link/up-link"
    echo ""
    echo "--bw-trace="
    echo "      Specify a bandwidth trace for the down-link and up-link"
    echo ""
    echo "--trace-multiplyer-ul="
    echo "      Specify a multiplyer to scale the bandwidth trace for the up-link"
    echo ""
    echo "--trace-multiplyer-dl="
    echo "      Specify a multiplyer to scale the bandwidth trace for the down-link"
    echo ""
    echo "--open-connection"
    echo "      Use an open connection over the duration of the test (HTTP/2 and QUIC only)."
    exit 1
}

if [ "$USER" != "root" ]; then
    printHelp $0 "Must be run as root!"
fi

netem_folder=$(realpath $(dirname $0))
myUser=$(logname)
timeout=60
max_retries=3
caddy=/home/fille/go/bin/caddy
quic_server=/home/fille/go/bin/quic-server

limit_args=""
urlloader_args=""
delay=0
trace_mp_down=1
trace_mp_up=1
connection_type="close"

# Set extblog extension in bash in order for case-switch to work (disabled when executing script)
shopt -s extglob
# Handle in-arguments
for argument in "$@"
do
    case $argument in
        "--loss-prob-move-to-gap-dl="*)
            limit_args="$limit_args $argument"
            loss_move_to_gap_dl=${argument#*=}
            shift
            ;;
        "--loss-prob-move-to-burst-dl="*)
            limit_args="$limit_args $argument"
            loss_move_to_burst_dl=${argument#*=}
            shift
            ;;
        "--loss-rate-burst-dl="*)
            limit_args="$limit_args $argument"
            loss_rate_burst_dl=${argument#*=}
            shift
            ;;
         "--loss-prob-move-to-gap-ul="*)
            limit_args="$limit_args $argument"
            loss_move_to_gap_ul=${argument#*=}
            shift
            ;;
        "--loss-prob-move-to-burst-ul="*)
            limit_args="$limit_args $argument"
            loss_move_to_burst_ul=${argument#*=}
            shift
            ;;
        "--loss-rate-burst-ul="*)
            limit_args="$limit_args $argument"
            loss_rate_burst_ul=${argument#*=}
            shift
            ;;
        -q|--quic)
            web_protocol="--quic"
            urlloader_args="$urlloader_args $argument"
            proto_identifier="QUIC"
            shift
            ;;
        -pq|--proto-quic)
            proto_quic=true
            urlloader_args="$urlloader_args $argument"
            shift
            ;;
        -h2|--http2)
            web_protocol="--http2"
            urlloader_args="$urlloader_args $argument"
            proto_identifier="HTTP2"
            shift
            ;;
        -h1|--http1)
            web_protocol="--http1"
            urlloader_args="$urlloader_args $argument"
            proto_identifier="HTTP"
            shift
            ;;
        --delay-dl=*)
            limit_args="$limit_args $argument"
            delay_dl=${argument#*=}
            shift
            ;;
        --delay-ul=*)
            limit_args="$limit_args $argument"
            delay_ul=${argument#*=}
            shift
            ;;
        --delay-deviation-ul=*)
            limit_args="$limit_args $argument"
            deviation_ul=${argument#*=}
            shift
            ;;
        --delay-deviation-dl=*)
            limit_args="$limit_args $argument"
            deviation_dl=${argument#*=}
            shift
            ;;
        --bandwidth-ul=*)
            limit_args="$limit_args $argument"
            bandwidth_ul=${argument#*=}
            shift
            ;;
        --bandwidth-dl=*)
            limit_args="$limit_args $argument"
            bandwidth_dl=${argument#*=}
            shift
            ;;
        --browser=*)
            urlloader_args="$urlloader_args $argument"
            shift
            ;;
        --webserver=*)
            webserver=${argument#*=}
            shift
            ;;
        -g|--with-gui)
            urlloader_args="$urlloader_args $argument"
            shift
            ;;
        -d|--debug)
            urlloader_args="$urlloader_args $argument"
            shift
            ;;
        --bw-trace=*)
            limit_args="$limit_args $argument"
            trace=true
            shift
            ;;
        --trace-multiplyer-dl=*)
            limit_args="$limit_args $argument"
            trace_mp_down=${argument#*=}
            shift
            ;;
        --trace-multiplyer-ul=*)
            limit_args="$limit_args $argument"
            trace_mp_up=${argument#*=}
            shift
            ;;
        --open-connection)
            urlloader_args="$urlloader_args $argument"
            connection_type="open"
            shift
            ;;
        *)
            printHelp $0 "Invalid argument: $argument"
            ;;
    esac
done

# ---------------------------

if [ -z "$delay_deviation_dl" ] && [ "$trace" = true ]; then
    deviation_dl=2.5
    limit_args="$limit_args --delay-deviation-dl=2.5"
fi
if [ -z "$delay_deviation_ul" ] && [ "$trace" = true ]; then
    deviation_ul=0.1
    limit_args="$limit_args --delay-deviation-ul=0.1"
fi

# Sanity checks
if [ -z "$web_protocol" ]; then
    printHelp $0 "No protocol chosen! Please choose at least one of the protocols QUIC, HTTP2 or HTTP."
fi

if [ -n "$webserver" ] && ( [ "$web_protocol" = "--quic" ] || [ "$web_protocol" = "--http1" ] )
then
    printHelp $0 "You can only use chosen protocol $web_protocol with default web server."
fi

if [ "$web_protocol" = "--quic" ] && [ "$proto_quic" = true ]; then
    proto_identifier="PROTO-QUIC"
fi

# Create an unique identifier for this r-un
identifier="$proto_identifier"-"$connection_type"_bw

if [ "$trace" = true ]; then
    identifier="$identifier"-trace-"$trace_mp_down"-"$trace_mp_up"
else
    identifier="$identifier"-"$bandwidth_dl"-"$bandwidth_ul"
fi

identifier="$identifier"_loss-"$loss_move_to_gap_dl"-"$loss_move_to_burst_dl"-"$loss_rate_burst_dl"-"$loss_move_to_gap_ul"-"$loss_move_to_burst_ul"-"$loss_rate_burst_ul"_dev-"$deviation_dl"-"$deviation_ul"_delay-"$delay_dl"-"$delay_ul"_
identifier="$identifier""$(date '+%Y-%m-%d_%H-%M')"

urlloader_args="$urlloader_args --identifier=$identifier"

# Setup link limits
$netem_folder/net-setup/limit-bottleneck.bash $limit_args
if [ $? != 0 ]; then
    echo "ERROR: Failed to limit network links!"
    exit 3
fi

# Read ns_identifier
source $netem_folder/identifiers.conf

# ------------------ RUN
pid_file="/tmp/netem.$ns_identifier.server.pid"
touch $pid_file
# Setup a webserver of some sort
if [ "$web_protocol" = "--http2" ]; then
    if [ "$webserver" = "nginx" ]; then
        ip netns exec server-ns-$ns_identifier nginx -p $(realpath $(dirname .)) -c config/nginx.conf
    else
        ip netns exec server-ns-$ns_identifier $caddy -conf="$netem_folder/config/netem.Caddyfile" -pidfile="$pid_file" &
    fi

elif [ "$web_protocol" = "--quic" ]; then
    if [ "$proto_quic" = true ]; then
        ip netns exec server-ns-$ns_identifier $quic_server -cert $netem_folder/certs/cert.pem -key $netem_folder/certs/key.pem -root $netem_folder/webroot -quic_only -port 443 &
    else
        ip netns exec server-ns-$ns_identifier $caddy -quic -conf="$netem_folder/config/netem.Caddyfile" -pidfile="$pid_file" &
    fi

elif [ $web_protocol = "--http1" ]; then
    ip netns exec server-ns-$ns_identifier $caddy -http2=false -conf="$netem_folder/config/netem.Caddyfile" -pidfile="$pid_file" &
else
    printHelp $0 "No protocol chosen! Please choose at least one of the protocols QUIC, HTTP2 or HTTP1."
fi

# Run browser
ip netns exec client-ns-$ns_identifier su $myUser -c "$netem_folder/browser-controller/urlloader.bash $urlloader_args"

# ----------------- TEARDOWN
# Close web server of some sort
if [ "$proto_quic" = true ]; then
    killall $quic_server
else
    kill -QUIT $( cat $pid_file )
fi
if [ "$trace" = true ]; then
    kill $(cat /tmp/netem.$ns_identifier.bw-controller.pid)
fi

